#trying to recreate the HA stuff I did thru SAS and R
#local

NYC$Group200 <- (NYC$B19001_017/NYC$B19001_001)
NYC$Group150_200 <- (NYC$B19001_017 + NYC$B19001_016)/NYC$B19001_001;
NYC$Group125_150 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015)/NYC$B19001_001;
NYC$Group100_125 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014)/NYC$B19001_001;
NYC$Group75_100 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013)/NYC$B19001_001;
NYC$Group60_75 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012)/NYC$B19001_001;
NYC$Group50_60 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011)/NYC$B19001_001;
NYC$Group45_50 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010)/NYC$B19001_001;
NYC$Group40_45 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009)/NYC$B19001_001;
NYC$Group35_40 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008)/NYC$B19001_001;
NYC$Group30_35 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007)/NYC$B19001_001;
NYC$Group25_30 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007 + NYC$B19001_006)/NYC$B19001_001;
NYC$Group20_25 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007 + NYC$B19001_006 + NYC$B19001_005)/NYC$B19001_001;
NYC$Group15_20 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007 + NYC$B19001_006 + NYC$B19001_005 + NYC$B19001_004)/NYC$B19001_001;
NYC$Group10_15 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007 + NYC$B19001_006 + NYC$B19001_005 + NYC$B19001_004 + NYC$B19001_003)/NYC$B19001_001;
NYC$Group10 <- (NYC$B19001_017 + NYC$B19001_016 + NYC$B19001_015 + NYC$B19001_014 + NYC$B19001_013 + NYC$B19001_012 + NYC$B19001_011 + NYC$B19001_010 + NYC$B19001_009 + NYC$B19001_008 + NYC$B19001_007 + NYC$B19001_006 + NYC$B19001_005 + NYC$B19001_004 + NYC$B19001_003 + NYC$B19001_002)/NYC$B19001_001;
NYC$ReverseGroup10 <- (NYC$B19001_002)/NYC$B19001_001;
NYC$ReverseGroup10_15 <- (NYC$B19001_002 + NYC$B19001_003)/NYC$B19001_001;
NYC$ReverseGroup15_20 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004)/NYC$B19001_001;
NYC$ReverseGroup20_25 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005)/NYC$B19001_001;
NYC$ReverseGroup25_30 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006)/NYC$B19001_001;
NYC$ReverseGroup30_35 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007)/NYC$B19001_001;
NYC$ReverseGroup35_40 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007 + NYC$B19001_008)/NYC$B19001_001;
NYC$ReverseGroup40_45 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007 + NYC$B19001_008 + NYC$B19001_009)/NYC$B19001_001;
NYC$ReverseGroup45_50 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007 + NYC$B19001_008 + NYC$B19001_009 + NYC$B19001_010)/NYC$B19001_001;
NYC$ReverseGroup50_60 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007 + NYC$B19001_008 + NYC$B19001_009 + NYC$B19001_010 + NYC$B19001_011)/NYC$B19001_001;
NYC$ReverseGroup60_75 <- (NYC$B19001_002 + NYC$B19001_003 + NYC$B19001_004 + NYC$B19001_005 + NYC$B19001_006 + NYC$B19001_007 + NYC$B19001_008 + NYC$B19001_009 + NYC$B19001_010 + NYC$B19001_011 + NYC$B19001_012)/NYC$B19001_001;

NYC$LocalEnt200 <- NYC$B19001_001 * ((NYC$Group200)*log2(1/(NYC$Group200)) + 
                                       (1-(NYC$Group200))*log2(1/(1-(NYC$Group200))))

NYC$LocalEnt150_200 <- NYC$B19001_001 * ((NYC$Group150_200)*log2(1/(NYC$Group150_200)) + 
                                           (1-(NYC$Group150_200))*log2(1/(1-(NYC$Group150_200))))

NYC$LocalEnt125_150 <- NYC$B19001_001 * ((NYC$Group125_150)*log2(1/(NYC$Group125_150)) + 
                                           (1-(NYC$Group125_150))*log2(1/(1-(NYC$Group125_150))))

NYC$LocalEnt100_125 <- NYC$B19001_001 * ((NYC$Group100_125)*log2(1/(NYC$Group100_125)) + 
                                           (1-(NYC$Group100_125))*log2(1/(1-(NYC$Group100_125))))

NYC$LocalEnt75_100 <- NYC$B19001_001 * ((NYC$Group75_100)*log2(1/(NYC$Group75_100)) + 
                                          (1-(NYC$Group75_100))*log2(1/(1-(NYC$Group75_100))))

NYC$LocalEnt60_75 <- NYC$B19001_001 * ((NYC$Group60_75)*log2(1/(NYC$Group60_75)) + 
                                         (1-(NYC$Group60_75))*log2(1/(1-(NYC$Group60_75))))

NYC$LocalEnt50_60 <- NYC$B19001_001 * ((NYC$Group50_60)*log2(1/(NYC$Group50_60)) + 
                                         (1-(NYC$Group50_60))*log2(1/(1-(NYC$Group50_60))))

NYC$LocalEnt45_50 <- NYC$B19001_001 * ((NYC$Group45_50)*log2(1/(NYC$Group45_50)) + 
                                         (1-(NYC$Group45_50))*log2(1/(1-(NYC$Group45_50))))

NYC$LocalEnt40_45 <- NYC$B19001_001 * ((NYC$Group40_45)*log2(1/(NYC$Group40_45)) + 
                                         (1-(NYC$Group40_45))*log2(1/(1-(NYC$Group40_45))))

NYC$LocalEnt35_40 <- NYC$B19001_001 * ((NYC$Group35_40)*log2(1/(NYC$Group35_40)) + 
                                         (1-(NYC$Group35_40))*log2(1/(1-(NYC$Group35_40))))

NYC$LocalEnt30_35 <- NYC$B19001_001 * ((NYC$Group30_35)*log2(1/(NYC$Group30_35)) + 
                                         (1-(NYC$Group30_35))*log2(1/(1-(NYC$Group30_35))))

NYC$LocalEnt25_30 <- NYC$B19001_001 * ((NYC$Group25_30)*log2(1/(NYC$Group25_30)) + 
                                         (1-(NYC$Group25_30))*log2(1/(1-(NYC$Group25_30))))

NYC$LocalEnt20_25 <- NYC$B19001_001 * ((NYC$Group20_25)*log2(1/(NYC$Group20_25)) + 
                                         (1-(NYC$Group20_25))*log2(1/(1-(NYC$Group20_25))))

NYC$LocalEnt15_20 <- NYC$B19001_001 * ((NYC$Group15_20)*log2(1/(NYC$Group15_20)) + 
                                         (1-(NYC$Group15_20))*log2(1/(1-(NYC$Group15_20))))

NYC$LocalEnt10_15 <- NYC$B19001_001 * ((NYC$Group10_15)*log2(1/(NYC$Group10_15)) + 
                                         (1-(NYC$Group10_15))*log2(1/(1-(NYC$Group10_15))))

NYC$LocalEnt10 <- NYC$B19001_001 * ((NYC$Group10)*log2(1/(NYC$Group10)) + 
                                      (1-(NYC$Group10))*log2(1/(1-(NYC$Group10))))

NYC$ReverseLocalEnt10 <- NYC$B19001_001 * ((NYC$ReverseGroup10)*log2(1/(NYC$ReverseGroup10)) + 
                                             (1-(NYC$ReverseGroup10))*log2(1/(1-(NYC$ReverseGroup10))))

NYC$ReverseLocalEnt10_15 <- NYC$B19001_001 * ((NYC$ReverseGroup10_15)*log2(1/(NYC$ReverseGroup10_15)) + 
                                                (1-(NYC$ReverseGroup10_15))*log2(1/(1-(NYC$ReverseGroup10_15))))

NYC$ReverseLocalEnt15_20 <- NYC$B19001_001 * ((NYC$ReverseGroup15_20)*log2(1/(NYC$ReverseGroup15_20)) + 
                                                (1-(NYC$ReverseGroup15_20))*log2(1/(1-(NYC$ReverseGroup15_20))))

NYC$ReverseLocalEnt20_25 <- NYC$B19001_001 * ((NYC$ReverseGroup20_25)*log2(1/(NYC$ReverseGroup20_25)) + 
                                                (1-(NYC$ReverseGroup20_25))*log2(1/(1-(NYC$ReverseGroup20_25))))

NYC$ReverseLocalEnt25_30 <- NYC$B19001_001 * ((NYC$ReverseGroup25_30)*log2(1/(NYC$ReverseGroup25_30)) + 
                                                (1-(NYC$ReverseGroup25_30))*log2(1/(1-(NYC$ReverseGroup25_30))))

NYC$ReverseLocalEnt30_35 <- NYC$B19001_001 * ((NYC$ReverseGroup30_35)*log2(1/(NYC$ReverseGroup30_35)) + 
                                                (1-(NYC$ReverseGroup30_35))*log2(1/(1-(NYC$ReverseGroup30_35))))


#HA stuff Total


NYCTOTALS <- NYC %>%
  summarise(MSAB19001_001 = sum(NYC$B19001_001), MSAB19001_002 = sum(NYC$B19001_002), MSAB19001_003 = sum(NYC$B19001_003), MSAB19001_004 = sum(NYC$B19001_004),
            MSAB19001_005 = sum(NYC$B19001_005), MSAB19001_006 = sum(NYC$B19001_006), MSAB19001_007 = sum(NYC$B19001_007),
            MSAB19001_008 = sum(NYC$B19001_008), MSAB19001_009 = sum(NYC$B19001_009), MSAB19001_010 = sum(NYC$B19001_010),
            MSAB19001_011 = sum(NYC$B19001_011), MSAB19001_012 = sum(NYC$B19001_012), MSAB19001_013 = sum(NYC$B19001_013),
            MSAB19001_014 = sum(NYC$B19001_014), MSAB19001_015 = sum(NYC$B19001_015), MSAB19001_016 = sum(NYC$B19001_016),
            MSAB19001_017 = sum(NYC$B19001_017))


NYCTOTALS$MSAGroup200 <- (NYCTOTALS$MSAB19001_017/NYCTOTALS$MSAB19001_001)
NYCTOTALS$MSAGroup150_200 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup125_150 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup100_125 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup75_100 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup60_75 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup50_60 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup45_50 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup40_45 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup35_40 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup30_35 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup25_30 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_006)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup20_25 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_005)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup15_20 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_004)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup10_15 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_003)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$MSAGroup10 <- (NYCTOTALS$MSAB19001_017 + NYCTOTALS$MSAB19001_016 + NYCTOTALS$MSAB19001_015 + NYCTOTALS$MSAB19001_014 + NYCTOTALS$MSAB19001_013 + NYCTOTALS$MSAB19001_012 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_002)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup10 <- (NYCTOTALS$MSAB19001_002)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup10_15 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup15_20 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup20_25 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup25_30 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup30_35 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup35_40 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_008)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup40_45 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_009)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup45_50 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_010)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup50_60 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_011)/NYCTOTALS$MSAB19001_001;
NYCTOTALS$ReverseMSAGroup60_75 <- (NYCTOTALS$MSAB19001_002 + NYCTOTALS$MSAB19001_003 + NYCTOTALS$MSAB19001_004 + NYCTOTALS$MSAB19001_005 + NYCTOTALS$MSAB19001_006 + NYCTOTALS$MSAB19001_007 + NYCTOTALS$MSAB19001_008 + NYCTOTALS$MSAB19001_009 + NYCTOTALS$MSAB19001_010 + NYCTOTALS$MSAB19001_011 + NYCTOTALS$MSAB19001_012)/NYCTOTALS$MSAB19001_001;

NYCTOTALS$TotalEnt200 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup200)*log2(1/(NYCTOTALS$MSAGroup200)) + 
                                                      (1-(NYCTOTALS$MSAGroup200))*log2(1/(1-(NYCTOTALS$MSAGroup200))))

NYCTOTALS$TotalEnt150_200 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup150_200)*log2(1/(NYCTOTALS$MSAGroup150_200)) + 
                                                          (1-(NYCTOTALS$MSAGroup150_200))*log2(1/(1-(NYCTOTALS$MSAGroup150_200))))

NYCTOTALS$TotalEnt125_150 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup125_150)*log2(1/(NYCTOTALS$MSAGroup125_150)) + 
                                                          (1-(NYCTOTALS$MSAGroup125_150))*log2(1/(1-(NYCTOTALS$MSAGroup125_150))))

NYCTOTALS$TotalEnt100_125 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup100_125)*log2(1/(NYCTOTALS$MSAGroup100_125)) + 
                                                          (1-(NYCTOTALS$MSAGroup100_125))*log2(1/(1-(NYCTOTALS$MSAGroup100_125))))

NYCTOTALS$TotalEnt75_100 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup75_100)*log2(1/(NYCTOTALS$MSAGroup75_100)) + 
                                                         (1-(NYCTOTALS$MSAGroup75_100))*log2(1/(1-(NYCTOTALS$MSAGroup75_100))))

NYCTOTALS$TotalEnt60_75 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup60_75)*log2(1/(NYCTOTALS$MSAGroup60_75)) + 
                                                        (1-(NYCTOTALS$MSAGroup60_75))*log2(1/(1-(NYCTOTALS$MSAGroup60_75))))

NYCTOTALS$TotalEnt50_60 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup50_60)*log2(1/(NYCTOTALS$MSAGroup50_60)) + 
                                                        (1-(NYCTOTALS$MSAGroup50_60))*log2(1/(1-(NYCTOTALS$MSAGroup50_60))))

NYCTOTALS$TotalEnt45_50 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup45_50)*log2(1/(NYCTOTALS$MSAGroup45_50)) + 
                                                        (1-(NYCTOTALS$MSAGroup45_50))*log2(1/(1-(NYCTOTALS$MSAGroup45_50))))

NYCTOTALS$TotalEnt40_45 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup40_45)*log2(1/(NYCTOTALS$MSAGroup40_45)) + 
                                                        (1-(NYCTOTALS$MSAGroup40_45))*log2(1/(1-(NYCTOTALS$MSAGroup40_45))))

NYCTOTALS$TotalEnt35_40 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup35_40)*log2(1/(NYCTOTALS$MSAGroup35_40)) + 
                                                        (1-(NYCTOTALS$MSAGroup35_40))*log2(1/(1-(NYCTOTALS$MSAGroup35_40))))

NYCTOTALS$TotalEnt30_35 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup30_35)*log2(1/(NYCTOTALS$MSAGroup30_35)) + 
                                                        (1-(NYCTOTALS$MSAGroup30_35))*log2(1/(1-(NYCTOTALS$MSAGroup30_35))))

NYCTOTALS$TotalEnt25_30 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup25_30)*log2(1/(NYCTOTALS$MSAGroup25_30)) + 
                                                        (1-(NYCTOTALS$MSAGroup25_30))*log2(1/(1-(NYCTOTALS$MSAGroup25_30))))

NYCTOTALS$TotalEnt20_25 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup20_25)*log2(1/(NYCTOTALS$MSAGroup20_25)) + 
                                                        (1-(NYCTOTALS$MSAGroup20_25))*log2(1/(1-(NYCTOTALS$MSAGroup20_25))))

NYCTOTALS$TotalEnt15_20 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup15_20)*log2(1/(NYCTOTALS$MSAGroup15_20)) + 
                                                        (1-(NYCTOTALS$MSAGroup15_20))*log2(1/(1-(NYCTOTALS$MSAGroup15_20))))

NYCTOTALS$TotalEnt10_15 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup10_15)*log2(1/(NYCTOTALS$MSAGroup10_15)) + 
                                                        (1-(NYCTOTALS$MSAGroup10_15))*log2(1/(1-(NYCTOTALS$MSAGroup10_15))))

NYCTOTALS$TotalEnt10 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$MSAGroup10)*log2(1/(NYCTOTALS$MSAGroup10)) + 
                                                     (1-(NYCTOTALS$MSAGroup10))*log2(1/(1-(NYCTOTALS$MSAGroup10))))

NYCTOTALS$ReverseTotalEnt10 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup10)*log2(1/(NYCTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(NYCTOTALS$ReverseMSAGroup10))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup10))))

NYCTOTALS$ReverseTotalEnt10_15 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup10_15)*log2(1/(NYCTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(NYCTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup10_15))))

NYCTOTALS$ReverseTotalEnt15_20 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup15_20)*log2(1/(NYCTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(NYCTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup15_20))))

NYCTOTALS$ReverseTotalEnt20_25 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup20_25)*log2(1/(NYCTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(NYCTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup20_25))))

NYCTOTALS$ReverseTotalEnt25_30 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup25_30)*log2(1/(NYCTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(NYCTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup25_30))))

NYCTOTALS$ReverseTotalEnt30_35 <- NYCTOTALS$MSAB19001_001 * ((NYCTOTALS$ReverseMSAGroup30_35)*log2(1/(NYCTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(NYCTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
NYCTOTALS$E200 <- ((NYCTOTALS$MSAGroup200)*log2(1/(NYCTOTALS$MSAGroup200)) + (1-(NYCTOTALS$MSAGroup200))*log2(1/(1-(NYCTOTALS$MSAGroup200))))
NYCTOTALS$E150_200 <- ((NYCTOTALS$MSAGroup150_200)*log2(1/(NYCTOTALS$MSAGroup150_200)) + (1-(NYCTOTALS$MSAGroup150_200))*log2(1/(1-(NYCTOTALS$MSAGroup150_200))))
NYCTOTALS$E125_150 <- ((NYCTOTALS$MSAGroup125_150)*log2(1/(NYCTOTALS$MSAGroup125_150)) + (1-(NYCTOTALS$MSAGroup125_150))*log2(1/(1-(NYCTOTALS$MSAGroup125_150))))
NYCTOTALS$E100_125 <- ((NYCTOTALS$MSAGroup100_125)*log2(1/(NYCTOTALS$MSAGroup100_125)) + (1-(NYCTOTALS$MSAGroup100_125))*log2(1/(1-(NYCTOTALS$MSAGroup100_125))))
NYCTOTALS$E75_100 <- ((NYCTOTALS$MSAGroup75_100)*log2(1/(NYCTOTALS$MSAGroup75_100)) + (1-(NYCTOTALS$MSAGroup75_100))*log2(1/(1-(NYCTOTALS$MSAGroup75_100))))
NYCTOTALS$E60_75 <- ((NYCTOTALS$MSAGroup60_75)*log2(1/(NYCTOTALS$MSAGroup60_75)) + (1-(NYCTOTALS$MSAGroup60_75))*log2(1/(1-(NYCTOTALS$MSAGroup60_75))))
NYCTOTALS$E50_60 <- ((NYCTOTALS$MSAGroup50_60)*log2(1/(NYCTOTALS$MSAGroup50_60)) + (1-(NYCTOTALS$MSAGroup50_60))*log2(1/(1-(NYCTOTALS$MSAGroup50_60))))
NYCTOTALS$E50_60 <- ((NYCTOTALS$MSAGroup50_60)*log2(1/(NYCTOTALS$MSAGroup50_60)) + (1-(NYCTOTALS$MSAGroup50_60))*log2(1/(1-(NYCTOTALS$MSAGroup50_60))))
NYCTOTALS$E45_50 <- ((NYCTOTALS$MSAGroup45_50)*log2(1/(NYCTOTALS$MSAGroup45_50)) + (1-(NYCTOTALS$MSAGroup45_50))*log2(1/(1-(NYCTOTALS$MSAGroup45_50))))
NYCTOTALS$E40_45 <- ((NYCTOTALS$MSAGroup40_45)*log2(1/(NYCTOTALS$MSAGroup40_45)) + (1-(NYCTOTALS$MSAGroup40_45))*log2(1/(1-(NYCTOTALS$MSAGroup40_45))))
NYCTOTALS$E35_40 <- ((NYCTOTALS$MSAGroup35_40)*log2(1/(NYCTOTALS$MSAGroup35_40)) + (1-(NYCTOTALS$MSAGroup35_40))*log2(1/(1-(NYCTOTALS$MSAGroup35_40))))
NYCTOTALS$E30_35 <- ((NYCTOTALS$MSAGroup30_35)*log2(1/(NYCTOTALS$MSAGroup30_35)) + (1-(NYCTOTALS$MSAGroup30_35))*log2(1/(1-(NYCTOTALS$MSAGroup30_35))))
NYCTOTALS$E25_30 <- ((NYCTOTALS$MSAGroup25_30)*log2(1/(NYCTOTALS$MSAGroup25_30)) + (1-(NYCTOTALS$MSAGroup25_30))*log2(1/(1-(NYCTOTALS$MSAGroup25_30))))
NYCTOTALS$E20_25 <- ((NYCTOTALS$MSAGroup20_25)*log2(1/(NYCTOTALS$MSAGroup20_25)) + (1-(NYCTOTALS$MSAGroup20_25))*log2(1/(1-(NYCTOTALS$MSAGroup20_25))))
NYCTOTALS$E15_20 <- ((NYCTOTALS$MSAGroup15_20)*log2(1/(NYCTOTALS$MSAGroup15_20)) + (1-(NYCTOTALS$MSAGroup15_20))*log2(1/(1-(NYCTOTALS$MSAGroup15_20))))
NYCTOTALS$E10_15 <- ((NYCTOTALS$MSAGroup10_15)*log2(1/(NYCTOTALS$MSAGroup10_15)) + (1-(NYCTOTALS$MSAGroup10_15))*log2(1/(1-(NYCTOTALS$MSAGroup10_15))))
NYCTOTALS$E10 <- ((NYCTOTALS$MSAGroup10)*log2(1/(NYCTOTALS$MSAGroup10)) + (1-(NYCTOTALS$MSAGroup10))*log2(1/(1-(NYCTOTALS$MSAGroup10))))
NYCTOTALS$ReverseE10 <- ((NYCTOTALS$ReverseMSAGroup10)*log2(1/(NYCTOTALS$ReverseMSAGroup10)) + (1-(NYCTOTALS$ReverseMSAGroup10))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup10))))
NYCTOTALS$ReverseE10_15 <- ((NYCTOTALS$ReverseMSAGroup10_15)*log2(1/(NYCTOTALS$ReverseMSAGroup10_15)) + (1-(NYCTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup10_15))))
NYCTOTALS$ReverseE15_20 <- ((NYCTOTALS$ReverseMSAGroup15_20)*log2(1/(NYCTOTALS$ReverseMSAGroup15_20)) + (1-(NYCTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup15_20))))
NYCTOTALS$ReverseE20_25 <- ((NYCTOTALS$ReverseMSAGroup20_25)*log2(1/(NYCTOTALS$ReverseMSAGroup20_25)) + (1-(NYCTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup20_25))))
NYCTOTALS$ReverseE25_30 <- ((NYCTOTALS$ReverseMSAGroup25_30)*log2(1/(NYCTOTALS$ReverseMSAGroup25_30)) + (1-(NYCTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup25_30))))
NYCTOTALS$ReverseE30_35 <- ((NYCTOTALS$ReverseMSAGroup30_35)*log2(1/(NYCTOTALS$ReverseMSAGroup30_35)) + (1-(NYCTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup30_35))))
NYCTOTALS$ReverseE35_40 <- ((NYCTOTALS$ReverseMSAGroup35_40)*log2(1/(NYCTOTALS$ReverseMSAGroup35_40)) + (1-(NYCTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(NYCTOTALS$ReverseMSAGroup35_40))))


NYC$Section200 <- NYC$LocalEnt200 / NYCTOTALS$TotalEnt200
NYC$Section150_200 <- NYC$LocalEnt150_200 / NYCTOTALS$TotalEnt150_200
NYC$Section125_150 <- NYC$LocalEnt125_150 / NYCTOTALS$TotalEnt125_150
NYC$Section100_125 <- NYC$LocalEnt100_125 / NYCTOTALS$TotalEnt100_125
NYC$Section75_100 <- NYC$LocalEnt75_100 / NYCTOTALS$TotalEnt75_100
NYC$Section60_75 <- NYC$LocalEnt60_75 / NYCTOTALS$TotalEnt60_75
NYC$Section50_60 <- NYC$LocalEnt50_60 / NYCTOTALS$TotalEnt50_60
NYC$Section45_50 <- NYC$LocalEnt45_50 / NYCTOTALS$TotalEnt45_50
NYC$Section40_45 <- NYC$LocalEnt40_45 / NYCTOTALS$TotalEnt40_45
NYC$Section35_40 <- NYC$LocalEnt35_40 / NYCTOTALS$TotalEnt35_40
NYC$Section30_35 <- NYC$LocalEnt30_35 / NYCTOTALS$TotalEnt30_35
NYC$Section25_30 <- NYC$LocalEnt25_30 / NYCTOTALS$TotalEnt25_30
NYC$Section20_25 <- NYC$LocalEnt20_25 / NYCTOTALS$TotalEnt20_25
NYC$Section15_20 <- NYC$LocalEnt15_20 / NYCTOTALS$TotalEnt15_20
NYC$Section10_15 <- NYC$LocalEnt10_15 / NYCTOTALS$TotalEnt10_15
NYC$Section10 <- NYC$LocalEnt10 / NYCTOTALS$TotalEnt10
NYC$ReverseSection10 <- NYC$ReverseLocalEnt10 / NYCTOTALS$ReverseTotalEnt10
NYC$ReverseSection10_15 <- NYC$ReverseLocalEnt10_15 / NYCTOTALS$ReverseTotalEnt10_15
NYC$ReverseSection15_20 <- NYC$ReverseLocalEnt15_20 / NYCTOTALS$ReverseTotalEnt15_20
NYC$ReverseSection20_25 <- NYC$ReverseLocalEnt20_25 / NYCTOTALS$ReverseTotalEnt20_25
NYC$ReverseSection25_30 <- NYC$ReverseLocalEnt25_30 / NYCTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
NYC[is.na(NYC)] <- 0

NYCTOTALS$Percent200 <- 1 - sum(NYC$Section200)
NYCTOTALS$Percent150_200 <- 1 - sum(NYC$Section150_200)
NYCTOTALS$Percent125_150 <- 1 - sum(NYC$Section125_150)
NYCTOTALS$Percent100_125 <- 1 - sum(NYC$Section100_125)
NYCTOTALS$Percent75_100 <- 1 - sum(NYC$Section75_100)
NYCTOTALS$Percent60_75 <- 1 - sum(NYC$Section60_75)
NYCTOTALS$Percent50_60 <- 1 - sum(NYC$Section50_60)
NYCTOTALS$Percent45_50 <- 1 - sum(NYC$Section45_50)
NYCTOTALS$Percent40_45 <- 1 - sum(NYC$Section40_45)
NYCTOTALS$Percent35_40 <- 1 - sum(NYC$Section35_40)
NYCTOTALS$Percent30_35 <- 1 - sum(NYC$Section30_35)
NYCTOTALS$Percent25_30 <- 1 - sum(NYC$Section25_30)
NYCTOTALS$Percent20_25 <- 1 - sum(NYC$Section20_25)
NYCTOTALS$Percent15_20 <- 1 - sum(NYC$Section15_20)
NYCTOTALS$Percent10_15 <- 1 - sum(NYC$Section10_15)
NYCTOTALS$Percent10 <- 1 - sum(NYC$Section10)
NYCTOTALS$ReversePercent10 <- 1 - sum(NYC$ReverseSection10)
NYCTOTALS$ReversePercent10_15 <- 1 - sum(NYC$ReverseSection10_15)
NYCTOTALS$ReversePercent15_20 <- 1 - sum(NYC$ReverseSection15_20)
NYCTOTALS$ReversePercent20_25 <- 1 - sum(NYC$ReverseSection20_25)
NYCTOTALS$ReversePercent25_30 <- 1 - sum(NYC$ReverseSection25_30)


NYCTOTALS$Weight200 <- NYCTOTALS$E200 * NYCTOTALS$Percent200
NYCTOTALS$Weight150_200 <- (NYCTOTALS$E150_200 * NYCTOTALS$Percent150_200)
NYCTOTALS$Weight125_150 <- (NYCTOTALS$E125_150 * NYCTOTALS$Percent125_150) 
NYCTOTALS$Weight100_125 <- (NYCTOTALS$E100_125 * NYCTOTALS$Percent100_125) 
NYCTOTALS$Weight75_100 <- (NYCTOTALS$E75_100 * NYCTOTALS$Percent75_100)
NYCTOTALS$Weight60_75 <- (NYCTOTALS$E60_75 * NYCTOTALS$Percent60_75) 
NYCTOTALS$Weight50_60 <- (NYCTOTALS$E50_60 * NYCTOTALS$Percent50_60) 
NYCTOTALS$Weight45_50 <- (NYCTOTALS$E45_50 * NYCTOTALS$Percent45_50)
NYCTOTALS$Weight40_45 <- (NYCTOTALS$E40_45 * NYCTOTALS$Percent40_45) 
NYCTOTALS$Weight35_40 <- (NYCTOTALS$E35_40 * NYCTOTALS$Percent35_40) 
NYCTOTALS$Weight30_35 <- (NYCTOTALS$E30_35 * NYCTOTALS$Percent30_35)
NYCTOTALS$Weight25_30 <- (NYCTOTALS$E25_30 * NYCTOTALS$Percent25_30) 
NYCTOTALS$Weight20_25 <- (NYCTOTALS$E20_25 * NYCTOTALS$Percent20_25)
NYCTOTALS$Weight15_20 <- (NYCTOTALS$E15_20 * NYCTOTALS$Percent15_20) 
NYCTOTALS$Weight10_15 <- (NYCTOTALS$E10_15 * NYCTOTALS$Percent10_15) 
NYCTOTALS$Weight10 <- (NYCTOTALS$E10 * NYCTOTALS$Percent10) 
NYCTOTALS$ReverseWeight10 <- (NYCTOTALS$ReverseE10 * NYCTOTALS$ReversePercent10)
NYCTOTALS$ReverseWeight10_15 <- (NYCTOTALS$ReverseE10_15 * NYCTOTALS$ReversePercent10_15)
NYCTOTALS$ReverseWeight15_20 <- (NYCTOTALS$ReverseE15_20 * NYCTOTALS$ReversePercent15_20)
NYCTOTALS$ReverseWeight20_25 <- (NYCTOTALS$ReverseE20_25 * NYCTOTALS$ReversePercent20_25)
NYCTOTALS$ReverseWeight25_30 <- (NYCTOTALS$ReverseE25_30 * NYCTOTALS$ReversePercent25_30)

#trying to recreate the HA stuff I did thru SAS and R
#local

DC$Group200 <- (DC$B19001_017/DC$B19001_001)
DC$Group150_200 <- (DC$B19001_017 + DC$B19001_016)/DC$B19001_001;
DC$Group125_150 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015)/DC$B19001_001;
DC$Group100_125 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014)/DC$B19001_001;
DC$Group75_100 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013)/DC$B19001_001;
DC$Group60_75 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012)/DC$B19001_001;
DC$Group50_60 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011)/DC$B19001_001;
DC$Group45_50 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010)/DC$B19001_001;
DC$Group40_45 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009)/DC$B19001_001;
DC$Group35_40 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008)/DC$B19001_001;
DC$Group30_35 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007)/DC$B19001_001;
DC$Group25_30 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007 + DC$B19001_006)/DC$B19001_001;
DC$Group20_25 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007 + DC$B19001_006 + DC$B19001_005)/DC$B19001_001;
DC$Group15_20 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007 + DC$B19001_006 + DC$B19001_005 + DC$B19001_004)/DC$B19001_001;
DC$Group10_15 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007 + DC$B19001_006 + DC$B19001_005 + DC$B19001_004 + DC$B19001_003)/DC$B19001_001;
DC$Group10 <- (DC$B19001_017 + DC$B19001_016 + DC$B19001_015 + DC$B19001_014 + DC$B19001_013 + DC$B19001_012 + DC$B19001_011 + DC$B19001_010 + DC$B19001_009 + DC$B19001_008 + DC$B19001_007 + DC$B19001_006 + DC$B19001_005 + DC$B19001_004 + DC$B19001_003 + DC$B19001_002)/DC$B19001_001;
DC$ReverseGroup10 <- (DC$B19001_002)/DC$B19001_001;
DC$ReverseGroup10_15 <- (DC$B19001_002 + DC$B19001_003)/DC$B19001_001;
DC$ReverseGroup15_20 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004)/DC$B19001_001;
DC$ReverseGroup20_25 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005)/DC$B19001_001;
DC$ReverseGroup25_30 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006)/DC$B19001_001;
DC$ReverseGroup30_35 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007)/DC$B19001_001;
DC$ReverseGroup35_40 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007 + DC$B19001_008)/DC$B19001_001;
DC$ReverseGroup40_45 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007 + DC$B19001_008 + DC$B19001_009)/DC$B19001_001;
DC$ReverseGroup45_50 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007 + DC$B19001_008 + DC$B19001_009 + DC$B19001_010)/DC$B19001_001;
DC$ReverseGroup50_60 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007 + DC$B19001_008 + DC$B19001_009 + DC$B19001_010 + DC$B19001_011)/DC$B19001_001;
DC$ReverseGroup60_75 <- (DC$B19001_002 + DC$B19001_003 + DC$B19001_004 + DC$B19001_005 + DC$B19001_006 + DC$B19001_007 + DC$B19001_008 + DC$B19001_009 + DC$B19001_010 + DC$B19001_011 + DC$B19001_012)/DC$B19001_001;

DC$LocalEnt200 <- DC$B19001_001 * ((DC$Group200)*log2(1/(DC$Group200)) + 
                                     (1-(DC$Group200))*log2(1/(1-(DC$Group200))))

DC$LocalEnt150_200 <- DC$B19001_001 * ((DC$Group150_200)*log2(1/(DC$Group150_200)) + 
                                         (1-(DC$Group150_200))*log2(1/(1-(DC$Group150_200))))

DC$LocalEnt125_150 <- DC$B19001_001 * ((DC$Group125_150)*log2(1/(DC$Group125_150)) + 
                                         (1-(DC$Group125_150))*log2(1/(1-(DC$Group125_150))))

DC$LocalEnt100_125 <- DC$B19001_001 * ((DC$Group100_125)*log2(1/(DC$Group100_125)) + 
                                         (1-(DC$Group100_125))*log2(1/(1-(DC$Group100_125))))

DC$LocalEnt75_100 <- DC$B19001_001 * ((DC$Group75_100)*log2(1/(DC$Group75_100)) + 
                                        (1-(DC$Group75_100))*log2(1/(1-(DC$Group75_100))))

DC$LocalEnt60_75 <- DC$B19001_001 * ((DC$Group60_75)*log2(1/(DC$Group60_75)) + 
                                       (1-(DC$Group60_75))*log2(1/(1-(DC$Group60_75))))

DC$LocalEnt50_60 <- DC$B19001_001 * ((DC$Group50_60)*log2(1/(DC$Group50_60)) + 
                                       (1-(DC$Group50_60))*log2(1/(1-(DC$Group50_60))))

DC$LocalEnt45_50 <- DC$B19001_001 * ((DC$Group45_50)*log2(1/(DC$Group45_50)) + 
                                       (1-(DC$Group45_50))*log2(1/(1-(DC$Group45_50))))

DC$LocalEnt40_45 <- DC$B19001_001 * ((DC$Group40_45)*log2(1/(DC$Group40_45)) + 
                                       (1-(DC$Group40_45))*log2(1/(1-(DC$Group40_45))))

DC$LocalEnt35_40 <- DC$B19001_001 * ((DC$Group35_40)*log2(1/(DC$Group35_40)) + 
                                       (1-(DC$Group35_40))*log2(1/(1-(DC$Group35_40))))

DC$LocalEnt30_35 <- DC$B19001_001 * ((DC$Group30_35)*log2(1/(DC$Group30_35)) + 
                                       (1-(DC$Group30_35))*log2(1/(1-(DC$Group30_35))))

DC$LocalEnt25_30 <- DC$B19001_001 * ((DC$Group25_30)*log2(1/(DC$Group25_30)) + 
                                       (1-(DC$Group25_30))*log2(1/(1-(DC$Group25_30))))

DC$LocalEnt20_25 <- DC$B19001_001 * ((DC$Group20_25)*log2(1/(DC$Group20_25)) + 
                                       (1-(DC$Group20_25))*log2(1/(1-(DC$Group20_25))))

DC$LocalEnt15_20 <- DC$B19001_001 * ((DC$Group15_20)*log2(1/(DC$Group15_20)) + 
                                       (1-(DC$Group15_20))*log2(1/(1-(DC$Group15_20))))

DC$LocalEnt10_15 <- DC$B19001_001 * ((DC$Group10_15)*log2(1/(DC$Group10_15)) + 
                                       (1-(DC$Group10_15))*log2(1/(1-(DC$Group10_15))))

DC$LocalEnt10 <- DC$B19001_001 * ((DC$Group10)*log2(1/(DC$Group10)) + 
                                    (1-(DC$Group10))*log2(1/(1-(DC$Group10))))

DC$ReverseLocalEnt10 <- DC$B19001_001 * ((DC$ReverseGroup10)*log2(1/(DC$ReverseGroup10)) + 
                                           (1-(DC$ReverseGroup10))*log2(1/(1-(DC$ReverseGroup10))))

DC$ReverseLocalEnt10_15 <- DC$B19001_001 * ((DC$ReverseGroup10_15)*log2(1/(DC$ReverseGroup10_15)) + 
                                              (1-(DC$ReverseGroup10_15))*log2(1/(1-(DC$ReverseGroup10_15))))

DC$ReverseLocalEnt15_20 <- DC$B19001_001 * ((DC$ReverseGroup15_20)*log2(1/(DC$ReverseGroup15_20)) + 
                                              (1-(DC$ReverseGroup15_20))*log2(1/(1-(DC$ReverseGroup15_20))))

DC$ReverseLocalEnt20_25 <- DC$B19001_001 * ((DC$ReverseGroup20_25)*log2(1/(DC$ReverseGroup20_25)) + 
                                              (1-(DC$ReverseGroup20_25))*log2(1/(1-(DC$ReverseGroup20_25))))

DC$ReverseLocalEnt25_30 <- DC$B19001_001 * ((DC$ReverseGroup25_30)*log2(1/(DC$ReverseGroup25_30)) + 
                                              (1-(DC$ReverseGroup25_30))*log2(1/(1-(DC$ReverseGroup25_30))))

DC$ReverseLocalEnt30_35 <- DC$B19001_001 * ((DC$ReverseGroup30_35)*log2(1/(DC$ReverseGroup30_35)) + 
                                              (1-(DC$ReverseGroup30_35))*log2(1/(1-(DC$ReverseGroup30_35))))


#HA stuff Total


DCTOTALS <- DC %>%
  summarise(MSAB19001_001 = sum(DC$B19001_001), MSAB19001_002 = sum(DC$B19001_002), MSAB19001_003 = sum(DC$B19001_003), MSAB19001_004 = sum(DC$B19001_004),
            MSAB19001_005 = sum(DC$B19001_005), MSAB19001_006 = sum(DC$B19001_006), MSAB19001_007 = sum(DC$B19001_007),
            MSAB19001_008 = sum(DC$B19001_008), MSAB19001_009 = sum(DC$B19001_009), MSAB19001_010 = sum(DC$B19001_010),
            MSAB19001_011 = sum(DC$B19001_011), MSAB19001_012 = sum(DC$B19001_012), MSAB19001_013 = sum(DC$B19001_013),
            MSAB19001_014 = sum(DC$B19001_014), MSAB19001_015 = sum(DC$B19001_015), MSAB19001_016 = sum(DC$B19001_016),
            MSAB19001_017 = sum(DC$B19001_017))


DCTOTALS$MSAGroup200 <- (DCTOTALS$MSAB19001_017/DCTOTALS$MSAB19001_001)
DCTOTALS$MSAGroup150_200 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup125_150 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup100_125 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup75_100 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup60_75 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup50_60 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup45_50 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup40_45 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup35_40 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup30_35 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup25_30 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_006)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup20_25 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_005)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup15_20 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_004)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup10_15 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_003)/DCTOTALS$MSAB19001_001;
DCTOTALS$MSAGroup10 <- (DCTOTALS$MSAB19001_017 + DCTOTALS$MSAB19001_016 + DCTOTALS$MSAB19001_015 + DCTOTALS$MSAB19001_014 + DCTOTALS$MSAB19001_013 + DCTOTALS$MSAB19001_012 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_002)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup10 <- (DCTOTALS$MSAB19001_002)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup10_15 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup15_20 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup20_25 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup25_30 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup30_35 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup35_40 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_008)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup40_45 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_009)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup45_50 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_010)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup50_60 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_011)/DCTOTALS$MSAB19001_001;
DCTOTALS$ReverseMSAGroup60_75 <- (DCTOTALS$MSAB19001_002 + DCTOTALS$MSAB19001_003 + DCTOTALS$MSAB19001_004 + DCTOTALS$MSAB19001_005 + DCTOTALS$MSAB19001_006 + DCTOTALS$MSAB19001_007 + DCTOTALS$MSAB19001_008 + DCTOTALS$MSAB19001_009 + DCTOTALS$MSAB19001_010 + DCTOTALS$MSAB19001_011 + DCTOTALS$MSAB19001_012)/DCTOTALS$MSAB19001_001;

DCTOTALS$TotalEnt200 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup200)*log2(1/(DCTOTALS$MSAGroup200)) + 
                                                    (1-(DCTOTALS$MSAGroup200))*log2(1/(1-(DCTOTALS$MSAGroup200))))

DCTOTALS$TotalEnt150_200 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup150_200)*log2(1/(DCTOTALS$MSAGroup150_200)) + 
                                                        (1-(DCTOTALS$MSAGroup150_200))*log2(1/(1-(DCTOTALS$MSAGroup150_200))))

DCTOTALS$TotalEnt125_150 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup125_150)*log2(1/(DCTOTALS$MSAGroup125_150)) + 
                                                        (1-(DCTOTALS$MSAGroup125_150))*log2(1/(1-(DCTOTALS$MSAGroup125_150))))

DCTOTALS$TotalEnt100_125 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup100_125)*log2(1/(DCTOTALS$MSAGroup100_125)) + 
                                                        (1-(DCTOTALS$MSAGroup100_125))*log2(1/(1-(DCTOTALS$MSAGroup100_125))))

DCTOTALS$TotalEnt75_100 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup75_100)*log2(1/(DCTOTALS$MSAGroup75_100)) + 
                                                       (1-(DCTOTALS$MSAGroup75_100))*log2(1/(1-(DCTOTALS$MSAGroup75_100))))

DCTOTALS$TotalEnt60_75 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup60_75)*log2(1/(DCTOTALS$MSAGroup60_75)) + 
                                                      (1-(DCTOTALS$MSAGroup60_75))*log2(1/(1-(DCTOTALS$MSAGroup60_75))))

DCTOTALS$TotalEnt50_60 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup50_60)*log2(1/(DCTOTALS$MSAGroup50_60)) + 
                                                      (1-(DCTOTALS$MSAGroup50_60))*log2(1/(1-(DCTOTALS$MSAGroup50_60))))

DCTOTALS$TotalEnt45_50 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup45_50)*log2(1/(DCTOTALS$MSAGroup45_50)) + 
                                                      (1-(DCTOTALS$MSAGroup45_50))*log2(1/(1-(DCTOTALS$MSAGroup45_50))))

DCTOTALS$TotalEnt40_45 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup40_45)*log2(1/(DCTOTALS$MSAGroup40_45)) + 
                                                      (1-(DCTOTALS$MSAGroup40_45))*log2(1/(1-(DCTOTALS$MSAGroup40_45))))

DCTOTALS$TotalEnt35_40 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup35_40)*log2(1/(DCTOTALS$MSAGroup35_40)) + 
                                                      (1-(DCTOTALS$MSAGroup35_40))*log2(1/(1-(DCTOTALS$MSAGroup35_40))))

DCTOTALS$TotalEnt30_35 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup30_35)*log2(1/(DCTOTALS$MSAGroup30_35)) + 
                                                      (1-(DCTOTALS$MSAGroup30_35))*log2(1/(1-(DCTOTALS$MSAGroup30_35))))

DCTOTALS$TotalEnt25_30 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup25_30)*log2(1/(DCTOTALS$MSAGroup25_30)) + 
                                                      (1-(DCTOTALS$MSAGroup25_30))*log2(1/(1-(DCTOTALS$MSAGroup25_30))))

DCTOTALS$TotalEnt20_25 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup20_25)*log2(1/(DCTOTALS$MSAGroup20_25)) + 
                                                      (1-(DCTOTALS$MSAGroup20_25))*log2(1/(1-(DCTOTALS$MSAGroup20_25))))

DCTOTALS$TotalEnt15_20 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup15_20)*log2(1/(DCTOTALS$MSAGroup15_20)) + 
                                                      (1-(DCTOTALS$MSAGroup15_20))*log2(1/(1-(DCTOTALS$MSAGroup15_20))))

DCTOTALS$TotalEnt10_15 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup10_15)*log2(1/(DCTOTALS$MSAGroup10_15)) + 
                                                      (1-(DCTOTALS$MSAGroup10_15))*log2(1/(1-(DCTOTALS$MSAGroup10_15))))

DCTOTALS$TotalEnt10 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$MSAGroup10)*log2(1/(DCTOTALS$MSAGroup10)) + 
                                                   (1-(DCTOTALS$MSAGroup10))*log2(1/(1-(DCTOTALS$MSAGroup10))))

DCTOTALS$ReverseTotalEnt10 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup10)*log2(1/(DCTOTALS$ReverseMSAGroup10)) + 
                                                          (1-(DCTOTALS$ReverseMSAGroup10))*log2(1/(1-(DCTOTALS$ReverseMSAGroup10))))

DCTOTALS$ReverseTotalEnt10_15 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup10_15)*log2(1/(DCTOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(DCTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DCTOTALS$ReverseMSAGroup10_15))))

DCTOTALS$ReverseTotalEnt15_20 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup15_20)*log2(1/(DCTOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(DCTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DCTOTALS$ReverseMSAGroup15_20))))

DCTOTALS$ReverseTotalEnt20_25 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup20_25)*log2(1/(DCTOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(DCTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DCTOTALS$ReverseMSAGroup20_25))))

DCTOTALS$ReverseTotalEnt25_30 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup25_30)*log2(1/(DCTOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(DCTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DCTOTALS$ReverseMSAGroup25_30))))

DCTOTALS$ReverseTotalEnt30_35 <- DCTOTALS$MSAB19001_001 * ((DCTOTALS$ReverseMSAGroup30_35)*log2(1/(DCTOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(DCTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DCTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
DCTOTALS$E200 <- ((DCTOTALS$MSAGroup200)*log2(1/(DCTOTALS$MSAGroup200)) + (1-(DCTOTALS$MSAGroup200))*log2(1/(1-(DCTOTALS$MSAGroup200))))
DCTOTALS$E150_200 <- ((DCTOTALS$MSAGroup150_200)*log2(1/(DCTOTALS$MSAGroup150_200)) + (1-(DCTOTALS$MSAGroup150_200))*log2(1/(1-(DCTOTALS$MSAGroup150_200))))
DCTOTALS$E125_150 <- ((DCTOTALS$MSAGroup125_150)*log2(1/(DCTOTALS$MSAGroup125_150)) + (1-(DCTOTALS$MSAGroup125_150))*log2(1/(1-(DCTOTALS$MSAGroup125_150))))
DCTOTALS$E100_125 <- ((DCTOTALS$MSAGroup100_125)*log2(1/(DCTOTALS$MSAGroup100_125)) + (1-(DCTOTALS$MSAGroup100_125))*log2(1/(1-(DCTOTALS$MSAGroup100_125))))
DCTOTALS$E75_100 <- ((DCTOTALS$MSAGroup75_100)*log2(1/(DCTOTALS$MSAGroup75_100)) + (1-(DCTOTALS$MSAGroup75_100))*log2(1/(1-(DCTOTALS$MSAGroup75_100))))
DCTOTALS$E60_75 <- ((DCTOTALS$MSAGroup60_75)*log2(1/(DCTOTALS$MSAGroup60_75)) + (1-(DCTOTALS$MSAGroup60_75))*log2(1/(1-(DCTOTALS$MSAGroup60_75))))
DCTOTALS$E50_60 <- ((DCTOTALS$MSAGroup50_60)*log2(1/(DCTOTALS$MSAGroup50_60)) + (1-(DCTOTALS$MSAGroup50_60))*log2(1/(1-(DCTOTALS$MSAGroup50_60))))
DCTOTALS$E50_60 <- ((DCTOTALS$MSAGroup50_60)*log2(1/(DCTOTALS$MSAGroup50_60)) + (1-(DCTOTALS$MSAGroup50_60))*log2(1/(1-(DCTOTALS$MSAGroup50_60))))
DCTOTALS$E45_50 <- ((DCTOTALS$MSAGroup45_50)*log2(1/(DCTOTALS$MSAGroup45_50)) + (1-(DCTOTALS$MSAGroup45_50))*log2(1/(1-(DCTOTALS$MSAGroup45_50))))
DCTOTALS$E40_45 <- ((DCTOTALS$MSAGroup40_45)*log2(1/(DCTOTALS$MSAGroup40_45)) + (1-(DCTOTALS$MSAGroup40_45))*log2(1/(1-(DCTOTALS$MSAGroup40_45))))
DCTOTALS$E35_40 <- ((DCTOTALS$MSAGroup35_40)*log2(1/(DCTOTALS$MSAGroup35_40)) + (1-(DCTOTALS$MSAGroup35_40))*log2(1/(1-(DCTOTALS$MSAGroup35_40))))
DCTOTALS$E30_35 <- ((DCTOTALS$MSAGroup30_35)*log2(1/(DCTOTALS$MSAGroup30_35)) + (1-(DCTOTALS$MSAGroup30_35))*log2(1/(1-(DCTOTALS$MSAGroup30_35))))
DCTOTALS$E25_30 <- ((DCTOTALS$MSAGroup25_30)*log2(1/(DCTOTALS$MSAGroup25_30)) + (1-(DCTOTALS$MSAGroup25_30))*log2(1/(1-(DCTOTALS$MSAGroup25_30))))
DCTOTALS$E20_25 <- ((DCTOTALS$MSAGroup20_25)*log2(1/(DCTOTALS$MSAGroup20_25)) + (1-(DCTOTALS$MSAGroup20_25))*log2(1/(1-(DCTOTALS$MSAGroup20_25))))
DCTOTALS$E15_20 <- ((DCTOTALS$MSAGroup15_20)*log2(1/(DCTOTALS$MSAGroup15_20)) + (1-(DCTOTALS$MSAGroup15_20))*log2(1/(1-(DCTOTALS$MSAGroup15_20))))
DCTOTALS$E10_15 <- ((DCTOTALS$MSAGroup10_15)*log2(1/(DCTOTALS$MSAGroup10_15)) + (1-(DCTOTALS$MSAGroup10_15))*log2(1/(1-(DCTOTALS$MSAGroup10_15))))
DCTOTALS$E10 <- ((DCTOTALS$MSAGroup10)*log2(1/(DCTOTALS$MSAGroup10)) + (1-(DCTOTALS$MSAGroup10))*log2(1/(1-(DCTOTALS$MSAGroup10))))
DCTOTALS$ReverseE10 <- ((DCTOTALS$ReverseMSAGroup10)*log2(1/(DCTOTALS$ReverseMSAGroup10)) + (1-(DCTOTALS$ReverseMSAGroup10))*log2(1/(1-(DCTOTALS$ReverseMSAGroup10))))
DCTOTALS$ReverseE10_15 <- ((DCTOTALS$ReverseMSAGroup10_15)*log2(1/(DCTOTALS$ReverseMSAGroup10_15)) + (1-(DCTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DCTOTALS$ReverseMSAGroup10_15))))
DCTOTALS$ReverseE15_20 <- ((DCTOTALS$ReverseMSAGroup15_20)*log2(1/(DCTOTALS$ReverseMSAGroup15_20)) + (1-(DCTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DCTOTALS$ReverseMSAGroup15_20))))
DCTOTALS$ReverseE20_25 <- ((DCTOTALS$ReverseMSAGroup20_25)*log2(1/(DCTOTALS$ReverseMSAGroup20_25)) + (1-(DCTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DCTOTALS$ReverseMSAGroup20_25))))
DCTOTALS$ReverseE25_30 <- ((DCTOTALS$ReverseMSAGroup25_30)*log2(1/(DCTOTALS$ReverseMSAGroup25_30)) + (1-(DCTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DCTOTALS$ReverseMSAGroup25_30))))
DCTOTALS$ReverseE30_35 <- ((DCTOTALS$ReverseMSAGroup30_35)*log2(1/(DCTOTALS$ReverseMSAGroup30_35)) + (1-(DCTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DCTOTALS$ReverseMSAGroup30_35))))
DCTOTALS$ReverseE35_40 <- ((DCTOTALS$ReverseMSAGroup35_40)*log2(1/(DCTOTALS$ReverseMSAGroup35_40)) + (1-(DCTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(DCTOTALS$ReverseMSAGroup35_40))))


DC$Section200 <- DC$LocalEnt200 / DCTOTALS$TotalEnt200
DC$Section150_200 <- DC$LocalEnt150_200 / DCTOTALS$TotalEnt150_200
DC$Section125_150 <- DC$LocalEnt125_150 / DCTOTALS$TotalEnt125_150
DC$Section100_125 <- DC$LocalEnt100_125 / DCTOTALS$TotalEnt100_125
DC$Section75_100 <- DC$LocalEnt75_100 / DCTOTALS$TotalEnt75_100
DC$Section60_75 <- DC$LocalEnt60_75 / DCTOTALS$TotalEnt60_75
DC$Section50_60 <- DC$LocalEnt50_60 / DCTOTALS$TotalEnt50_60
DC$Section45_50 <- DC$LocalEnt45_50 / DCTOTALS$TotalEnt45_50
DC$Section40_45 <- DC$LocalEnt40_45 / DCTOTALS$TotalEnt40_45
DC$Section35_40 <- DC$LocalEnt35_40 / DCTOTALS$TotalEnt35_40
DC$Section30_35 <- DC$LocalEnt30_35 / DCTOTALS$TotalEnt30_35
DC$Section25_30 <- DC$LocalEnt25_30 / DCTOTALS$TotalEnt25_30
DC$Section20_25 <- DC$LocalEnt20_25 / DCTOTALS$TotalEnt20_25
DC$Section15_20 <- DC$LocalEnt15_20 / DCTOTALS$TotalEnt15_20
DC$Section10_15 <- DC$LocalEnt10_15 / DCTOTALS$TotalEnt10_15
DC$Section10 <- DC$LocalEnt10 / DCTOTALS$TotalEnt10
DC$ReverseSection10 <- DC$ReverseLocalEnt10 / DCTOTALS$ReverseTotalEnt10
DC$ReverseSection10_15 <- DC$ReverseLocalEnt10_15 / DCTOTALS$ReverseTotalEnt10_15
DC$ReverseSection15_20 <- DC$ReverseLocalEnt15_20 / DCTOTALS$ReverseTotalEnt15_20
DC$ReverseSection20_25 <- DC$ReverseLocalEnt20_25 / DCTOTALS$ReverseTotalEnt20_25
DC$ReverseSection25_30 <- DC$ReverseLocalEnt25_30 / DCTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
DC[is.na(DC)] <- 0

DCTOTALS$Percent200 <- 1 - sum(DC$Section200)
DCTOTALS$Percent150_200 <- 1 - sum(DC$Section150_200)
DCTOTALS$Percent125_150 <- 1 - sum(DC$Section125_150)
DCTOTALS$Percent100_125 <- 1 - sum(DC$Section100_125)
DCTOTALS$Percent75_100 <- 1 - sum(DC$Section75_100)
DCTOTALS$Percent60_75 <- 1 - sum(DC$Section60_75)
DCTOTALS$Percent50_60 <- 1 - sum(DC$Section50_60)
DCTOTALS$Percent45_50 <- 1 - sum(DC$Section45_50)
DCTOTALS$Percent40_45 <- 1 - sum(DC$Section40_45)
DCTOTALS$Percent35_40 <- 1 - sum(DC$Section35_40)
DCTOTALS$Percent30_35 <- 1 - sum(DC$Section30_35)
DCTOTALS$Percent25_30 <- 1 - sum(DC$Section25_30)
DCTOTALS$Percent20_25 <- 1 - sum(DC$Section20_25)
DCTOTALS$Percent15_20 <- 1 - sum(DC$Section15_20)
DCTOTALS$Percent10_15 <- 1 - sum(DC$Section10_15)
DCTOTALS$Percent10 <- 1 - sum(DC$Section10)
DCTOTALS$ReversePercent10 <- 1 - sum(DC$ReverseSection10)
DCTOTALS$ReversePercent10_15 <- 1 - sum(DC$ReverseSection10_15)
DCTOTALS$ReversePercent15_20 <- 1 - sum(DC$ReverseSection15_20)
DCTOTALS$ReversePercent20_25 <- 1 - sum(DC$ReverseSection20_25)
DCTOTALS$ReversePercent25_30 <- 1 - sum(DC$ReverseSection25_30)


DCTOTALS$Weight200 <- DCTOTALS$E200 * DCTOTALS$Percent200
DCTOTALS$Weight150_200 <- (DCTOTALS$E150_200 * DCTOTALS$Percent150_200)
DCTOTALS$Weight125_150 <- (DCTOTALS$E125_150 * DCTOTALS$Percent125_150) 
DCTOTALS$Weight100_125 <- (DCTOTALS$E100_125 * DCTOTALS$Percent100_125) 
DCTOTALS$Weight75_100 <- (DCTOTALS$E75_100 * DCTOTALS$Percent75_100)
DCTOTALS$Weight60_75 <- (DCTOTALS$E60_75 * DCTOTALS$Percent60_75) 
DCTOTALS$Weight50_60 <- (DCTOTALS$E50_60 * DCTOTALS$Percent50_60) 
DCTOTALS$Weight45_50 <- (DCTOTALS$E45_50 * DCTOTALS$Percent45_50)
DCTOTALS$Weight40_45 <- (DCTOTALS$E40_45 * DCTOTALS$Percent40_45) 
DCTOTALS$Weight35_40 <- (DCTOTALS$E35_40 * DCTOTALS$Percent35_40) 
DCTOTALS$Weight30_35 <- (DCTOTALS$E30_35 * DCTOTALS$Percent30_35)
DCTOTALS$Weight25_30 <- (DCTOTALS$E25_30 * DCTOTALS$Percent25_30) 
DCTOTALS$Weight20_25 <- (DCTOTALS$E20_25 * DCTOTALS$Percent20_25)
DCTOTALS$Weight15_20 <- (DCTOTALS$E15_20 * DCTOTALS$Percent15_20) 
DCTOTALS$Weight10_15 <- (DCTOTALS$E10_15 * DCTOTALS$Percent10_15) 
DCTOTALS$Weight10 <- (DCTOTALS$E10 * DCTOTALS$Percent10) 
DCTOTALS$ReverseWeight10 <- (DCTOTALS$ReverseE10 * DCTOTALS$ReversePercent10)
DCTOTALS$ReverseWeight10_15 <- (DCTOTALS$ReverseE10_15 * DCTOTALS$ReversePercent10_15)
DCTOTALS$ReverseWeight15_20 <- (DCTOTALS$ReverseE15_20 * DCTOTALS$ReversePercent15_20)
DCTOTALS$ReverseWeight20_25 <- (DCTOTALS$ReverseE20_25 * DCTOTALS$ReversePercent20_25)
DCTOTALS$ReverseWeight25_30 <- (DCTOTALS$ReverseE25_30 * DCTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

CHI$Group200 <- (CHI$B19001_017/CHI$B19001_001)
CHI$Group150_200 <- (CHI$B19001_017 + CHI$B19001_016)/CHI$B19001_001;
CHI$Group125_150 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015)/CHI$B19001_001;
CHI$Group100_125 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014)/CHI$B19001_001;
CHI$Group75_100 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013)/CHI$B19001_001;
CHI$Group60_75 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012)/CHI$B19001_001;
CHI$Group50_60 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011)/CHI$B19001_001;
CHI$Group45_50 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010)/CHI$B19001_001;
CHI$Group40_45 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009)/CHI$B19001_001;
CHI$Group35_40 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008)/CHI$B19001_001;
CHI$Group30_35 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007)/CHI$B19001_001;
CHI$Group25_30 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007 + CHI$B19001_006)/CHI$B19001_001;
CHI$Group20_25 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007 + CHI$B19001_006 + CHI$B19001_005)/CHI$B19001_001;
CHI$Group15_20 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007 + CHI$B19001_006 + CHI$B19001_005 + CHI$B19001_004)/CHI$B19001_001;
CHI$Group10_15 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007 + CHI$B19001_006 + CHI$B19001_005 + CHI$B19001_004 + CHI$B19001_003)/CHI$B19001_001;
CHI$Group10 <- (CHI$B19001_017 + CHI$B19001_016 + CHI$B19001_015 + CHI$B19001_014 + CHI$B19001_013 + CHI$B19001_012 + CHI$B19001_011 + CHI$B19001_010 + CHI$B19001_009 + CHI$B19001_008 + CHI$B19001_007 + CHI$B19001_006 + CHI$B19001_005 + CHI$B19001_004 + CHI$B19001_003 + CHI$B19001_002)/CHI$B19001_001;
CHI$ReverseGroup10 <- (CHI$B19001_002)/CHI$B19001_001;
CHI$ReverseGroup10_15 <- (CHI$B19001_002 + CHI$B19001_003)/CHI$B19001_001;
CHI$ReverseGroup15_20 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004)/CHI$B19001_001;
CHI$ReverseGroup20_25 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005)/CHI$B19001_001;
CHI$ReverseGroup25_30 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006)/CHI$B19001_001;
CHI$ReverseGroup30_35 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007)/CHI$B19001_001;
CHI$ReverseGroup35_40 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007 + CHI$B19001_008)/CHI$B19001_001;
CHI$ReverseGroup40_45 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007 + CHI$B19001_008 + CHI$B19001_009)/CHI$B19001_001;
CHI$ReverseGroup45_50 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007 + CHI$B19001_008 + CHI$B19001_009 + CHI$B19001_010)/CHI$B19001_001;
CHI$ReverseGroup50_60 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007 + CHI$B19001_008 + CHI$B19001_009 + CHI$B19001_010 + CHI$B19001_011)/CHI$B19001_001;
CHI$ReverseGroup60_75 <- (CHI$B19001_002 + CHI$B19001_003 + CHI$B19001_004 + CHI$B19001_005 + CHI$B19001_006 + CHI$B19001_007 + CHI$B19001_008 + CHI$B19001_009 + CHI$B19001_010 + CHI$B19001_011 + CHI$B19001_012)/CHI$B19001_001;

CHI$LocalEnt200 <- CHI$B19001_001 * ((CHI$Group200)*log2(1/(CHI$Group200)) + 
                                       (1-(CHI$Group200))*log2(1/(1-(CHI$Group200))))

CHI$LocalEnt150_200 <- CHI$B19001_001 * ((CHI$Group150_200)*log2(1/(CHI$Group150_200)) + 
                                           (1-(CHI$Group150_200))*log2(1/(1-(CHI$Group150_200))))

CHI$LocalEnt125_150 <- CHI$B19001_001 * ((CHI$Group125_150)*log2(1/(CHI$Group125_150)) + 
                                           (1-(CHI$Group125_150))*log2(1/(1-(CHI$Group125_150))))

CHI$LocalEnt100_125 <- CHI$B19001_001 * ((CHI$Group100_125)*log2(1/(CHI$Group100_125)) + 
                                           (1-(CHI$Group100_125))*log2(1/(1-(CHI$Group100_125))))

CHI$LocalEnt75_100 <- CHI$B19001_001 * ((CHI$Group75_100)*log2(1/(CHI$Group75_100)) + 
                                          (1-(CHI$Group75_100))*log2(1/(1-(CHI$Group75_100))))

CHI$LocalEnt60_75 <- CHI$B19001_001 * ((CHI$Group60_75)*log2(1/(CHI$Group60_75)) + 
                                         (1-(CHI$Group60_75))*log2(1/(1-(CHI$Group60_75))))

CHI$LocalEnt50_60 <- CHI$B19001_001 * ((CHI$Group50_60)*log2(1/(CHI$Group50_60)) + 
                                         (1-(CHI$Group50_60))*log2(1/(1-(CHI$Group50_60))))

CHI$LocalEnt45_50 <- CHI$B19001_001 * ((CHI$Group45_50)*log2(1/(CHI$Group45_50)) + 
                                         (1-(CHI$Group45_50))*log2(1/(1-(CHI$Group45_50))))

CHI$LocalEnt40_45 <- CHI$B19001_001 * ((CHI$Group40_45)*log2(1/(CHI$Group40_45)) + 
                                         (1-(CHI$Group40_45))*log2(1/(1-(CHI$Group40_45))))

CHI$LocalEnt35_40 <- CHI$B19001_001 * ((CHI$Group35_40)*log2(1/(CHI$Group35_40)) + 
                                         (1-(CHI$Group35_40))*log2(1/(1-(CHI$Group35_40))))

CHI$LocalEnt30_35 <- CHI$B19001_001 * ((CHI$Group30_35)*log2(1/(CHI$Group30_35)) + 
                                         (1-(CHI$Group30_35))*log2(1/(1-(CHI$Group30_35))))

CHI$LocalEnt25_30 <- CHI$B19001_001 * ((CHI$Group25_30)*log2(1/(CHI$Group25_30)) + 
                                         (1-(CHI$Group25_30))*log2(1/(1-(CHI$Group25_30))))

CHI$LocalEnt20_25 <- CHI$B19001_001 * ((CHI$Group20_25)*log2(1/(CHI$Group20_25)) + 
                                         (1-(CHI$Group20_25))*log2(1/(1-(CHI$Group20_25))))

CHI$LocalEnt15_20 <- CHI$B19001_001 * ((CHI$Group15_20)*log2(1/(CHI$Group15_20)) + 
                                         (1-(CHI$Group15_20))*log2(1/(1-(CHI$Group15_20))))

CHI$LocalEnt10_15 <- CHI$B19001_001 * ((CHI$Group10_15)*log2(1/(CHI$Group10_15)) + 
                                         (1-(CHI$Group10_15))*log2(1/(1-(CHI$Group10_15))))

CHI$LocalEnt10 <- CHI$B19001_001 * ((CHI$Group10)*log2(1/(CHI$Group10)) + 
                                      (1-(CHI$Group10))*log2(1/(1-(CHI$Group10))))

CHI$ReverseLocalEnt10 <- CHI$B19001_001 * ((CHI$ReverseGroup10)*log2(1/(CHI$ReverseGroup10)) + 
                                             (1-(CHI$ReverseGroup10))*log2(1/(1-(CHI$ReverseGroup10))))

CHI$ReverseLocalEnt10_15 <- CHI$B19001_001 * ((CHI$ReverseGroup10_15)*log2(1/(CHI$ReverseGroup10_15)) + 
                                                (1-(CHI$ReverseGroup10_15))*log2(1/(1-(CHI$ReverseGroup10_15))))

CHI$ReverseLocalEnt15_20 <- CHI$B19001_001 * ((CHI$ReverseGroup15_20)*log2(1/(CHI$ReverseGroup15_20)) + 
                                                (1-(CHI$ReverseGroup15_20))*log2(1/(1-(CHI$ReverseGroup15_20))))

CHI$ReverseLocalEnt20_25 <- CHI$B19001_001 * ((CHI$ReverseGroup20_25)*log2(1/(CHI$ReverseGroup20_25)) + 
                                                (1-(CHI$ReverseGroup20_25))*log2(1/(1-(CHI$ReverseGroup20_25))))

CHI$ReverseLocalEnt25_30 <- CHI$B19001_001 * ((CHI$ReverseGroup25_30)*log2(1/(CHI$ReverseGroup25_30)) + 
                                                (1-(CHI$ReverseGroup25_30))*log2(1/(1-(CHI$ReverseGroup25_30))))

CHI$ReverseLocalEnt30_35 <- CHI$B19001_001 * ((CHI$ReverseGroup30_35)*log2(1/(CHI$ReverseGroup30_35)) + 
                                                (1-(CHI$ReverseGroup30_35))*log2(1/(1-(CHI$ReverseGroup30_35))))


#HA stuff Total


CHITOTALS <- CHI %>%
  summarise(MSAB19001_001 = sum(CHI$B19001_001), MSAB19001_002 = sum(CHI$B19001_002), MSAB19001_003 = sum(CHI$B19001_003), MSAB19001_004 = sum(CHI$B19001_004),
            MSAB19001_005 = sum(CHI$B19001_005), MSAB19001_006 = sum(CHI$B19001_006), MSAB19001_007 = sum(CHI$B19001_007),
            MSAB19001_008 = sum(CHI$B19001_008), MSAB19001_009 = sum(CHI$B19001_009), MSAB19001_010 = sum(CHI$B19001_010),
            MSAB19001_011 = sum(CHI$B19001_011), MSAB19001_012 = sum(CHI$B19001_012), MSAB19001_013 = sum(CHI$B19001_013),
            MSAB19001_014 = sum(CHI$B19001_014), MSAB19001_015 = sum(CHI$B19001_015), MSAB19001_016 = sum(CHI$B19001_016),
            MSAB19001_017 = sum(CHI$B19001_017))


CHITOTALS$MSAGroup200 <- (CHITOTALS$MSAB19001_017/CHITOTALS$MSAB19001_001)
CHITOTALS$MSAGroup150_200 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup125_150 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup100_125 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup75_100 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup60_75 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup50_60 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup45_50 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup40_45 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup35_40 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup30_35 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup25_30 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_006)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup20_25 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_005)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup15_20 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_004)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup10_15 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_003)/CHITOTALS$MSAB19001_001;
CHITOTALS$MSAGroup10 <- (CHITOTALS$MSAB19001_017 + CHITOTALS$MSAB19001_016 + CHITOTALS$MSAB19001_015 + CHITOTALS$MSAB19001_014 + CHITOTALS$MSAB19001_013 + CHITOTALS$MSAB19001_012 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_002)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup10 <- (CHITOTALS$MSAB19001_002)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup10_15 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup15_20 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup20_25 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup25_30 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup30_35 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup35_40 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_008)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup40_45 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_009)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup45_50 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_010)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup50_60 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_011)/CHITOTALS$MSAB19001_001;
CHITOTALS$ReverseMSAGroup60_75 <- (CHITOTALS$MSAB19001_002 + CHITOTALS$MSAB19001_003 + CHITOTALS$MSAB19001_004 + CHITOTALS$MSAB19001_005 + CHITOTALS$MSAB19001_006 + CHITOTALS$MSAB19001_007 + CHITOTALS$MSAB19001_008 + CHITOTALS$MSAB19001_009 + CHITOTALS$MSAB19001_010 + CHITOTALS$MSAB19001_011 + CHITOTALS$MSAB19001_012)/CHITOTALS$MSAB19001_001;

CHITOTALS$TotalEnt200 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup200)*log2(1/(CHITOTALS$MSAGroup200)) + 
                                                      (1-(CHITOTALS$MSAGroup200))*log2(1/(1-(CHITOTALS$MSAGroup200))))

CHITOTALS$TotalEnt150_200 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup150_200)*log2(1/(CHITOTALS$MSAGroup150_200)) + 
                                                          (1-(CHITOTALS$MSAGroup150_200))*log2(1/(1-(CHITOTALS$MSAGroup150_200))))

CHITOTALS$TotalEnt125_150 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup125_150)*log2(1/(CHITOTALS$MSAGroup125_150)) + 
                                                          (1-(CHITOTALS$MSAGroup125_150))*log2(1/(1-(CHITOTALS$MSAGroup125_150))))

CHITOTALS$TotalEnt100_125 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup100_125)*log2(1/(CHITOTALS$MSAGroup100_125)) + 
                                                          (1-(CHITOTALS$MSAGroup100_125))*log2(1/(1-(CHITOTALS$MSAGroup100_125))))

CHITOTALS$TotalEnt75_100 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup75_100)*log2(1/(CHITOTALS$MSAGroup75_100)) + 
                                                         (1-(CHITOTALS$MSAGroup75_100))*log2(1/(1-(CHITOTALS$MSAGroup75_100))))

CHITOTALS$TotalEnt60_75 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup60_75)*log2(1/(CHITOTALS$MSAGroup60_75)) + 
                                                        (1-(CHITOTALS$MSAGroup60_75))*log2(1/(1-(CHITOTALS$MSAGroup60_75))))

CHITOTALS$TotalEnt50_60 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup50_60)*log2(1/(CHITOTALS$MSAGroup50_60)) + 
                                                        (1-(CHITOTALS$MSAGroup50_60))*log2(1/(1-(CHITOTALS$MSAGroup50_60))))

CHITOTALS$TotalEnt45_50 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup45_50)*log2(1/(CHITOTALS$MSAGroup45_50)) + 
                                                        (1-(CHITOTALS$MSAGroup45_50))*log2(1/(1-(CHITOTALS$MSAGroup45_50))))

CHITOTALS$TotalEnt40_45 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup40_45)*log2(1/(CHITOTALS$MSAGroup40_45)) + 
                                                        (1-(CHITOTALS$MSAGroup40_45))*log2(1/(1-(CHITOTALS$MSAGroup40_45))))

CHITOTALS$TotalEnt35_40 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup35_40)*log2(1/(CHITOTALS$MSAGroup35_40)) + 
                                                        (1-(CHITOTALS$MSAGroup35_40))*log2(1/(1-(CHITOTALS$MSAGroup35_40))))

CHITOTALS$TotalEnt30_35 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup30_35)*log2(1/(CHITOTALS$MSAGroup30_35)) + 
                                                        (1-(CHITOTALS$MSAGroup30_35))*log2(1/(1-(CHITOTALS$MSAGroup30_35))))

CHITOTALS$TotalEnt25_30 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup25_30)*log2(1/(CHITOTALS$MSAGroup25_30)) + 
                                                        (1-(CHITOTALS$MSAGroup25_30))*log2(1/(1-(CHITOTALS$MSAGroup25_30))))

CHITOTALS$TotalEnt20_25 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup20_25)*log2(1/(CHITOTALS$MSAGroup20_25)) + 
                                                        (1-(CHITOTALS$MSAGroup20_25))*log2(1/(1-(CHITOTALS$MSAGroup20_25))))

CHITOTALS$TotalEnt15_20 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup15_20)*log2(1/(CHITOTALS$MSAGroup15_20)) + 
                                                        (1-(CHITOTALS$MSAGroup15_20))*log2(1/(1-(CHITOTALS$MSAGroup15_20))))

CHITOTALS$TotalEnt10_15 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup10_15)*log2(1/(CHITOTALS$MSAGroup10_15)) + 
                                                        (1-(CHITOTALS$MSAGroup10_15))*log2(1/(1-(CHITOTALS$MSAGroup10_15))))

CHITOTALS$TotalEnt10 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$MSAGroup10)*log2(1/(CHITOTALS$MSAGroup10)) + 
                                                     (1-(CHITOTALS$MSAGroup10))*log2(1/(1-(CHITOTALS$MSAGroup10))))

CHITOTALS$ReverseTotalEnt10 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup10)*log2(1/(CHITOTALS$ReverseMSAGroup10)) + 
                                                            (1-(CHITOTALS$ReverseMSAGroup10))*log2(1/(1-(CHITOTALS$ReverseMSAGroup10))))

CHITOTALS$ReverseTotalEnt10_15 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup10_15)*log2(1/(CHITOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(CHITOTALS$ReverseMSAGroup10_15))*log2(1/(1-(CHITOTALS$ReverseMSAGroup10_15))))

CHITOTALS$ReverseTotalEnt15_20 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup15_20)*log2(1/(CHITOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(CHITOTALS$ReverseMSAGroup15_20))*log2(1/(1-(CHITOTALS$ReverseMSAGroup15_20))))

CHITOTALS$ReverseTotalEnt20_25 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup20_25)*log2(1/(CHITOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(CHITOTALS$ReverseMSAGroup20_25))*log2(1/(1-(CHITOTALS$ReverseMSAGroup20_25))))

CHITOTALS$ReverseTotalEnt25_30 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup25_30)*log2(1/(CHITOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(CHITOTALS$ReverseMSAGroup25_30))*log2(1/(1-(CHITOTALS$ReverseMSAGroup25_30))))

CHITOTALS$ReverseTotalEnt30_35 <- CHITOTALS$MSAB19001_001 * ((CHITOTALS$ReverseMSAGroup30_35)*log2(1/(CHITOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(CHITOTALS$ReverseMSAGroup30_35))*log2(1/(1-(CHITOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
CHITOTALS$E200 <- ((CHITOTALS$MSAGroup200)*log2(1/(CHITOTALS$MSAGroup200)) + (1-(CHITOTALS$MSAGroup200))*log2(1/(1-(CHITOTALS$MSAGroup200))))
CHITOTALS$E150_200 <- ((CHITOTALS$MSAGroup150_200)*log2(1/(CHITOTALS$MSAGroup150_200)) + (1-(CHITOTALS$MSAGroup150_200))*log2(1/(1-(CHITOTALS$MSAGroup150_200))))
CHITOTALS$E125_150 <- ((CHITOTALS$MSAGroup125_150)*log2(1/(CHITOTALS$MSAGroup125_150)) + (1-(CHITOTALS$MSAGroup125_150))*log2(1/(1-(CHITOTALS$MSAGroup125_150))))
CHITOTALS$E100_125 <- ((CHITOTALS$MSAGroup100_125)*log2(1/(CHITOTALS$MSAGroup100_125)) + (1-(CHITOTALS$MSAGroup100_125))*log2(1/(1-(CHITOTALS$MSAGroup100_125))))
CHITOTALS$E75_100 <- ((CHITOTALS$MSAGroup75_100)*log2(1/(CHITOTALS$MSAGroup75_100)) + (1-(CHITOTALS$MSAGroup75_100))*log2(1/(1-(CHITOTALS$MSAGroup75_100))))
CHITOTALS$E60_75 <- ((CHITOTALS$MSAGroup60_75)*log2(1/(CHITOTALS$MSAGroup60_75)) + (1-(CHITOTALS$MSAGroup60_75))*log2(1/(1-(CHITOTALS$MSAGroup60_75))))
CHITOTALS$E50_60 <- ((CHITOTALS$MSAGroup50_60)*log2(1/(CHITOTALS$MSAGroup50_60)) + (1-(CHITOTALS$MSAGroup50_60))*log2(1/(1-(CHITOTALS$MSAGroup50_60))))
CHITOTALS$E50_60 <- ((CHITOTALS$MSAGroup50_60)*log2(1/(CHITOTALS$MSAGroup50_60)) + (1-(CHITOTALS$MSAGroup50_60))*log2(1/(1-(CHITOTALS$MSAGroup50_60))))
CHITOTALS$E45_50 <- ((CHITOTALS$MSAGroup45_50)*log2(1/(CHITOTALS$MSAGroup45_50)) + (1-(CHITOTALS$MSAGroup45_50))*log2(1/(1-(CHITOTALS$MSAGroup45_50))))
CHITOTALS$E40_45 <- ((CHITOTALS$MSAGroup40_45)*log2(1/(CHITOTALS$MSAGroup40_45)) + (1-(CHITOTALS$MSAGroup40_45))*log2(1/(1-(CHITOTALS$MSAGroup40_45))))
CHITOTALS$E35_40 <- ((CHITOTALS$MSAGroup35_40)*log2(1/(CHITOTALS$MSAGroup35_40)) + (1-(CHITOTALS$MSAGroup35_40))*log2(1/(1-(CHITOTALS$MSAGroup35_40))))
CHITOTALS$E30_35 <- ((CHITOTALS$MSAGroup30_35)*log2(1/(CHITOTALS$MSAGroup30_35)) + (1-(CHITOTALS$MSAGroup30_35))*log2(1/(1-(CHITOTALS$MSAGroup30_35))))
CHITOTALS$E25_30 <- ((CHITOTALS$MSAGroup25_30)*log2(1/(CHITOTALS$MSAGroup25_30)) + (1-(CHITOTALS$MSAGroup25_30))*log2(1/(1-(CHITOTALS$MSAGroup25_30))))
CHITOTALS$E20_25 <- ((CHITOTALS$MSAGroup20_25)*log2(1/(CHITOTALS$MSAGroup20_25)) + (1-(CHITOTALS$MSAGroup20_25))*log2(1/(1-(CHITOTALS$MSAGroup20_25))))
CHITOTALS$E15_20 <- ((CHITOTALS$MSAGroup15_20)*log2(1/(CHITOTALS$MSAGroup15_20)) + (1-(CHITOTALS$MSAGroup15_20))*log2(1/(1-(CHITOTALS$MSAGroup15_20))))
CHITOTALS$E10_15 <- ((CHITOTALS$MSAGroup10_15)*log2(1/(CHITOTALS$MSAGroup10_15)) + (1-(CHITOTALS$MSAGroup10_15))*log2(1/(1-(CHITOTALS$MSAGroup10_15))))
CHITOTALS$E10 <- ((CHITOTALS$MSAGroup10)*log2(1/(CHITOTALS$MSAGroup10)) + (1-(CHITOTALS$MSAGroup10))*log2(1/(1-(CHITOTALS$MSAGroup10))))
CHITOTALS$ReverseE10 <- ((CHITOTALS$ReverseMSAGroup10)*log2(1/(CHITOTALS$ReverseMSAGroup10)) + (1-(CHITOTALS$ReverseMSAGroup10))*log2(1/(1-(CHITOTALS$ReverseMSAGroup10))))
CHITOTALS$ReverseE10_15 <- ((CHITOTALS$ReverseMSAGroup10_15)*log2(1/(CHITOTALS$ReverseMSAGroup10_15)) + (1-(CHITOTALS$ReverseMSAGroup10_15))*log2(1/(1-(CHITOTALS$ReverseMSAGroup10_15))))
CHITOTALS$ReverseE15_20 <- ((CHITOTALS$ReverseMSAGroup15_20)*log2(1/(CHITOTALS$ReverseMSAGroup15_20)) + (1-(CHITOTALS$ReverseMSAGroup15_20))*log2(1/(1-(CHITOTALS$ReverseMSAGroup15_20))))
CHITOTALS$ReverseE20_25 <- ((CHITOTALS$ReverseMSAGroup20_25)*log2(1/(CHITOTALS$ReverseMSAGroup20_25)) + (1-(CHITOTALS$ReverseMSAGroup20_25))*log2(1/(1-(CHITOTALS$ReverseMSAGroup20_25))))
CHITOTALS$ReverseE25_30 <- ((CHITOTALS$ReverseMSAGroup25_30)*log2(1/(CHITOTALS$ReverseMSAGroup25_30)) + (1-(CHITOTALS$ReverseMSAGroup25_30))*log2(1/(1-(CHITOTALS$ReverseMSAGroup25_30))))
CHITOTALS$ReverseE30_35 <- ((CHITOTALS$ReverseMSAGroup30_35)*log2(1/(CHITOTALS$ReverseMSAGroup30_35)) + (1-(CHITOTALS$ReverseMSAGroup30_35))*log2(1/(1-(CHITOTALS$ReverseMSAGroup30_35))))
CHITOTALS$ReverseE35_40 <- ((CHITOTALS$ReverseMSAGroup35_40)*log2(1/(CHITOTALS$ReverseMSAGroup35_40)) + (1-(CHITOTALS$ReverseMSAGroup35_40))*log2(1/(1-(CHITOTALS$ReverseMSAGroup35_40))))


CHI$Section200 <- CHI$LocalEnt200 / CHITOTALS$TotalEnt200
CHI$Section150_200 <- CHI$LocalEnt150_200 / CHITOTALS$TotalEnt150_200
CHI$Section125_150 <- CHI$LocalEnt125_150 / CHITOTALS$TotalEnt125_150
CHI$Section100_125 <- CHI$LocalEnt100_125 / CHITOTALS$TotalEnt100_125
CHI$Section75_100 <- CHI$LocalEnt75_100 / CHITOTALS$TotalEnt75_100
CHI$Section60_75 <- CHI$LocalEnt60_75 / CHITOTALS$TotalEnt60_75
CHI$Section50_60 <- CHI$LocalEnt50_60 / CHITOTALS$TotalEnt50_60
CHI$Section45_50 <- CHI$LocalEnt45_50 / CHITOTALS$TotalEnt45_50
CHI$Section40_45 <- CHI$LocalEnt40_45 / CHITOTALS$TotalEnt40_45
CHI$Section35_40 <- CHI$LocalEnt35_40 / CHITOTALS$TotalEnt35_40
CHI$Section30_35 <- CHI$LocalEnt30_35 / CHITOTALS$TotalEnt30_35
CHI$Section25_30 <- CHI$LocalEnt25_30 / CHITOTALS$TotalEnt25_30
CHI$Section20_25 <- CHI$LocalEnt20_25 / CHITOTALS$TotalEnt20_25
CHI$Section15_20 <- CHI$LocalEnt15_20 / CHITOTALS$TotalEnt15_20
CHI$Section10_15 <- CHI$LocalEnt10_15 / CHITOTALS$TotalEnt10_15
CHI$Section10 <- CHI$LocalEnt10 / CHITOTALS$TotalEnt10
CHI$ReverseSection10 <- CHI$ReverseLocalEnt10 / CHITOTALS$ReverseTotalEnt10
CHI$ReverseSection10_15 <- CHI$ReverseLocalEnt10_15 / CHITOTALS$ReverseTotalEnt10_15
CHI$ReverseSection15_20 <- CHI$ReverseLocalEnt15_20 / CHITOTALS$ReverseTotalEnt15_20
CHI$ReverseSection20_25 <- CHI$ReverseLocalEnt20_25 / CHITOTALS$ReverseTotalEnt20_25
CHI$ReverseSection25_30 <- CHI$ReverseLocalEnt25_30 / CHITOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
CHI[is.na(CHI)] <- 0

CHITOTALS$Percent200 <- 1 - sum(CHI$Section200)
CHITOTALS$Percent150_200 <- 1 - sum(CHI$Section150_200)
CHITOTALS$Percent125_150 <- 1 - sum(CHI$Section125_150)
CHITOTALS$Percent100_125 <- 1 - sum(CHI$Section100_125)
CHITOTALS$Percent75_100 <- 1 - sum(CHI$Section75_100)
CHITOTALS$Percent60_75 <- 1 - sum(CHI$Section60_75)
CHITOTALS$Percent50_60 <- 1 - sum(CHI$Section50_60)
CHITOTALS$Percent45_50 <- 1 - sum(CHI$Section45_50)
CHITOTALS$Percent40_45 <- 1 - sum(CHI$Section40_45)
CHITOTALS$Percent35_40 <- 1 - sum(CHI$Section35_40)
CHITOTALS$Percent30_35 <- 1 - sum(CHI$Section30_35)
CHITOTALS$Percent25_30 <- 1 - sum(CHI$Section25_30)
CHITOTALS$Percent20_25 <- 1 - sum(CHI$Section20_25)
CHITOTALS$Percent15_20 <- 1 - sum(CHI$Section15_20)
CHITOTALS$Percent10_15 <- 1 - sum(CHI$Section10_15)
CHITOTALS$Percent10 <- 1 - sum(CHI$Section10)
CHITOTALS$ReversePercent10 <- 1 - sum(CHI$ReverseSection10)
CHITOTALS$ReversePercent10_15 <- 1 - sum(CHI$ReverseSection10_15)
CHITOTALS$ReversePercent15_20 <- 1 - sum(CHI$ReverseSection15_20)
CHITOTALS$ReversePercent20_25 <- 1 - sum(CHI$ReverseSection20_25)
CHITOTALS$ReversePercent25_30 <- 1 - sum(CHI$ReverseSection25_30)


CHITOTALS$Weight200 <- CHITOTALS$E200 * CHITOTALS$Percent200
CHITOTALS$Weight150_200 <- (CHITOTALS$E150_200 * CHITOTALS$Percent150_200)
CHITOTALS$Weight125_150 <- (CHITOTALS$E125_150 * CHITOTALS$Percent125_150) 
CHITOTALS$Weight100_125 <- (CHITOTALS$E100_125 * CHITOTALS$Percent100_125) 
CHITOTALS$Weight75_100 <- (CHITOTALS$E75_100 * CHITOTALS$Percent75_100)
CHITOTALS$Weight60_75 <- (CHITOTALS$E60_75 * CHITOTALS$Percent60_75) 
CHITOTALS$Weight50_60 <- (CHITOTALS$E50_60 * CHITOTALS$Percent50_60) 
CHITOTALS$Weight45_50 <- (CHITOTALS$E45_50 * CHITOTALS$Percent45_50)
CHITOTALS$Weight40_45 <- (CHITOTALS$E40_45 * CHITOTALS$Percent40_45) 
CHITOTALS$Weight35_40 <- (CHITOTALS$E35_40 * CHITOTALS$Percent35_40) 
CHITOTALS$Weight30_35 <- (CHITOTALS$E30_35 * CHITOTALS$Percent30_35)
CHITOTALS$Weight25_30 <- (CHITOTALS$E25_30 * CHITOTALS$Percent25_30) 
CHITOTALS$Weight20_25 <- (CHITOTALS$E20_25 * CHITOTALS$Percent20_25)
CHITOTALS$Weight15_20 <- (CHITOTALS$E15_20 * CHITOTALS$Percent15_20) 
CHITOTALS$Weight10_15 <- (CHITOTALS$E10_15 * CHITOTALS$Percent10_15) 
CHITOTALS$Weight10 <- (CHITOTALS$E10 * CHITOTALS$Percent10) 
CHITOTALS$ReverseWeight10 <- (CHITOTALS$ReverseE10 * CHITOTALS$ReversePercent10)
CHITOTALS$ReverseWeight10_15 <- (CHITOTALS$ReverseE10_15 * CHITOTALS$ReversePercent10_15)
CHITOTALS$ReverseWeight15_20 <- (CHITOTALS$ReverseE15_20 * CHITOTALS$ReversePercent15_20)
CHITOTALS$ReverseWeight20_25 <- (CHITOTALS$ReverseE20_25 * CHITOTALS$ReversePercent20_25)
CHITOTALS$ReverseWeight25_30 <- (CHITOTALS$ReverseE25_30 * CHITOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

BOS$Group200 <- (BOS$B19001_017/BOS$B19001_001)
BOS$Group150_200 <- (BOS$B19001_017 + BOS$B19001_016)/BOS$B19001_001;
BOS$Group125_150 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015)/BOS$B19001_001;
BOS$Group100_125 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014)/BOS$B19001_001;
BOS$Group75_100 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013)/BOS$B19001_001;
BOS$Group60_75 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012)/BOS$B19001_001;
BOS$Group50_60 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011)/BOS$B19001_001;
BOS$Group45_50 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010)/BOS$B19001_001;
BOS$Group40_45 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009)/BOS$B19001_001;
BOS$Group35_40 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008)/BOS$B19001_001;
BOS$Group30_35 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007)/BOS$B19001_001;
BOS$Group25_30 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007 + BOS$B19001_006)/BOS$B19001_001;
BOS$Group20_25 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007 + BOS$B19001_006 + BOS$B19001_005)/BOS$B19001_001;
BOS$Group15_20 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007 + BOS$B19001_006 + BOS$B19001_005 + BOS$B19001_004)/BOS$B19001_001;
BOS$Group10_15 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007 + BOS$B19001_006 + BOS$B19001_005 + BOS$B19001_004 + BOS$B19001_003)/BOS$B19001_001;
BOS$Group10 <- (BOS$B19001_017 + BOS$B19001_016 + BOS$B19001_015 + BOS$B19001_014 + BOS$B19001_013 + BOS$B19001_012 + BOS$B19001_011 + BOS$B19001_010 + BOS$B19001_009 + BOS$B19001_008 + BOS$B19001_007 + BOS$B19001_006 + BOS$B19001_005 + BOS$B19001_004 + BOS$B19001_003 + BOS$B19001_002)/BOS$B19001_001;
BOS$ReverseGroup10 <- (BOS$B19001_002)/BOS$B19001_001;
BOS$ReverseGroup10_15 <- (BOS$B19001_002 + BOS$B19001_003)/BOS$B19001_001;
BOS$ReverseGroup15_20 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004)/BOS$B19001_001;
BOS$ReverseGroup20_25 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005)/BOS$B19001_001;
BOS$ReverseGroup25_30 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006)/BOS$B19001_001;
BOS$ReverseGroup30_35 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007)/BOS$B19001_001;
BOS$ReverseGroup35_40 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007 + BOS$B19001_008)/BOS$B19001_001;
BOS$ReverseGroup40_45 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007 + BOS$B19001_008 + BOS$B19001_009)/BOS$B19001_001;
BOS$ReverseGroup45_50 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007 + BOS$B19001_008 + BOS$B19001_009 + BOS$B19001_010)/BOS$B19001_001;
BOS$ReverseGroup50_60 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007 + BOS$B19001_008 + BOS$B19001_009 + BOS$B19001_010 + BOS$B19001_011)/BOS$B19001_001;
BOS$ReverseGroup60_75 <- (BOS$B19001_002 + BOS$B19001_003 + BOS$B19001_004 + BOS$B19001_005 + BOS$B19001_006 + BOS$B19001_007 + BOS$B19001_008 + BOS$B19001_009 + BOS$B19001_010 + BOS$B19001_011 + BOS$B19001_012)/BOS$B19001_001;

BOS$LocalEnt200 <- BOS$B19001_001 * ((BOS$Group200)*log2(1/(BOS$Group200)) + 
                                       (1-(BOS$Group200))*log2(1/(1-(BOS$Group200))))

BOS$LocalEnt150_200 <- BOS$B19001_001 * ((BOS$Group150_200)*log2(1/(BOS$Group150_200)) + 
                                           (1-(BOS$Group150_200))*log2(1/(1-(BOS$Group150_200))))

BOS$LocalEnt125_150 <- BOS$B19001_001 * ((BOS$Group125_150)*log2(1/(BOS$Group125_150)) + 
                                           (1-(BOS$Group125_150))*log2(1/(1-(BOS$Group125_150))))

BOS$LocalEnt100_125 <- BOS$B19001_001 * ((BOS$Group100_125)*log2(1/(BOS$Group100_125)) + 
                                           (1-(BOS$Group100_125))*log2(1/(1-(BOS$Group100_125))))

BOS$LocalEnt75_100 <- BOS$B19001_001 * ((BOS$Group75_100)*log2(1/(BOS$Group75_100)) + 
                                          (1-(BOS$Group75_100))*log2(1/(1-(BOS$Group75_100))))

BOS$LocalEnt60_75 <- BOS$B19001_001 * ((BOS$Group60_75)*log2(1/(BOS$Group60_75)) + 
                                         (1-(BOS$Group60_75))*log2(1/(1-(BOS$Group60_75))))

BOS$LocalEnt50_60 <- BOS$B19001_001 * ((BOS$Group50_60)*log2(1/(BOS$Group50_60)) + 
                                         (1-(BOS$Group50_60))*log2(1/(1-(BOS$Group50_60))))

BOS$LocalEnt45_50 <- BOS$B19001_001 * ((BOS$Group45_50)*log2(1/(BOS$Group45_50)) + 
                                         (1-(BOS$Group45_50))*log2(1/(1-(BOS$Group45_50))))

BOS$LocalEnt40_45 <- BOS$B19001_001 * ((BOS$Group40_45)*log2(1/(BOS$Group40_45)) + 
                                         (1-(BOS$Group40_45))*log2(1/(1-(BOS$Group40_45))))

BOS$LocalEnt35_40 <- BOS$B19001_001 * ((BOS$Group35_40)*log2(1/(BOS$Group35_40)) + 
                                         (1-(BOS$Group35_40))*log2(1/(1-(BOS$Group35_40))))

BOS$LocalEnt30_35 <- BOS$B19001_001 * ((BOS$Group30_35)*log2(1/(BOS$Group30_35)) + 
                                         (1-(BOS$Group30_35))*log2(1/(1-(BOS$Group30_35))))

BOS$LocalEnt25_30 <- BOS$B19001_001 * ((BOS$Group25_30)*log2(1/(BOS$Group25_30)) + 
                                         (1-(BOS$Group25_30))*log2(1/(1-(BOS$Group25_30))))

BOS$LocalEnt20_25 <- BOS$B19001_001 * ((BOS$Group20_25)*log2(1/(BOS$Group20_25)) + 
                                         (1-(BOS$Group20_25))*log2(1/(1-(BOS$Group20_25))))

BOS$LocalEnt15_20 <- BOS$B19001_001 * ((BOS$Group15_20)*log2(1/(BOS$Group15_20)) + 
                                         (1-(BOS$Group15_20))*log2(1/(1-(BOS$Group15_20))))

BOS$LocalEnt10_15 <- BOS$B19001_001 * ((BOS$Group10_15)*log2(1/(BOS$Group10_15)) + 
                                         (1-(BOS$Group10_15))*log2(1/(1-(BOS$Group10_15))))

BOS$LocalEnt10 <- BOS$B19001_001 * ((BOS$Group10)*log2(1/(BOS$Group10)) + 
                                      (1-(BOS$Group10))*log2(1/(1-(BOS$Group10))))

BOS$ReverseLocalEnt10 <- BOS$B19001_001 * ((BOS$ReverseGroup10)*log2(1/(BOS$ReverseGroup10)) + 
                                             (1-(BOS$ReverseGroup10))*log2(1/(1-(BOS$ReverseGroup10))))

BOS$ReverseLocalEnt10_15 <- BOS$B19001_001 * ((BOS$ReverseGroup10_15)*log2(1/(BOS$ReverseGroup10_15)) + 
                                                (1-(BOS$ReverseGroup10_15))*log2(1/(1-(BOS$ReverseGroup10_15))))

BOS$ReverseLocalEnt15_20 <- BOS$B19001_001 * ((BOS$ReverseGroup15_20)*log2(1/(BOS$ReverseGroup15_20)) + 
                                                (1-(BOS$ReverseGroup15_20))*log2(1/(1-(BOS$ReverseGroup15_20))))

BOS$ReverseLocalEnt20_25 <- BOS$B19001_001 * ((BOS$ReverseGroup20_25)*log2(1/(BOS$ReverseGroup20_25)) + 
                                                (1-(BOS$ReverseGroup20_25))*log2(1/(1-(BOS$ReverseGroup20_25))))

BOS$ReverseLocalEnt25_30 <- BOS$B19001_001 * ((BOS$ReverseGroup25_30)*log2(1/(BOS$ReverseGroup25_30)) + 
                                                (1-(BOS$ReverseGroup25_30))*log2(1/(1-(BOS$ReverseGroup25_30))))

BOS$ReverseLocalEnt30_35 <- BOS$B19001_001 * ((BOS$ReverseGroup30_35)*log2(1/(BOS$ReverseGroup30_35)) + 
                                                (1-(BOS$ReverseGroup30_35))*log2(1/(1-(BOS$ReverseGroup30_35))))


#HA stuff Total


BOSTOTALS <- BOS %>%
  summarise(MSAB19001_001 = sum(BOS$B19001_001), MSAB19001_002 = sum(BOS$B19001_002), MSAB19001_003 = sum(BOS$B19001_003), MSAB19001_004 = sum(BOS$B19001_004),
            MSAB19001_005 = sum(BOS$B19001_005), MSAB19001_006 = sum(BOS$B19001_006), MSAB19001_007 = sum(BOS$B19001_007),
            MSAB19001_008 = sum(BOS$B19001_008), MSAB19001_009 = sum(BOS$B19001_009), MSAB19001_010 = sum(BOS$B19001_010),
            MSAB19001_011 = sum(BOS$B19001_011), MSAB19001_012 = sum(BOS$B19001_012), MSAB19001_013 = sum(BOS$B19001_013),
            MSAB19001_014 = sum(BOS$B19001_014), MSAB19001_015 = sum(BOS$B19001_015), MSAB19001_016 = sum(BOS$B19001_016),
            MSAB19001_017 = sum(BOS$B19001_017))


BOSTOTALS$MSAGroup200 <- (BOSTOTALS$MSAB19001_017/BOSTOTALS$MSAB19001_001)
BOSTOTALS$MSAGroup150_200 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup125_150 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup100_125 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup75_100 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup60_75 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup50_60 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup45_50 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup40_45 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup35_40 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup30_35 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup25_30 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_006)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup20_25 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_005)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup15_20 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_004)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup10_15 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_003)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$MSAGroup10 <- (BOSTOTALS$MSAB19001_017 + BOSTOTALS$MSAB19001_016 + BOSTOTALS$MSAB19001_015 + BOSTOTALS$MSAB19001_014 + BOSTOTALS$MSAB19001_013 + BOSTOTALS$MSAB19001_012 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_002)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup10 <- (BOSTOTALS$MSAB19001_002)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup10_15 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup15_20 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup20_25 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup25_30 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup30_35 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup35_40 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_008)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup40_45 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_009)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup45_50 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_010)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup50_60 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_011)/BOSTOTALS$MSAB19001_001;
BOSTOTALS$ReverseMSAGroup60_75 <- (BOSTOTALS$MSAB19001_002 + BOSTOTALS$MSAB19001_003 + BOSTOTALS$MSAB19001_004 + BOSTOTALS$MSAB19001_005 + BOSTOTALS$MSAB19001_006 + BOSTOTALS$MSAB19001_007 + BOSTOTALS$MSAB19001_008 + BOSTOTALS$MSAB19001_009 + BOSTOTALS$MSAB19001_010 + BOSTOTALS$MSAB19001_011 + BOSTOTALS$MSAB19001_012)/BOSTOTALS$MSAB19001_001;

BOSTOTALS$TotalEnt200 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup200)*log2(1/(BOSTOTALS$MSAGroup200)) + 
                                                      (1-(BOSTOTALS$MSAGroup200))*log2(1/(1-(BOSTOTALS$MSAGroup200))))

BOSTOTALS$TotalEnt150_200 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup150_200)*log2(1/(BOSTOTALS$MSAGroup150_200)) + 
                                                          (1-(BOSTOTALS$MSAGroup150_200))*log2(1/(1-(BOSTOTALS$MSAGroup150_200))))

BOSTOTALS$TotalEnt125_150 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup125_150)*log2(1/(BOSTOTALS$MSAGroup125_150)) + 
                                                          (1-(BOSTOTALS$MSAGroup125_150))*log2(1/(1-(BOSTOTALS$MSAGroup125_150))))

BOSTOTALS$TotalEnt100_125 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup100_125)*log2(1/(BOSTOTALS$MSAGroup100_125)) + 
                                                          (1-(BOSTOTALS$MSAGroup100_125))*log2(1/(1-(BOSTOTALS$MSAGroup100_125))))

BOSTOTALS$TotalEnt75_100 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup75_100)*log2(1/(BOSTOTALS$MSAGroup75_100)) + 
                                                         (1-(BOSTOTALS$MSAGroup75_100))*log2(1/(1-(BOSTOTALS$MSAGroup75_100))))

BOSTOTALS$TotalEnt60_75 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup60_75)*log2(1/(BOSTOTALS$MSAGroup60_75)) + 
                                                        (1-(BOSTOTALS$MSAGroup60_75))*log2(1/(1-(BOSTOTALS$MSAGroup60_75))))

BOSTOTALS$TotalEnt50_60 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup50_60)*log2(1/(BOSTOTALS$MSAGroup50_60)) + 
                                                        (1-(BOSTOTALS$MSAGroup50_60))*log2(1/(1-(BOSTOTALS$MSAGroup50_60))))

BOSTOTALS$TotalEnt45_50 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup45_50)*log2(1/(BOSTOTALS$MSAGroup45_50)) + 
                                                        (1-(BOSTOTALS$MSAGroup45_50))*log2(1/(1-(BOSTOTALS$MSAGroup45_50))))

BOSTOTALS$TotalEnt40_45 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup40_45)*log2(1/(BOSTOTALS$MSAGroup40_45)) + 
                                                        (1-(BOSTOTALS$MSAGroup40_45))*log2(1/(1-(BOSTOTALS$MSAGroup40_45))))

BOSTOTALS$TotalEnt35_40 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup35_40)*log2(1/(BOSTOTALS$MSAGroup35_40)) + 
                                                        (1-(BOSTOTALS$MSAGroup35_40))*log2(1/(1-(BOSTOTALS$MSAGroup35_40))))

BOSTOTALS$TotalEnt30_35 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup30_35)*log2(1/(BOSTOTALS$MSAGroup30_35)) + 
                                                        (1-(BOSTOTALS$MSAGroup30_35))*log2(1/(1-(BOSTOTALS$MSAGroup30_35))))

BOSTOTALS$TotalEnt25_30 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup25_30)*log2(1/(BOSTOTALS$MSAGroup25_30)) + 
                                                        (1-(BOSTOTALS$MSAGroup25_30))*log2(1/(1-(BOSTOTALS$MSAGroup25_30))))

BOSTOTALS$TotalEnt20_25 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup20_25)*log2(1/(BOSTOTALS$MSAGroup20_25)) + 
                                                        (1-(BOSTOTALS$MSAGroup20_25))*log2(1/(1-(BOSTOTALS$MSAGroup20_25))))

BOSTOTALS$TotalEnt15_20 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup15_20)*log2(1/(BOSTOTALS$MSAGroup15_20)) + 
                                                        (1-(BOSTOTALS$MSAGroup15_20))*log2(1/(1-(BOSTOTALS$MSAGroup15_20))))

BOSTOTALS$TotalEnt10_15 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup10_15)*log2(1/(BOSTOTALS$MSAGroup10_15)) + 
                                                        (1-(BOSTOTALS$MSAGroup10_15))*log2(1/(1-(BOSTOTALS$MSAGroup10_15))))

BOSTOTALS$TotalEnt10 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$MSAGroup10)*log2(1/(BOSTOTALS$MSAGroup10)) + 
                                                     (1-(BOSTOTALS$MSAGroup10))*log2(1/(1-(BOSTOTALS$MSAGroup10))))

BOSTOTALS$ReverseTotalEnt10 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup10)*log2(1/(BOSTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(BOSTOTALS$ReverseMSAGroup10))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup10))))

BOSTOTALS$ReverseTotalEnt10_15 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup10_15)*log2(1/(BOSTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(BOSTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup10_15))))

BOSTOTALS$ReverseTotalEnt15_20 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup15_20)*log2(1/(BOSTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(BOSTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup15_20))))

BOSTOTALS$ReverseTotalEnt20_25 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup20_25)*log2(1/(BOSTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(BOSTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup20_25))))

BOSTOTALS$ReverseTotalEnt25_30 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup25_30)*log2(1/(BOSTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(BOSTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup25_30))))

BOSTOTALS$ReverseTotalEnt30_35 <- BOSTOTALS$MSAB19001_001 * ((BOSTOTALS$ReverseMSAGroup30_35)*log2(1/(BOSTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(BOSTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
BOSTOTALS$E200 <- ((BOSTOTALS$MSAGroup200)*log2(1/(BOSTOTALS$MSAGroup200)) + (1-(BOSTOTALS$MSAGroup200))*log2(1/(1-(BOSTOTALS$MSAGroup200))))
BOSTOTALS$E150_200 <- ((BOSTOTALS$MSAGroup150_200)*log2(1/(BOSTOTALS$MSAGroup150_200)) + (1-(BOSTOTALS$MSAGroup150_200))*log2(1/(1-(BOSTOTALS$MSAGroup150_200))))
BOSTOTALS$E125_150 <- ((BOSTOTALS$MSAGroup125_150)*log2(1/(BOSTOTALS$MSAGroup125_150)) + (1-(BOSTOTALS$MSAGroup125_150))*log2(1/(1-(BOSTOTALS$MSAGroup125_150))))
BOSTOTALS$E100_125 <- ((BOSTOTALS$MSAGroup100_125)*log2(1/(BOSTOTALS$MSAGroup100_125)) + (1-(BOSTOTALS$MSAGroup100_125))*log2(1/(1-(BOSTOTALS$MSAGroup100_125))))
BOSTOTALS$E75_100 <- ((BOSTOTALS$MSAGroup75_100)*log2(1/(BOSTOTALS$MSAGroup75_100)) + (1-(BOSTOTALS$MSAGroup75_100))*log2(1/(1-(BOSTOTALS$MSAGroup75_100))))
BOSTOTALS$E60_75 <- ((BOSTOTALS$MSAGroup60_75)*log2(1/(BOSTOTALS$MSAGroup60_75)) + (1-(BOSTOTALS$MSAGroup60_75))*log2(1/(1-(BOSTOTALS$MSAGroup60_75))))
BOSTOTALS$E50_60 <- ((BOSTOTALS$MSAGroup50_60)*log2(1/(BOSTOTALS$MSAGroup50_60)) + (1-(BOSTOTALS$MSAGroup50_60))*log2(1/(1-(BOSTOTALS$MSAGroup50_60))))
BOSTOTALS$E50_60 <- ((BOSTOTALS$MSAGroup50_60)*log2(1/(BOSTOTALS$MSAGroup50_60)) + (1-(BOSTOTALS$MSAGroup50_60))*log2(1/(1-(BOSTOTALS$MSAGroup50_60))))
BOSTOTALS$E45_50 <- ((BOSTOTALS$MSAGroup45_50)*log2(1/(BOSTOTALS$MSAGroup45_50)) + (1-(BOSTOTALS$MSAGroup45_50))*log2(1/(1-(BOSTOTALS$MSAGroup45_50))))
BOSTOTALS$E40_45 <- ((BOSTOTALS$MSAGroup40_45)*log2(1/(BOSTOTALS$MSAGroup40_45)) + (1-(BOSTOTALS$MSAGroup40_45))*log2(1/(1-(BOSTOTALS$MSAGroup40_45))))
BOSTOTALS$E35_40 <- ((BOSTOTALS$MSAGroup35_40)*log2(1/(BOSTOTALS$MSAGroup35_40)) + (1-(BOSTOTALS$MSAGroup35_40))*log2(1/(1-(BOSTOTALS$MSAGroup35_40))))
BOSTOTALS$E30_35 <- ((BOSTOTALS$MSAGroup30_35)*log2(1/(BOSTOTALS$MSAGroup30_35)) + (1-(BOSTOTALS$MSAGroup30_35))*log2(1/(1-(BOSTOTALS$MSAGroup30_35))))
BOSTOTALS$E25_30 <- ((BOSTOTALS$MSAGroup25_30)*log2(1/(BOSTOTALS$MSAGroup25_30)) + (1-(BOSTOTALS$MSAGroup25_30))*log2(1/(1-(BOSTOTALS$MSAGroup25_30))))
BOSTOTALS$E20_25 <- ((BOSTOTALS$MSAGroup20_25)*log2(1/(BOSTOTALS$MSAGroup20_25)) + (1-(BOSTOTALS$MSAGroup20_25))*log2(1/(1-(BOSTOTALS$MSAGroup20_25))))
BOSTOTALS$E15_20 <- ((BOSTOTALS$MSAGroup15_20)*log2(1/(BOSTOTALS$MSAGroup15_20)) + (1-(BOSTOTALS$MSAGroup15_20))*log2(1/(1-(BOSTOTALS$MSAGroup15_20))))
BOSTOTALS$E10_15 <- ((BOSTOTALS$MSAGroup10_15)*log2(1/(BOSTOTALS$MSAGroup10_15)) + (1-(BOSTOTALS$MSAGroup10_15))*log2(1/(1-(BOSTOTALS$MSAGroup10_15))))
BOSTOTALS$E10 <- ((BOSTOTALS$MSAGroup10)*log2(1/(BOSTOTALS$MSAGroup10)) + (1-(BOSTOTALS$MSAGroup10))*log2(1/(1-(BOSTOTALS$MSAGroup10))))
BOSTOTALS$ReverseE10 <- ((BOSTOTALS$ReverseMSAGroup10)*log2(1/(BOSTOTALS$ReverseMSAGroup10)) + (1-(BOSTOTALS$ReverseMSAGroup10))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup10))))
BOSTOTALS$ReverseE10_15 <- ((BOSTOTALS$ReverseMSAGroup10_15)*log2(1/(BOSTOTALS$ReverseMSAGroup10_15)) + (1-(BOSTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup10_15))))
BOSTOTALS$ReverseE15_20 <- ((BOSTOTALS$ReverseMSAGroup15_20)*log2(1/(BOSTOTALS$ReverseMSAGroup15_20)) + (1-(BOSTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup15_20))))
BOSTOTALS$ReverseE20_25 <- ((BOSTOTALS$ReverseMSAGroup20_25)*log2(1/(BOSTOTALS$ReverseMSAGroup20_25)) + (1-(BOSTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup20_25))))
BOSTOTALS$ReverseE25_30 <- ((BOSTOTALS$ReverseMSAGroup25_30)*log2(1/(BOSTOTALS$ReverseMSAGroup25_30)) + (1-(BOSTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup25_30))))
BOSTOTALS$ReverseE30_35 <- ((BOSTOTALS$ReverseMSAGroup30_35)*log2(1/(BOSTOTALS$ReverseMSAGroup30_35)) + (1-(BOSTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup30_35))))
BOSTOTALS$ReverseE35_40 <- ((BOSTOTALS$ReverseMSAGroup35_40)*log2(1/(BOSTOTALS$ReverseMSAGroup35_40)) + (1-(BOSTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(BOSTOTALS$ReverseMSAGroup35_40))))


BOS$Section200 <- BOS$LocalEnt200 / BOSTOTALS$TotalEnt200
BOS$Section150_200 <- BOS$LocalEnt150_200 / BOSTOTALS$TotalEnt150_200
BOS$Section125_150 <- BOS$LocalEnt125_150 / BOSTOTALS$TotalEnt125_150
BOS$Section100_125 <- BOS$LocalEnt100_125 / BOSTOTALS$TotalEnt100_125
BOS$Section75_100 <- BOS$LocalEnt75_100 / BOSTOTALS$TotalEnt75_100
BOS$Section60_75 <- BOS$LocalEnt60_75 / BOSTOTALS$TotalEnt60_75
BOS$Section50_60 <- BOS$LocalEnt50_60 / BOSTOTALS$TotalEnt50_60
BOS$Section45_50 <- BOS$LocalEnt45_50 / BOSTOTALS$TotalEnt45_50
BOS$Section40_45 <- BOS$LocalEnt40_45 / BOSTOTALS$TotalEnt40_45
BOS$Section35_40 <- BOS$LocalEnt35_40 / BOSTOTALS$TotalEnt35_40
BOS$Section30_35 <- BOS$LocalEnt30_35 / BOSTOTALS$TotalEnt30_35
BOS$Section25_30 <- BOS$LocalEnt25_30 / BOSTOTALS$TotalEnt25_30
BOS$Section20_25 <- BOS$LocalEnt20_25 / BOSTOTALS$TotalEnt20_25
BOS$Section15_20 <- BOS$LocalEnt15_20 / BOSTOTALS$TotalEnt15_20
BOS$Section10_15 <- BOS$LocalEnt10_15 / BOSTOTALS$TotalEnt10_15
BOS$Section10 <- BOS$LocalEnt10 / BOSTOTALS$TotalEnt10
BOS$ReverseSection10 <- BOS$ReverseLocalEnt10 / BOSTOTALS$ReverseTotalEnt10
BOS$ReverseSection10_15 <- BOS$ReverseLocalEnt10_15 / BOSTOTALS$ReverseTotalEnt10_15
BOS$ReverseSection15_20 <- BOS$ReverseLocalEnt15_20 / BOSTOTALS$ReverseTotalEnt15_20
BOS$ReverseSection20_25 <- BOS$ReverseLocalEnt20_25 / BOSTOTALS$ReverseTotalEnt20_25
BOS$ReverseSection25_30 <- BOS$ReverseLocalEnt25_30 / BOSTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
BOS[is.na(BOS)] <- 0

BOSTOTALS$Percent200 <- 1 - sum(BOS$Section200)
BOSTOTALS$Percent150_200 <- 1 - sum(BOS$Section150_200)
BOSTOTALS$Percent125_150 <- 1 - sum(BOS$Section125_150)
BOSTOTALS$Percent100_125 <- 1 - sum(BOS$Section100_125)
BOSTOTALS$Percent75_100 <- 1 - sum(BOS$Section75_100)
BOSTOTALS$Percent60_75 <- 1 - sum(BOS$Section60_75)
BOSTOTALS$Percent50_60 <- 1 - sum(BOS$Section50_60)
BOSTOTALS$Percent45_50 <- 1 - sum(BOS$Section45_50)
BOSTOTALS$Percent40_45 <- 1 - sum(BOS$Section40_45)
BOSTOTALS$Percent35_40 <- 1 - sum(BOS$Section35_40)
BOSTOTALS$Percent30_35 <- 1 - sum(BOS$Section30_35)
BOSTOTALS$Percent25_30 <- 1 - sum(BOS$Section25_30)
BOSTOTALS$Percent20_25 <- 1 - sum(BOS$Section20_25)
BOSTOTALS$Percent15_20 <- 1 - sum(BOS$Section15_20)
BOSTOTALS$Percent10_15 <- 1 - sum(BOS$Section10_15)
BOSTOTALS$Percent10 <- 1 - sum(BOS$Section10)
BOSTOTALS$ReversePercent10 <- 1 - sum(BOS$ReverseSection10)
BOSTOTALS$ReversePercent10_15 <- 1 - sum(BOS$ReverseSection10_15)
BOSTOTALS$ReversePercent15_20 <- 1 - sum(BOS$ReverseSection15_20)
BOSTOTALS$ReversePercent20_25 <- 1 - sum(BOS$ReverseSection20_25)
BOSTOTALS$ReversePercent25_30 <- 1 - sum(BOS$ReverseSection25_30)


BOSTOTALS$Weight200 <- BOSTOTALS$E200 * BOSTOTALS$Percent200
BOSTOTALS$Weight150_200 <- (BOSTOTALS$E150_200 * BOSTOTALS$Percent150_200)
BOSTOTALS$Weight125_150 <- (BOSTOTALS$E125_150 * BOSTOTALS$Percent125_150) 
BOSTOTALS$Weight100_125 <- (BOSTOTALS$E100_125 * BOSTOTALS$Percent100_125) 
BOSTOTALS$Weight75_100 <- (BOSTOTALS$E75_100 * BOSTOTALS$Percent75_100)
BOSTOTALS$Weight60_75 <- (BOSTOTALS$E60_75 * BOSTOTALS$Percent60_75) 
BOSTOTALS$Weight50_60 <- (BOSTOTALS$E50_60 * BOSTOTALS$Percent50_60) 
BOSTOTALS$Weight45_50 <- (BOSTOTALS$E45_50 * BOSTOTALS$Percent45_50)
BOSTOTALS$Weight40_45 <- (BOSTOTALS$E40_45 * BOSTOTALS$Percent40_45) 
BOSTOTALS$Weight35_40 <- (BOSTOTALS$E35_40 * BOSTOTALS$Percent35_40) 
BOSTOTALS$Weight30_35 <- (BOSTOTALS$E30_35 * BOSTOTALS$Percent30_35)
BOSTOTALS$Weight25_30 <- (BOSTOTALS$E25_30 * BOSTOTALS$Percent25_30) 
BOSTOTALS$Weight20_25 <- (BOSTOTALS$E20_25 * BOSTOTALS$Percent20_25)
BOSTOTALS$Weight15_20 <- (BOSTOTALS$E15_20 * BOSTOTALS$Percent15_20) 
BOSTOTALS$Weight10_15 <- (BOSTOTALS$E10_15 * BOSTOTALS$Percent10_15) 
BOSTOTALS$Weight10 <- (BOSTOTALS$E10 * BOSTOTALS$Percent10) 
BOSTOTALS$ReverseWeight10 <- (BOSTOTALS$ReverseE10 * BOSTOTALS$ReversePercent10)
BOSTOTALS$ReverseWeight10_15 <- (BOSTOTALS$ReverseE10_15 * BOSTOTALS$ReversePercent10_15)
BOSTOTALS$ReverseWeight15_20 <- (BOSTOTALS$ReverseE15_20 * BOSTOTALS$ReversePercent15_20)
BOSTOTALS$ReverseWeight20_25 <- (BOSTOTALS$ReverseE20_25 * BOSTOTALS$ReversePercent20_25)
BOSTOTALS$ReverseWeight25_30 <- (BOSTOTALS$ReverseE25_30 * BOSTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

PHL$Group200 <- (PHL$B19001_017/PHL$B19001_001)
PHL$Group150_200 <- (PHL$B19001_017 + PHL$B19001_016)/PHL$B19001_001;
PHL$Group125_150 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015)/PHL$B19001_001;
PHL$Group100_125 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014)/PHL$B19001_001;
PHL$Group75_100 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013)/PHL$B19001_001;
PHL$Group60_75 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012)/PHL$B19001_001;
PHL$Group50_60 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011)/PHL$B19001_001;
PHL$Group45_50 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010)/PHL$B19001_001;
PHL$Group40_45 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009)/PHL$B19001_001;
PHL$Group35_40 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008)/PHL$B19001_001;
PHL$Group30_35 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007)/PHL$B19001_001;
PHL$Group25_30 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007 + PHL$B19001_006)/PHL$B19001_001;
PHL$Group20_25 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007 + PHL$B19001_006 + PHL$B19001_005)/PHL$B19001_001;
PHL$Group15_20 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007 + PHL$B19001_006 + PHL$B19001_005 + PHL$B19001_004)/PHL$B19001_001;
PHL$Group10_15 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007 + PHL$B19001_006 + PHL$B19001_005 + PHL$B19001_004 + PHL$B19001_003)/PHL$B19001_001;
PHL$Group10 <- (PHL$B19001_017 + PHL$B19001_016 + PHL$B19001_015 + PHL$B19001_014 + PHL$B19001_013 + PHL$B19001_012 + PHL$B19001_011 + PHL$B19001_010 + PHL$B19001_009 + PHL$B19001_008 + PHL$B19001_007 + PHL$B19001_006 + PHL$B19001_005 + PHL$B19001_004 + PHL$B19001_003 + PHL$B19001_002)/PHL$B19001_001;
PHL$ReverseGroup10 <- (PHL$B19001_002)/PHL$B19001_001;
PHL$ReverseGroup10_15 <- (PHL$B19001_002 + PHL$B19001_003)/PHL$B19001_001;
PHL$ReverseGroup15_20 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004)/PHL$B19001_001;
PHL$ReverseGroup20_25 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005)/PHL$B19001_001;
PHL$ReverseGroup25_30 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006)/PHL$B19001_001;
PHL$ReverseGroup30_35 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007)/PHL$B19001_001;
PHL$ReverseGroup35_40 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007 + PHL$B19001_008)/PHL$B19001_001;
PHL$ReverseGroup40_45 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007 + PHL$B19001_008 + PHL$B19001_009)/PHL$B19001_001;
PHL$ReverseGroup45_50 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007 + PHL$B19001_008 + PHL$B19001_009 + PHL$B19001_010)/PHL$B19001_001;
PHL$ReverseGroup50_60 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007 + PHL$B19001_008 + PHL$B19001_009 + PHL$B19001_010 + PHL$B19001_011)/PHL$B19001_001;
PHL$ReverseGroup60_75 <- (PHL$B19001_002 + PHL$B19001_003 + PHL$B19001_004 + PHL$B19001_005 + PHL$B19001_006 + PHL$B19001_007 + PHL$B19001_008 + PHL$B19001_009 + PHL$B19001_010 + PHL$B19001_011 + PHL$B19001_012)/PHL$B19001_001;

PHL$LocalEnt200 <- PHL$B19001_001 * ((PHL$Group200)*log2(1/(PHL$Group200)) + 
                                       (1-(PHL$Group200))*log2(1/(1-(PHL$Group200))))

PHL$LocalEnt150_200 <- PHL$B19001_001 * ((PHL$Group150_200)*log2(1/(PHL$Group150_200)) + 
                                           (1-(PHL$Group150_200))*log2(1/(1-(PHL$Group150_200))))

PHL$LocalEnt125_150 <- PHL$B19001_001 * ((PHL$Group125_150)*log2(1/(PHL$Group125_150)) + 
                                           (1-(PHL$Group125_150))*log2(1/(1-(PHL$Group125_150))))

PHL$LocalEnt100_125 <- PHL$B19001_001 * ((PHL$Group100_125)*log2(1/(PHL$Group100_125)) + 
                                           (1-(PHL$Group100_125))*log2(1/(1-(PHL$Group100_125))))

PHL$LocalEnt75_100 <- PHL$B19001_001 * ((PHL$Group75_100)*log2(1/(PHL$Group75_100)) + 
                                          (1-(PHL$Group75_100))*log2(1/(1-(PHL$Group75_100))))

PHL$LocalEnt60_75 <- PHL$B19001_001 * ((PHL$Group60_75)*log2(1/(PHL$Group60_75)) + 
                                         (1-(PHL$Group60_75))*log2(1/(1-(PHL$Group60_75))))

PHL$LocalEnt50_60 <- PHL$B19001_001 * ((PHL$Group50_60)*log2(1/(PHL$Group50_60)) + 
                                         (1-(PHL$Group50_60))*log2(1/(1-(PHL$Group50_60))))

PHL$LocalEnt45_50 <- PHL$B19001_001 * ((PHL$Group45_50)*log2(1/(PHL$Group45_50)) + 
                                         (1-(PHL$Group45_50))*log2(1/(1-(PHL$Group45_50))))

PHL$LocalEnt40_45 <- PHL$B19001_001 * ((PHL$Group40_45)*log2(1/(PHL$Group40_45)) + 
                                         (1-(PHL$Group40_45))*log2(1/(1-(PHL$Group40_45))))

PHL$LocalEnt35_40 <- PHL$B19001_001 * ((PHL$Group35_40)*log2(1/(PHL$Group35_40)) + 
                                         (1-(PHL$Group35_40))*log2(1/(1-(PHL$Group35_40))))

PHL$LocalEnt30_35 <- PHL$B19001_001 * ((PHL$Group30_35)*log2(1/(PHL$Group30_35)) + 
                                         (1-(PHL$Group30_35))*log2(1/(1-(PHL$Group30_35))))

PHL$LocalEnt25_30 <- PHL$B19001_001 * ((PHL$Group25_30)*log2(1/(PHL$Group25_30)) + 
                                         (1-(PHL$Group25_30))*log2(1/(1-(PHL$Group25_30))))

PHL$LocalEnt20_25 <- PHL$B19001_001 * ((PHL$Group20_25)*log2(1/(PHL$Group20_25)) + 
                                         (1-(PHL$Group20_25))*log2(1/(1-(PHL$Group20_25))))

PHL$LocalEnt15_20 <- PHL$B19001_001 * ((PHL$Group15_20)*log2(1/(PHL$Group15_20)) + 
                                         (1-(PHL$Group15_20))*log2(1/(1-(PHL$Group15_20))))

PHL$LocalEnt10_15 <- PHL$B19001_001 * ((PHL$Group10_15)*log2(1/(PHL$Group10_15)) + 
                                         (1-(PHL$Group10_15))*log2(1/(1-(PHL$Group10_15))))

PHL$LocalEnt10 <- PHL$B19001_001 * ((PHL$Group10)*log2(1/(PHL$Group10)) + 
                                      (1-(PHL$Group10))*log2(1/(1-(PHL$Group10))))

PHL$ReverseLocalEnt10 <- PHL$B19001_001 * ((PHL$ReverseGroup10)*log2(1/(PHL$ReverseGroup10)) + 
                                             (1-(PHL$ReverseGroup10))*log2(1/(1-(PHL$ReverseGroup10))))

PHL$ReverseLocalEnt10_15 <- PHL$B19001_001 * ((PHL$ReverseGroup10_15)*log2(1/(PHL$ReverseGroup10_15)) + 
                                                (1-(PHL$ReverseGroup10_15))*log2(1/(1-(PHL$ReverseGroup10_15))))

PHL$ReverseLocalEnt15_20 <- PHL$B19001_001 * ((PHL$ReverseGroup15_20)*log2(1/(PHL$ReverseGroup15_20)) + 
                                                (1-(PHL$ReverseGroup15_20))*log2(1/(1-(PHL$ReverseGroup15_20))))

PHL$ReverseLocalEnt20_25 <- PHL$B19001_001 * ((PHL$ReverseGroup20_25)*log2(1/(PHL$ReverseGroup20_25)) + 
                                                (1-(PHL$ReverseGroup20_25))*log2(1/(1-(PHL$ReverseGroup20_25))))

PHL$ReverseLocalEnt25_30 <- PHL$B19001_001 * ((PHL$ReverseGroup25_30)*log2(1/(PHL$ReverseGroup25_30)) + 
                                                (1-(PHL$ReverseGroup25_30))*log2(1/(1-(PHL$ReverseGroup25_30))))

PHL$ReverseLocalEnt30_35 <- PHL$B19001_001 * ((PHL$ReverseGroup30_35)*log2(1/(PHL$ReverseGroup30_35)) + 
                                                (1-(PHL$ReverseGroup30_35))*log2(1/(1-(PHL$ReverseGroup30_35))))


#HA stuff Total


PHLTOTALS <- PHL %>%
  summarise(MSAB19001_001 = sum(PHL$B19001_001), MSAB19001_002 = sum(PHL$B19001_002), MSAB19001_003 = sum(PHL$B19001_003), MSAB19001_004 = sum(PHL$B19001_004),
            MSAB19001_005 = sum(PHL$B19001_005), MSAB19001_006 = sum(PHL$B19001_006), MSAB19001_007 = sum(PHL$B19001_007),
            MSAB19001_008 = sum(PHL$B19001_008), MSAB19001_009 = sum(PHL$B19001_009), MSAB19001_010 = sum(PHL$B19001_010),
            MSAB19001_011 = sum(PHL$B19001_011), MSAB19001_012 = sum(PHL$B19001_012), MSAB19001_013 = sum(PHL$B19001_013),
            MSAB19001_014 = sum(PHL$B19001_014), MSAB19001_015 = sum(PHL$B19001_015), MSAB19001_016 = sum(PHL$B19001_016),
            MSAB19001_017 = sum(PHL$B19001_017))


PHLTOTALS$MSAGroup200 <- (PHLTOTALS$MSAB19001_017/PHLTOTALS$MSAB19001_001)
PHLTOTALS$MSAGroup150_200 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup125_150 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup100_125 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup75_100 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup60_75 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup50_60 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup45_50 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup40_45 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup35_40 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup30_35 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup25_30 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_006)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup20_25 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_005)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup15_20 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_004)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup10_15 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_003)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$MSAGroup10 <- (PHLTOTALS$MSAB19001_017 + PHLTOTALS$MSAB19001_016 + PHLTOTALS$MSAB19001_015 + PHLTOTALS$MSAB19001_014 + PHLTOTALS$MSAB19001_013 + PHLTOTALS$MSAB19001_012 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_002)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup10 <- (PHLTOTALS$MSAB19001_002)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup10_15 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup15_20 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup20_25 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup25_30 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup30_35 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup35_40 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_008)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup40_45 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_009)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup45_50 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_010)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup50_60 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_011)/PHLTOTALS$MSAB19001_001;
PHLTOTALS$ReverseMSAGroup60_75 <- (PHLTOTALS$MSAB19001_002 + PHLTOTALS$MSAB19001_003 + PHLTOTALS$MSAB19001_004 + PHLTOTALS$MSAB19001_005 + PHLTOTALS$MSAB19001_006 + PHLTOTALS$MSAB19001_007 + PHLTOTALS$MSAB19001_008 + PHLTOTALS$MSAB19001_009 + PHLTOTALS$MSAB19001_010 + PHLTOTALS$MSAB19001_011 + PHLTOTALS$MSAB19001_012)/PHLTOTALS$MSAB19001_001;

PHLTOTALS$TotalEnt200 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup200)*log2(1/(PHLTOTALS$MSAGroup200)) + 
                                                      (1-(PHLTOTALS$MSAGroup200))*log2(1/(1-(PHLTOTALS$MSAGroup200))))

PHLTOTALS$TotalEnt150_200 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup150_200)*log2(1/(PHLTOTALS$MSAGroup150_200)) + 
                                                          (1-(PHLTOTALS$MSAGroup150_200))*log2(1/(1-(PHLTOTALS$MSAGroup150_200))))

PHLTOTALS$TotalEnt125_150 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup125_150)*log2(1/(PHLTOTALS$MSAGroup125_150)) + 
                                                          (1-(PHLTOTALS$MSAGroup125_150))*log2(1/(1-(PHLTOTALS$MSAGroup125_150))))

PHLTOTALS$TotalEnt100_125 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup100_125)*log2(1/(PHLTOTALS$MSAGroup100_125)) + 
                                                          (1-(PHLTOTALS$MSAGroup100_125))*log2(1/(1-(PHLTOTALS$MSAGroup100_125))))

PHLTOTALS$TotalEnt75_100 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup75_100)*log2(1/(PHLTOTALS$MSAGroup75_100)) + 
                                                         (1-(PHLTOTALS$MSAGroup75_100))*log2(1/(1-(PHLTOTALS$MSAGroup75_100))))

PHLTOTALS$TotalEnt60_75 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup60_75)*log2(1/(PHLTOTALS$MSAGroup60_75)) + 
                                                        (1-(PHLTOTALS$MSAGroup60_75))*log2(1/(1-(PHLTOTALS$MSAGroup60_75))))

PHLTOTALS$TotalEnt50_60 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup50_60)*log2(1/(PHLTOTALS$MSAGroup50_60)) + 
                                                        (1-(PHLTOTALS$MSAGroup50_60))*log2(1/(1-(PHLTOTALS$MSAGroup50_60))))

PHLTOTALS$TotalEnt45_50 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup45_50)*log2(1/(PHLTOTALS$MSAGroup45_50)) + 
                                                        (1-(PHLTOTALS$MSAGroup45_50))*log2(1/(1-(PHLTOTALS$MSAGroup45_50))))

PHLTOTALS$TotalEnt40_45 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup40_45)*log2(1/(PHLTOTALS$MSAGroup40_45)) + 
                                                        (1-(PHLTOTALS$MSAGroup40_45))*log2(1/(1-(PHLTOTALS$MSAGroup40_45))))

PHLTOTALS$TotalEnt35_40 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup35_40)*log2(1/(PHLTOTALS$MSAGroup35_40)) + 
                                                        (1-(PHLTOTALS$MSAGroup35_40))*log2(1/(1-(PHLTOTALS$MSAGroup35_40))))

PHLTOTALS$TotalEnt30_35 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup30_35)*log2(1/(PHLTOTALS$MSAGroup30_35)) + 
                                                        (1-(PHLTOTALS$MSAGroup30_35))*log2(1/(1-(PHLTOTALS$MSAGroup30_35))))

PHLTOTALS$TotalEnt25_30 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup25_30)*log2(1/(PHLTOTALS$MSAGroup25_30)) + 
                                                        (1-(PHLTOTALS$MSAGroup25_30))*log2(1/(1-(PHLTOTALS$MSAGroup25_30))))

PHLTOTALS$TotalEnt20_25 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup20_25)*log2(1/(PHLTOTALS$MSAGroup20_25)) + 
                                                        (1-(PHLTOTALS$MSAGroup20_25))*log2(1/(1-(PHLTOTALS$MSAGroup20_25))))

PHLTOTALS$TotalEnt15_20 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup15_20)*log2(1/(PHLTOTALS$MSAGroup15_20)) + 
                                                        (1-(PHLTOTALS$MSAGroup15_20))*log2(1/(1-(PHLTOTALS$MSAGroup15_20))))

PHLTOTALS$TotalEnt10_15 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup10_15)*log2(1/(PHLTOTALS$MSAGroup10_15)) + 
                                                        (1-(PHLTOTALS$MSAGroup10_15))*log2(1/(1-(PHLTOTALS$MSAGroup10_15))))

PHLTOTALS$TotalEnt10 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$MSAGroup10)*log2(1/(PHLTOTALS$MSAGroup10)) + 
                                                     (1-(PHLTOTALS$MSAGroup10))*log2(1/(1-(PHLTOTALS$MSAGroup10))))

PHLTOTALS$ReverseTotalEnt10 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup10)*log2(1/(PHLTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(PHLTOTALS$ReverseMSAGroup10))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup10))))

PHLTOTALS$ReverseTotalEnt10_15 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup10_15)*log2(1/(PHLTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(PHLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup10_15))))

PHLTOTALS$ReverseTotalEnt15_20 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup15_20)*log2(1/(PHLTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(PHLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup15_20))))

PHLTOTALS$ReverseTotalEnt20_25 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup20_25)*log2(1/(PHLTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(PHLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup20_25))))

PHLTOTALS$ReverseTotalEnt25_30 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup25_30)*log2(1/(PHLTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(PHLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup25_30))))

PHLTOTALS$ReverseTotalEnt30_35 <- PHLTOTALS$MSAB19001_001 * ((PHLTOTALS$ReverseMSAGroup30_35)*log2(1/(PHLTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(PHLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
PHLTOTALS$E200 <- ((PHLTOTALS$MSAGroup200)*log2(1/(PHLTOTALS$MSAGroup200)) + (1-(PHLTOTALS$MSAGroup200))*log2(1/(1-(PHLTOTALS$MSAGroup200))))
PHLTOTALS$E150_200 <- ((PHLTOTALS$MSAGroup150_200)*log2(1/(PHLTOTALS$MSAGroup150_200)) + (1-(PHLTOTALS$MSAGroup150_200))*log2(1/(1-(PHLTOTALS$MSAGroup150_200))))
PHLTOTALS$E125_150 <- ((PHLTOTALS$MSAGroup125_150)*log2(1/(PHLTOTALS$MSAGroup125_150)) + (1-(PHLTOTALS$MSAGroup125_150))*log2(1/(1-(PHLTOTALS$MSAGroup125_150))))
PHLTOTALS$E100_125 <- ((PHLTOTALS$MSAGroup100_125)*log2(1/(PHLTOTALS$MSAGroup100_125)) + (1-(PHLTOTALS$MSAGroup100_125))*log2(1/(1-(PHLTOTALS$MSAGroup100_125))))
PHLTOTALS$E75_100 <- ((PHLTOTALS$MSAGroup75_100)*log2(1/(PHLTOTALS$MSAGroup75_100)) + (1-(PHLTOTALS$MSAGroup75_100))*log2(1/(1-(PHLTOTALS$MSAGroup75_100))))
PHLTOTALS$E60_75 <- ((PHLTOTALS$MSAGroup60_75)*log2(1/(PHLTOTALS$MSAGroup60_75)) + (1-(PHLTOTALS$MSAGroup60_75))*log2(1/(1-(PHLTOTALS$MSAGroup60_75))))
PHLTOTALS$E50_60 <- ((PHLTOTALS$MSAGroup50_60)*log2(1/(PHLTOTALS$MSAGroup50_60)) + (1-(PHLTOTALS$MSAGroup50_60))*log2(1/(1-(PHLTOTALS$MSAGroup50_60))))
PHLTOTALS$E50_60 <- ((PHLTOTALS$MSAGroup50_60)*log2(1/(PHLTOTALS$MSAGroup50_60)) + (1-(PHLTOTALS$MSAGroup50_60))*log2(1/(1-(PHLTOTALS$MSAGroup50_60))))
PHLTOTALS$E45_50 <- ((PHLTOTALS$MSAGroup45_50)*log2(1/(PHLTOTALS$MSAGroup45_50)) + (1-(PHLTOTALS$MSAGroup45_50))*log2(1/(1-(PHLTOTALS$MSAGroup45_50))))
PHLTOTALS$E40_45 <- ((PHLTOTALS$MSAGroup40_45)*log2(1/(PHLTOTALS$MSAGroup40_45)) + (1-(PHLTOTALS$MSAGroup40_45))*log2(1/(1-(PHLTOTALS$MSAGroup40_45))))
PHLTOTALS$E35_40 <- ((PHLTOTALS$MSAGroup35_40)*log2(1/(PHLTOTALS$MSAGroup35_40)) + (1-(PHLTOTALS$MSAGroup35_40))*log2(1/(1-(PHLTOTALS$MSAGroup35_40))))
PHLTOTALS$E30_35 <- ((PHLTOTALS$MSAGroup30_35)*log2(1/(PHLTOTALS$MSAGroup30_35)) + (1-(PHLTOTALS$MSAGroup30_35))*log2(1/(1-(PHLTOTALS$MSAGroup30_35))))
PHLTOTALS$E25_30 <- ((PHLTOTALS$MSAGroup25_30)*log2(1/(PHLTOTALS$MSAGroup25_30)) + (1-(PHLTOTALS$MSAGroup25_30))*log2(1/(1-(PHLTOTALS$MSAGroup25_30))))
PHLTOTALS$E20_25 <- ((PHLTOTALS$MSAGroup20_25)*log2(1/(PHLTOTALS$MSAGroup20_25)) + (1-(PHLTOTALS$MSAGroup20_25))*log2(1/(1-(PHLTOTALS$MSAGroup20_25))))
PHLTOTALS$E15_20 <- ((PHLTOTALS$MSAGroup15_20)*log2(1/(PHLTOTALS$MSAGroup15_20)) + (1-(PHLTOTALS$MSAGroup15_20))*log2(1/(1-(PHLTOTALS$MSAGroup15_20))))
PHLTOTALS$E10_15 <- ((PHLTOTALS$MSAGroup10_15)*log2(1/(PHLTOTALS$MSAGroup10_15)) + (1-(PHLTOTALS$MSAGroup10_15))*log2(1/(1-(PHLTOTALS$MSAGroup10_15))))
PHLTOTALS$E10 <- ((PHLTOTALS$MSAGroup10)*log2(1/(PHLTOTALS$MSAGroup10)) + (1-(PHLTOTALS$MSAGroup10))*log2(1/(1-(PHLTOTALS$MSAGroup10))))
PHLTOTALS$ReverseE10 <- ((PHLTOTALS$ReverseMSAGroup10)*log2(1/(PHLTOTALS$ReverseMSAGroup10)) + (1-(PHLTOTALS$ReverseMSAGroup10))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup10))))
PHLTOTALS$ReverseE10_15 <- ((PHLTOTALS$ReverseMSAGroup10_15)*log2(1/(PHLTOTALS$ReverseMSAGroup10_15)) + (1-(PHLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup10_15))))
PHLTOTALS$ReverseE15_20 <- ((PHLTOTALS$ReverseMSAGroup15_20)*log2(1/(PHLTOTALS$ReverseMSAGroup15_20)) + (1-(PHLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup15_20))))
PHLTOTALS$ReverseE20_25 <- ((PHLTOTALS$ReverseMSAGroup20_25)*log2(1/(PHLTOTALS$ReverseMSAGroup20_25)) + (1-(PHLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup20_25))))
PHLTOTALS$ReverseE25_30 <- ((PHLTOTALS$ReverseMSAGroup25_30)*log2(1/(PHLTOTALS$ReverseMSAGroup25_30)) + (1-(PHLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup25_30))))
PHLTOTALS$ReverseE30_35 <- ((PHLTOTALS$ReverseMSAGroup30_35)*log2(1/(PHLTOTALS$ReverseMSAGroup30_35)) + (1-(PHLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup30_35))))
PHLTOTALS$ReverseE35_40 <- ((PHLTOTALS$ReverseMSAGroup35_40)*log2(1/(PHLTOTALS$ReverseMSAGroup35_40)) + (1-(PHLTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(PHLTOTALS$ReverseMSAGroup35_40))))


PHL$Section200 <- PHL$LocalEnt200 / PHLTOTALS$TotalEnt200
PHL$Section150_200 <- PHL$LocalEnt150_200 / PHLTOTALS$TotalEnt150_200
PHL$Section125_150 <- PHL$LocalEnt125_150 / PHLTOTALS$TotalEnt125_150
PHL$Section100_125 <- PHL$LocalEnt100_125 / PHLTOTALS$TotalEnt100_125
PHL$Section75_100 <- PHL$LocalEnt75_100 / PHLTOTALS$TotalEnt75_100
PHL$Section60_75 <- PHL$LocalEnt60_75 / PHLTOTALS$TotalEnt60_75
PHL$Section50_60 <- PHL$LocalEnt50_60 / PHLTOTALS$TotalEnt50_60
PHL$Section45_50 <- PHL$LocalEnt45_50 / PHLTOTALS$TotalEnt45_50
PHL$Section40_45 <- PHL$LocalEnt40_45 / PHLTOTALS$TotalEnt40_45
PHL$Section35_40 <- PHL$LocalEnt35_40 / PHLTOTALS$TotalEnt35_40
PHL$Section30_35 <- PHL$LocalEnt30_35 / PHLTOTALS$TotalEnt30_35
PHL$Section25_30 <- PHL$LocalEnt25_30 / PHLTOTALS$TotalEnt25_30
PHL$Section20_25 <- PHL$LocalEnt20_25 / PHLTOTALS$TotalEnt20_25
PHL$Section15_20 <- PHL$LocalEnt15_20 / PHLTOTALS$TotalEnt15_20
PHL$Section10_15 <- PHL$LocalEnt10_15 / PHLTOTALS$TotalEnt10_15
PHL$Section10 <- PHL$LocalEnt10 / PHLTOTALS$TotalEnt10
PHL$ReverseSection10 <- PHL$ReverseLocalEnt10 / PHLTOTALS$ReverseTotalEnt10
PHL$ReverseSection10_15 <- PHL$ReverseLocalEnt10_15 / PHLTOTALS$ReverseTotalEnt10_15
PHL$ReverseSection15_20 <- PHL$ReverseLocalEnt15_20 / PHLTOTALS$ReverseTotalEnt15_20
PHL$ReverseSection20_25 <- PHL$ReverseLocalEnt20_25 / PHLTOTALS$ReverseTotalEnt20_25
PHL$ReverseSection25_30 <- PHL$ReverseLocalEnt25_30 / PHLTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
PHL[is.na(PHL)] <- 0

PHLTOTALS$Percent200 <- 1 - sum(PHL$Section200)
PHLTOTALS$Percent150_200 <- 1 - sum(PHL$Section150_200)
PHLTOTALS$Percent125_150 <- 1 - sum(PHL$Section125_150)
PHLTOTALS$Percent100_125 <- 1 - sum(PHL$Section100_125)
PHLTOTALS$Percent75_100 <- 1 - sum(PHL$Section75_100)
PHLTOTALS$Percent60_75 <- 1 - sum(PHL$Section60_75)
PHLTOTALS$Percent50_60 <- 1 - sum(PHL$Section50_60)
PHLTOTALS$Percent45_50 <- 1 - sum(PHL$Section45_50)
PHLTOTALS$Percent40_45 <- 1 - sum(PHL$Section40_45)
PHLTOTALS$Percent35_40 <- 1 - sum(PHL$Section35_40)
PHLTOTALS$Percent30_35 <- 1 - sum(PHL$Section30_35)
PHLTOTALS$Percent25_30 <- 1 - sum(PHL$Section25_30)
PHLTOTALS$Percent20_25 <- 1 - sum(PHL$Section20_25)
PHLTOTALS$Percent15_20 <- 1 - sum(PHL$Section15_20)
PHLTOTALS$Percent10_15 <- 1 - sum(PHL$Section10_15)
PHLTOTALS$Percent10 <- 1 - sum(PHL$Section10)
PHLTOTALS$ReversePercent10 <- 1 - sum(PHL$ReverseSection10)
PHLTOTALS$ReversePercent10_15 <- 1 - sum(PHL$ReverseSection10_15)
PHLTOTALS$ReversePercent15_20 <- 1 - sum(PHL$ReverseSection15_20)
PHLTOTALS$ReversePercent20_25 <- 1 - sum(PHL$ReverseSection20_25)
PHLTOTALS$ReversePercent25_30 <- 1 - sum(PHL$ReverseSection25_30)


PHLTOTALS$Weight200 <- PHLTOTALS$E200 * PHLTOTALS$Percent200
PHLTOTALS$Weight150_200 <- (PHLTOTALS$E150_200 * PHLTOTALS$Percent150_200)
PHLTOTALS$Weight125_150 <- (PHLTOTALS$E125_150 * PHLTOTALS$Percent125_150) 
PHLTOTALS$Weight100_125 <- (PHLTOTALS$E100_125 * PHLTOTALS$Percent100_125) 
PHLTOTALS$Weight75_100 <- (PHLTOTALS$E75_100 * PHLTOTALS$Percent75_100)
PHLTOTALS$Weight60_75 <- (PHLTOTALS$E60_75 * PHLTOTALS$Percent60_75) 
PHLTOTALS$Weight50_60 <- (PHLTOTALS$E50_60 * PHLTOTALS$Percent50_60) 
PHLTOTALS$Weight45_50 <- (PHLTOTALS$E45_50 * PHLTOTALS$Percent45_50)
PHLTOTALS$Weight40_45 <- (PHLTOTALS$E40_45 * PHLTOTALS$Percent40_45) 
PHLTOTALS$Weight35_40 <- (PHLTOTALS$E35_40 * PHLTOTALS$Percent35_40) 
PHLTOTALS$Weight30_35 <- (PHLTOTALS$E30_35 * PHLTOTALS$Percent30_35)
PHLTOTALS$Weight25_30 <- (PHLTOTALS$E25_30 * PHLTOTALS$Percent25_30) 
PHLTOTALS$Weight20_25 <- (PHLTOTALS$E20_25 * PHLTOTALS$Percent20_25)
PHLTOTALS$Weight15_20 <- (PHLTOTALS$E15_20 * PHLTOTALS$Percent15_20) 
PHLTOTALS$Weight10_15 <- (PHLTOTALS$E10_15 * PHLTOTALS$Percent10_15) 
PHLTOTALS$Weight10 <- (PHLTOTALS$E10 * PHLTOTALS$Percent10) 
PHLTOTALS$ReverseWeight10 <- (PHLTOTALS$ReverseE10 * PHLTOTALS$ReversePercent10)
PHLTOTALS$ReverseWeight10_15 <- (PHLTOTALS$ReverseE10_15 * PHLTOTALS$ReversePercent10_15)
PHLTOTALS$ReverseWeight15_20 <- (PHLTOTALS$ReverseE15_20 * PHLTOTALS$ReversePercent15_20)
PHLTOTALS$ReverseWeight20_25 <- (PHLTOTALS$ReverseE20_25 * PHLTOTALS$ReversePercent20_25)
PHLTOTALS$ReverseWeight25_30 <- (PHLTOTALS$ReverseE25_30 * PHLTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

MIA$Group200 <- (MIA$B19001_017/MIA$B19001_001)
MIA$Group150_200 <- (MIA$B19001_017 + MIA$B19001_016)/MIA$B19001_001;
MIA$Group125_150 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015)/MIA$B19001_001;
MIA$Group100_125 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014)/MIA$B19001_001;
MIA$Group75_100 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013)/MIA$B19001_001;
MIA$Group60_75 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012)/MIA$B19001_001;
MIA$Group50_60 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011)/MIA$B19001_001;
MIA$Group45_50 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010)/MIA$B19001_001;
MIA$Group40_45 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009)/MIA$B19001_001;
MIA$Group35_40 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008)/MIA$B19001_001;
MIA$Group30_35 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007)/MIA$B19001_001;
MIA$Group25_30 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007 + MIA$B19001_006)/MIA$B19001_001;
MIA$Group20_25 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007 + MIA$B19001_006 + MIA$B19001_005)/MIA$B19001_001;
MIA$Group15_20 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007 + MIA$B19001_006 + MIA$B19001_005 + MIA$B19001_004)/MIA$B19001_001;
MIA$Group10_15 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007 + MIA$B19001_006 + MIA$B19001_005 + MIA$B19001_004 + MIA$B19001_003)/MIA$B19001_001;
MIA$Group10 <- (MIA$B19001_017 + MIA$B19001_016 + MIA$B19001_015 + MIA$B19001_014 + MIA$B19001_013 + MIA$B19001_012 + MIA$B19001_011 + MIA$B19001_010 + MIA$B19001_009 + MIA$B19001_008 + MIA$B19001_007 + MIA$B19001_006 + MIA$B19001_005 + MIA$B19001_004 + MIA$B19001_003 + MIA$B19001_002)/MIA$B19001_001;
MIA$ReverseGroup10 <- (MIA$B19001_002)/MIA$B19001_001;
MIA$ReverseGroup10_15 <- (MIA$B19001_002 + MIA$B19001_003)/MIA$B19001_001;
MIA$ReverseGroup15_20 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004)/MIA$B19001_001;
MIA$ReverseGroup20_25 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005)/MIA$B19001_001;
MIA$ReverseGroup25_30 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006)/MIA$B19001_001;
MIA$ReverseGroup30_35 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007)/MIA$B19001_001;
MIA$ReverseGroup35_40 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007 + MIA$B19001_008)/MIA$B19001_001;
MIA$ReverseGroup40_45 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007 + MIA$B19001_008 + MIA$B19001_009)/MIA$B19001_001;
MIA$ReverseGroup45_50 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007 + MIA$B19001_008 + MIA$B19001_009 + MIA$B19001_010)/MIA$B19001_001;
MIA$ReverseGroup50_60 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007 + MIA$B19001_008 + MIA$B19001_009 + MIA$B19001_010 + MIA$B19001_011)/MIA$B19001_001;
MIA$ReverseGroup60_75 <- (MIA$B19001_002 + MIA$B19001_003 + MIA$B19001_004 + MIA$B19001_005 + MIA$B19001_006 + MIA$B19001_007 + MIA$B19001_008 + MIA$B19001_009 + MIA$B19001_010 + MIA$B19001_011 + MIA$B19001_012)/MIA$B19001_001;

MIA$LocalEnt200 <- MIA$B19001_001 * ((MIA$Group200)*log2(1/(MIA$Group200)) + 
                                       (1-(MIA$Group200))*log2(1/(1-(MIA$Group200))))

MIA$LocalEnt150_200 <- MIA$B19001_001 * ((MIA$Group150_200)*log2(1/(MIA$Group150_200)) + 
                                           (1-(MIA$Group150_200))*log2(1/(1-(MIA$Group150_200))))

MIA$LocalEnt125_150 <- MIA$B19001_001 * ((MIA$Group125_150)*log2(1/(MIA$Group125_150)) + 
                                           (1-(MIA$Group125_150))*log2(1/(1-(MIA$Group125_150))))

MIA$LocalEnt100_125 <- MIA$B19001_001 * ((MIA$Group100_125)*log2(1/(MIA$Group100_125)) + 
                                           (1-(MIA$Group100_125))*log2(1/(1-(MIA$Group100_125))))

MIA$LocalEnt75_100 <- MIA$B19001_001 * ((MIA$Group75_100)*log2(1/(MIA$Group75_100)) + 
                                          (1-(MIA$Group75_100))*log2(1/(1-(MIA$Group75_100))))

MIA$LocalEnt60_75 <- MIA$B19001_001 * ((MIA$Group60_75)*log2(1/(MIA$Group60_75)) + 
                                         (1-(MIA$Group60_75))*log2(1/(1-(MIA$Group60_75))))

MIA$LocalEnt50_60 <- MIA$B19001_001 * ((MIA$Group50_60)*log2(1/(MIA$Group50_60)) + 
                                         (1-(MIA$Group50_60))*log2(1/(1-(MIA$Group50_60))))

MIA$LocalEnt45_50 <- MIA$B19001_001 * ((MIA$Group45_50)*log2(1/(MIA$Group45_50)) + 
                                         (1-(MIA$Group45_50))*log2(1/(1-(MIA$Group45_50))))

MIA$LocalEnt40_45 <- MIA$B19001_001 * ((MIA$Group40_45)*log2(1/(MIA$Group40_45)) + 
                                         (1-(MIA$Group40_45))*log2(1/(1-(MIA$Group40_45))))

MIA$LocalEnt35_40 <- MIA$B19001_001 * ((MIA$Group35_40)*log2(1/(MIA$Group35_40)) + 
                                         (1-(MIA$Group35_40))*log2(1/(1-(MIA$Group35_40))))

MIA$LocalEnt30_35 <- MIA$B19001_001 * ((MIA$Group30_35)*log2(1/(MIA$Group30_35)) + 
                                         (1-(MIA$Group30_35))*log2(1/(1-(MIA$Group30_35))))

MIA$LocalEnt25_30 <- MIA$B19001_001 * ((MIA$Group25_30)*log2(1/(MIA$Group25_30)) + 
                                         (1-(MIA$Group25_30))*log2(1/(1-(MIA$Group25_30))))

MIA$LocalEnt20_25 <- MIA$B19001_001 * ((MIA$Group20_25)*log2(1/(MIA$Group20_25)) + 
                                         (1-(MIA$Group20_25))*log2(1/(1-(MIA$Group20_25))))

MIA$LocalEnt15_20 <- MIA$B19001_001 * ((MIA$Group15_20)*log2(1/(MIA$Group15_20)) + 
                                         (1-(MIA$Group15_20))*log2(1/(1-(MIA$Group15_20))))

MIA$LocalEnt10_15 <- MIA$B19001_001 * ((MIA$Group10_15)*log2(1/(MIA$Group10_15)) + 
                                         (1-(MIA$Group10_15))*log2(1/(1-(MIA$Group10_15))))

MIA$LocalEnt10 <- MIA$B19001_001 * ((MIA$Group10)*log2(1/(MIA$Group10)) + 
                                      (1-(MIA$Group10))*log2(1/(1-(MIA$Group10))))

MIA$ReverseLocalEnt10 <- MIA$B19001_001 * ((MIA$ReverseGroup10)*log2(1/(MIA$ReverseGroup10)) + 
                                             (1-(MIA$ReverseGroup10))*log2(1/(1-(MIA$ReverseGroup10))))

MIA$ReverseLocalEnt10_15 <- MIA$B19001_001 * ((MIA$ReverseGroup10_15)*log2(1/(MIA$ReverseGroup10_15)) + 
                                                (1-(MIA$ReverseGroup10_15))*log2(1/(1-(MIA$ReverseGroup10_15))))

MIA$ReverseLocalEnt15_20 <- MIA$B19001_001 * ((MIA$ReverseGroup15_20)*log2(1/(MIA$ReverseGroup15_20)) + 
                                                (1-(MIA$ReverseGroup15_20))*log2(1/(1-(MIA$ReverseGroup15_20))))

MIA$ReverseLocalEnt20_25 <- MIA$B19001_001 * ((MIA$ReverseGroup20_25)*log2(1/(MIA$ReverseGroup20_25)) + 
                                                (1-(MIA$ReverseGroup20_25))*log2(1/(1-(MIA$ReverseGroup20_25))))

MIA$ReverseLocalEnt25_30 <- MIA$B19001_001 * ((MIA$ReverseGroup25_30)*log2(1/(MIA$ReverseGroup25_30)) + 
                                                (1-(MIA$ReverseGroup25_30))*log2(1/(1-(MIA$ReverseGroup25_30))))

MIA$ReverseLocalEnt30_35 <- MIA$B19001_001 * ((MIA$ReverseGroup30_35)*log2(1/(MIA$ReverseGroup30_35)) + 
                                                (1-(MIA$ReverseGroup30_35))*log2(1/(1-(MIA$ReverseGroup30_35))))


#HA stuff Total


MIATOTALS <- MIA %>%
  summarise(MSAB19001_001 = sum(MIA$B19001_001), MSAB19001_002 = sum(MIA$B19001_002), MSAB19001_003 = sum(MIA$B19001_003), MSAB19001_004 = sum(MIA$B19001_004),
            MSAB19001_005 = sum(MIA$B19001_005), MSAB19001_006 = sum(MIA$B19001_006), MSAB19001_007 = sum(MIA$B19001_007),
            MSAB19001_008 = sum(MIA$B19001_008), MSAB19001_009 = sum(MIA$B19001_009), MSAB19001_010 = sum(MIA$B19001_010),
            MSAB19001_011 = sum(MIA$B19001_011), MSAB19001_012 = sum(MIA$B19001_012), MSAB19001_013 = sum(MIA$B19001_013),
            MSAB19001_014 = sum(MIA$B19001_014), MSAB19001_015 = sum(MIA$B19001_015), MSAB19001_016 = sum(MIA$B19001_016),
            MSAB19001_017 = sum(MIA$B19001_017))


MIATOTALS$MSAGroup200 <- (MIATOTALS$MSAB19001_017/MIATOTALS$MSAB19001_001)
MIATOTALS$MSAGroup150_200 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup125_150 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup100_125 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup75_100 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup60_75 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup50_60 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup45_50 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup40_45 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup35_40 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup30_35 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup25_30 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_006)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup20_25 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_005)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup15_20 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_004)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup10_15 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_003)/MIATOTALS$MSAB19001_001;
MIATOTALS$MSAGroup10 <- (MIATOTALS$MSAB19001_017 + MIATOTALS$MSAB19001_016 + MIATOTALS$MSAB19001_015 + MIATOTALS$MSAB19001_014 + MIATOTALS$MSAB19001_013 + MIATOTALS$MSAB19001_012 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_002)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup10 <- (MIATOTALS$MSAB19001_002)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup10_15 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup15_20 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup20_25 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup25_30 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup30_35 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup35_40 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_008)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup40_45 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_009)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup45_50 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_010)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup50_60 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_011)/MIATOTALS$MSAB19001_001;
MIATOTALS$ReverseMSAGroup60_75 <- (MIATOTALS$MSAB19001_002 + MIATOTALS$MSAB19001_003 + MIATOTALS$MSAB19001_004 + MIATOTALS$MSAB19001_005 + MIATOTALS$MSAB19001_006 + MIATOTALS$MSAB19001_007 + MIATOTALS$MSAB19001_008 + MIATOTALS$MSAB19001_009 + MIATOTALS$MSAB19001_010 + MIATOTALS$MSAB19001_011 + MIATOTALS$MSAB19001_012)/MIATOTALS$MSAB19001_001;

MIATOTALS$TotalEnt200 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup200)*log2(1/(MIATOTALS$MSAGroup200)) + 
                                                      (1-(MIATOTALS$MSAGroup200))*log2(1/(1-(MIATOTALS$MSAGroup200))))

MIATOTALS$TotalEnt150_200 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup150_200)*log2(1/(MIATOTALS$MSAGroup150_200)) + 
                                                          (1-(MIATOTALS$MSAGroup150_200))*log2(1/(1-(MIATOTALS$MSAGroup150_200))))

MIATOTALS$TotalEnt125_150 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup125_150)*log2(1/(MIATOTALS$MSAGroup125_150)) + 
                                                          (1-(MIATOTALS$MSAGroup125_150))*log2(1/(1-(MIATOTALS$MSAGroup125_150))))

MIATOTALS$TotalEnt100_125 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup100_125)*log2(1/(MIATOTALS$MSAGroup100_125)) + 
                                                          (1-(MIATOTALS$MSAGroup100_125))*log2(1/(1-(MIATOTALS$MSAGroup100_125))))

MIATOTALS$TotalEnt75_100 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup75_100)*log2(1/(MIATOTALS$MSAGroup75_100)) + 
                                                         (1-(MIATOTALS$MSAGroup75_100))*log2(1/(1-(MIATOTALS$MSAGroup75_100))))

MIATOTALS$TotalEnt60_75 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup60_75)*log2(1/(MIATOTALS$MSAGroup60_75)) + 
                                                        (1-(MIATOTALS$MSAGroup60_75))*log2(1/(1-(MIATOTALS$MSAGroup60_75))))

MIATOTALS$TotalEnt50_60 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup50_60)*log2(1/(MIATOTALS$MSAGroup50_60)) + 
                                                        (1-(MIATOTALS$MSAGroup50_60))*log2(1/(1-(MIATOTALS$MSAGroup50_60))))

MIATOTALS$TotalEnt45_50 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup45_50)*log2(1/(MIATOTALS$MSAGroup45_50)) + 
                                                        (1-(MIATOTALS$MSAGroup45_50))*log2(1/(1-(MIATOTALS$MSAGroup45_50))))

MIATOTALS$TotalEnt40_45 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup40_45)*log2(1/(MIATOTALS$MSAGroup40_45)) + 
                                                        (1-(MIATOTALS$MSAGroup40_45))*log2(1/(1-(MIATOTALS$MSAGroup40_45))))

MIATOTALS$TotalEnt35_40 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup35_40)*log2(1/(MIATOTALS$MSAGroup35_40)) + 
                                                        (1-(MIATOTALS$MSAGroup35_40))*log2(1/(1-(MIATOTALS$MSAGroup35_40))))

MIATOTALS$TotalEnt30_35 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup30_35)*log2(1/(MIATOTALS$MSAGroup30_35)) + 
                                                        (1-(MIATOTALS$MSAGroup30_35))*log2(1/(1-(MIATOTALS$MSAGroup30_35))))

MIATOTALS$TotalEnt25_30 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup25_30)*log2(1/(MIATOTALS$MSAGroup25_30)) + 
                                                        (1-(MIATOTALS$MSAGroup25_30))*log2(1/(1-(MIATOTALS$MSAGroup25_30))))

MIATOTALS$TotalEnt20_25 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup20_25)*log2(1/(MIATOTALS$MSAGroup20_25)) + 
                                                        (1-(MIATOTALS$MSAGroup20_25))*log2(1/(1-(MIATOTALS$MSAGroup20_25))))

MIATOTALS$TotalEnt15_20 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup15_20)*log2(1/(MIATOTALS$MSAGroup15_20)) + 
                                                        (1-(MIATOTALS$MSAGroup15_20))*log2(1/(1-(MIATOTALS$MSAGroup15_20))))

MIATOTALS$TotalEnt10_15 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup10_15)*log2(1/(MIATOTALS$MSAGroup10_15)) + 
                                                        (1-(MIATOTALS$MSAGroup10_15))*log2(1/(1-(MIATOTALS$MSAGroup10_15))))

MIATOTALS$TotalEnt10 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$MSAGroup10)*log2(1/(MIATOTALS$MSAGroup10)) + 
                                                     (1-(MIATOTALS$MSAGroup10))*log2(1/(1-(MIATOTALS$MSAGroup10))))

MIATOTALS$ReverseTotalEnt10 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup10)*log2(1/(MIATOTALS$ReverseMSAGroup10)) + 
                                                            (1-(MIATOTALS$ReverseMSAGroup10))*log2(1/(1-(MIATOTALS$ReverseMSAGroup10))))

MIATOTALS$ReverseTotalEnt10_15 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup10_15)*log2(1/(MIATOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(MIATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(MIATOTALS$ReverseMSAGroup10_15))))

MIATOTALS$ReverseTotalEnt15_20 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup15_20)*log2(1/(MIATOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(MIATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(MIATOTALS$ReverseMSAGroup15_20))))

MIATOTALS$ReverseTotalEnt20_25 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup20_25)*log2(1/(MIATOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(MIATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(MIATOTALS$ReverseMSAGroup20_25))))

MIATOTALS$ReverseTotalEnt25_30 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup25_30)*log2(1/(MIATOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(MIATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(MIATOTALS$ReverseMSAGroup25_30))))

MIATOTALS$ReverseTotalEnt30_35 <- MIATOTALS$MSAB19001_001 * ((MIATOTALS$ReverseMSAGroup30_35)*log2(1/(MIATOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(MIATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(MIATOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
MIATOTALS$E200 <- ((MIATOTALS$MSAGroup200)*log2(1/(MIATOTALS$MSAGroup200)) + (1-(MIATOTALS$MSAGroup200))*log2(1/(1-(MIATOTALS$MSAGroup200))))
MIATOTALS$E150_200 <- ((MIATOTALS$MSAGroup150_200)*log2(1/(MIATOTALS$MSAGroup150_200)) + (1-(MIATOTALS$MSAGroup150_200))*log2(1/(1-(MIATOTALS$MSAGroup150_200))))
MIATOTALS$E125_150 <- ((MIATOTALS$MSAGroup125_150)*log2(1/(MIATOTALS$MSAGroup125_150)) + (1-(MIATOTALS$MSAGroup125_150))*log2(1/(1-(MIATOTALS$MSAGroup125_150))))
MIATOTALS$E100_125 <- ((MIATOTALS$MSAGroup100_125)*log2(1/(MIATOTALS$MSAGroup100_125)) + (1-(MIATOTALS$MSAGroup100_125))*log2(1/(1-(MIATOTALS$MSAGroup100_125))))
MIATOTALS$E75_100 <- ((MIATOTALS$MSAGroup75_100)*log2(1/(MIATOTALS$MSAGroup75_100)) + (1-(MIATOTALS$MSAGroup75_100))*log2(1/(1-(MIATOTALS$MSAGroup75_100))))
MIATOTALS$E60_75 <- ((MIATOTALS$MSAGroup60_75)*log2(1/(MIATOTALS$MSAGroup60_75)) + (1-(MIATOTALS$MSAGroup60_75))*log2(1/(1-(MIATOTALS$MSAGroup60_75))))
MIATOTALS$E50_60 <- ((MIATOTALS$MSAGroup50_60)*log2(1/(MIATOTALS$MSAGroup50_60)) + (1-(MIATOTALS$MSAGroup50_60))*log2(1/(1-(MIATOTALS$MSAGroup50_60))))
MIATOTALS$E50_60 <- ((MIATOTALS$MSAGroup50_60)*log2(1/(MIATOTALS$MSAGroup50_60)) + (1-(MIATOTALS$MSAGroup50_60))*log2(1/(1-(MIATOTALS$MSAGroup50_60))))
MIATOTALS$E45_50 <- ((MIATOTALS$MSAGroup45_50)*log2(1/(MIATOTALS$MSAGroup45_50)) + (1-(MIATOTALS$MSAGroup45_50))*log2(1/(1-(MIATOTALS$MSAGroup45_50))))
MIATOTALS$E40_45 <- ((MIATOTALS$MSAGroup40_45)*log2(1/(MIATOTALS$MSAGroup40_45)) + (1-(MIATOTALS$MSAGroup40_45))*log2(1/(1-(MIATOTALS$MSAGroup40_45))))
MIATOTALS$E35_40 <- ((MIATOTALS$MSAGroup35_40)*log2(1/(MIATOTALS$MSAGroup35_40)) + (1-(MIATOTALS$MSAGroup35_40))*log2(1/(1-(MIATOTALS$MSAGroup35_40))))
MIATOTALS$E30_35 <- ((MIATOTALS$MSAGroup30_35)*log2(1/(MIATOTALS$MSAGroup30_35)) + (1-(MIATOTALS$MSAGroup30_35))*log2(1/(1-(MIATOTALS$MSAGroup30_35))))
MIATOTALS$E25_30 <- ((MIATOTALS$MSAGroup25_30)*log2(1/(MIATOTALS$MSAGroup25_30)) + (1-(MIATOTALS$MSAGroup25_30))*log2(1/(1-(MIATOTALS$MSAGroup25_30))))
MIATOTALS$E20_25 <- ((MIATOTALS$MSAGroup20_25)*log2(1/(MIATOTALS$MSAGroup20_25)) + (1-(MIATOTALS$MSAGroup20_25))*log2(1/(1-(MIATOTALS$MSAGroup20_25))))
MIATOTALS$E15_20 <- ((MIATOTALS$MSAGroup15_20)*log2(1/(MIATOTALS$MSAGroup15_20)) + (1-(MIATOTALS$MSAGroup15_20))*log2(1/(1-(MIATOTALS$MSAGroup15_20))))
MIATOTALS$E10_15 <- ((MIATOTALS$MSAGroup10_15)*log2(1/(MIATOTALS$MSAGroup10_15)) + (1-(MIATOTALS$MSAGroup10_15))*log2(1/(1-(MIATOTALS$MSAGroup10_15))))
MIATOTALS$E10 <- ((MIATOTALS$MSAGroup10)*log2(1/(MIATOTALS$MSAGroup10)) + (1-(MIATOTALS$MSAGroup10))*log2(1/(1-(MIATOTALS$MSAGroup10))))
MIATOTALS$ReverseE10 <- ((MIATOTALS$ReverseMSAGroup10)*log2(1/(MIATOTALS$ReverseMSAGroup10)) + (1-(MIATOTALS$ReverseMSAGroup10))*log2(1/(1-(MIATOTALS$ReverseMSAGroup10))))
MIATOTALS$ReverseE10_15 <- ((MIATOTALS$ReverseMSAGroup10_15)*log2(1/(MIATOTALS$ReverseMSAGroup10_15)) + (1-(MIATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(MIATOTALS$ReverseMSAGroup10_15))))
MIATOTALS$ReverseE15_20 <- ((MIATOTALS$ReverseMSAGroup15_20)*log2(1/(MIATOTALS$ReverseMSAGroup15_20)) + (1-(MIATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(MIATOTALS$ReverseMSAGroup15_20))))
MIATOTALS$ReverseE20_25 <- ((MIATOTALS$ReverseMSAGroup20_25)*log2(1/(MIATOTALS$ReverseMSAGroup20_25)) + (1-(MIATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(MIATOTALS$ReverseMSAGroup20_25))))
MIATOTALS$ReverseE25_30 <- ((MIATOTALS$ReverseMSAGroup25_30)*log2(1/(MIATOTALS$ReverseMSAGroup25_30)) + (1-(MIATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(MIATOTALS$ReverseMSAGroup25_30))))
MIATOTALS$ReverseE30_35 <- ((MIATOTALS$ReverseMSAGroup30_35)*log2(1/(MIATOTALS$ReverseMSAGroup30_35)) + (1-(MIATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(MIATOTALS$ReverseMSAGroup30_35))))
MIATOTALS$ReverseE35_40 <- ((MIATOTALS$ReverseMSAGroup35_40)*log2(1/(MIATOTALS$ReverseMSAGroup35_40)) + (1-(MIATOTALS$ReverseMSAGroup35_40))*log2(1/(1-(MIATOTALS$ReverseMSAGroup35_40))))


MIA$Section200 <- MIA$LocalEnt200 / MIATOTALS$TotalEnt200
MIA$Section150_200 <- MIA$LocalEnt150_200 / MIATOTALS$TotalEnt150_200
MIA$Section125_150 <- MIA$LocalEnt125_150 / MIATOTALS$TotalEnt125_150
MIA$Section100_125 <- MIA$LocalEnt100_125 / MIATOTALS$TotalEnt100_125
MIA$Section75_100 <- MIA$LocalEnt75_100 / MIATOTALS$TotalEnt75_100
MIA$Section60_75 <- MIA$LocalEnt60_75 / MIATOTALS$TotalEnt60_75
MIA$Section50_60 <- MIA$LocalEnt50_60 / MIATOTALS$TotalEnt50_60
MIA$Section45_50 <- MIA$LocalEnt45_50 / MIATOTALS$TotalEnt45_50
MIA$Section40_45 <- MIA$LocalEnt40_45 / MIATOTALS$TotalEnt40_45
MIA$Section35_40 <- MIA$LocalEnt35_40 / MIATOTALS$TotalEnt35_40
MIA$Section30_35 <- MIA$LocalEnt30_35 / MIATOTALS$TotalEnt30_35
MIA$Section25_30 <- MIA$LocalEnt25_30 / MIATOTALS$TotalEnt25_30
MIA$Section20_25 <- MIA$LocalEnt20_25 / MIATOTALS$TotalEnt20_25
MIA$Section15_20 <- MIA$LocalEnt15_20 / MIATOTALS$TotalEnt15_20
MIA$Section10_15 <- MIA$LocalEnt10_15 / MIATOTALS$TotalEnt10_15
MIA$Section10 <- MIA$LocalEnt10 / MIATOTALS$TotalEnt10
MIA$ReverseSection10 <- MIA$ReverseLocalEnt10 / MIATOTALS$ReverseTotalEnt10
MIA$ReverseSection10_15 <- MIA$ReverseLocalEnt10_15 / MIATOTALS$ReverseTotalEnt10_15
MIA$ReverseSection15_20 <- MIA$ReverseLocalEnt15_20 / MIATOTALS$ReverseTotalEnt15_20
MIA$ReverseSection20_25 <- MIA$ReverseLocalEnt20_25 / MIATOTALS$ReverseTotalEnt20_25
MIA$ReverseSection25_30 <- MIA$ReverseLocalEnt25_30 / MIATOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
MIA[is.na(MIA)] <- 0

MIATOTALS$Percent200 <- 1 - sum(MIA$Section200)
MIATOTALS$Percent150_200 <- 1 - sum(MIA$Section150_200)
MIATOTALS$Percent125_150 <- 1 - sum(MIA$Section125_150)
MIATOTALS$Percent100_125 <- 1 - sum(MIA$Section100_125)
MIATOTALS$Percent75_100 <- 1 - sum(MIA$Section75_100)
MIATOTALS$Percent60_75 <- 1 - sum(MIA$Section60_75)
MIATOTALS$Percent50_60 <- 1 - sum(MIA$Section50_60)
MIATOTALS$Percent45_50 <- 1 - sum(MIA$Section45_50)
MIATOTALS$Percent40_45 <- 1 - sum(MIA$Section40_45)
MIATOTALS$Percent35_40 <- 1 - sum(MIA$Section35_40)
MIATOTALS$Percent30_35 <- 1 - sum(MIA$Section30_35)
MIATOTALS$Percent25_30 <- 1 - sum(MIA$Section25_30)
MIATOTALS$Percent20_25 <- 1 - sum(MIA$Section20_25)
MIATOTALS$Percent15_20 <- 1 - sum(MIA$Section15_20)
MIATOTALS$Percent10_15 <- 1 - sum(MIA$Section10_15)
MIATOTALS$Percent10 <- 1 - sum(MIA$Section10)
MIATOTALS$ReversePercent10 <- 1 - sum(MIA$ReverseSection10)
MIATOTALS$ReversePercent10_15 <- 1 - sum(MIA$ReverseSection10_15)
MIATOTALS$ReversePercent15_20 <- 1 - sum(MIA$ReverseSection15_20)
MIATOTALS$ReversePercent20_25 <- 1 - sum(MIA$ReverseSection20_25)
MIATOTALS$ReversePercent25_30 <- 1 - sum(MIA$ReverseSection25_30)


MIATOTALS$Weight200 <- MIATOTALS$E200 * MIATOTALS$Percent200
MIATOTALS$Weight150_200 <- (MIATOTALS$E150_200 * MIATOTALS$Percent150_200)
MIATOTALS$Weight125_150 <- (MIATOTALS$E125_150 * MIATOTALS$Percent125_150) 
MIATOTALS$Weight100_125 <- (MIATOTALS$E100_125 * MIATOTALS$Percent100_125) 
MIATOTALS$Weight75_100 <- (MIATOTALS$E75_100 * MIATOTALS$Percent75_100)
MIATOTALS$Weight60_75 <- (MIATOTALS$E60_75 * MIATOTALS$Percent60_75) 
MIATOTALS$Weight50_60 <- (MIATOTALS$E50_60 * MIATOTALS$Percent50_60) 
MIATOTALS$Weight45_50 <- (MIATOTALS$E45_50 * MIATOTALS$Percent45_50)
MIATOTALS$Weight40_45 <- (MIATOTALS$E40_45 * MIATOTALS$Percent40_45) 
MIATOTALS$Weight35_40 <- (MIATOTALS$E35_40 * MIATOTALS$Percent35_40) 
MIATOTALS$Weight30_35 <- (MIATOTALS$E30_35 * MIATOTALS$Percent30_35)
MIATOTALS$Weight25_30 <- (MIATOTALS$E25_30 * MIATOTALS$Percent25_30) 
MIATOTALS$Weight20_25 <- (MIATOTALS$E20_25 * MIATOTALS$Percent20_25)
MIATOTALS$Weight15_20 <- (MIATOTALS$E15_20 * MIATOTALS$Percent15_20) 
MIATOTALS$Weight10_15 <- (MIATOTALS$E10_15 * MIATOTALS$Percent10_15) 
MIATOTALS$Weight10 <- (MIATOTALS$E10 * MIATOTALS$Percent10) 
MIATOTALS$ReverseWeight10 <- (MIATOTALS$ReverseE10 * MIATOTALS$ReversePercent10)
MIATOTALS$ReverseWeight10_15 <- (MIATOTALS$ReverseE10_15 * MIATOTALS$ReversePercent10_15)
MIATOTALS$ReverseWeight15_20 <- (MIATOTALS$ReverseE15_20 * MIATOTALS$ReversePercent15_20)
MIATOTALS$ReverseWeight20_25 <- (MIATOTALS$ReverseE20_25 * MIATOTALS$ReversePercent20_25)
MIATOTALS$ReverseWeight25_30 <- (MIATOTALS$ReverseE25_30 * MIATOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

DAL$Group200 <- (DAL$B19001_017/DAL$B19001_001)
DAL$Group150_200 <- (DAL$B19001_017 + DAL$B19001_016)/DAL$B19001_001;
DAL$Group125_150 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015)/DAL$B19001_001;
DAL$Group100_125 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014)/DAL$B19001_001;
DAL$Group75_100 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013)/DAL$B19001_001;
DAL$Group60_75 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012)/DAL$B19001_001;
DAL$Group50_60 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011)/DAL$B19001_001;
DAL$Group45_50 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010)/DAL$B19001_001;
DAL$Group40_45 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009)/DAL$B19001_001;
DAL$Group35_40 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008)/DAL$B19001_001;
DAL$Group30_35 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007)/DAL$B19001_001;
DAL$Group25_30 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007 + DAL$B19001_006)/DAL$B19001_001;
DAL$Group20_25 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007 + DAL$B19001_006 + DAL$B19001_005)/DAL$B19001_001;
DAL$Group15_20 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007 + DAL$B19001_006 + DAL$B19001_005 + DAL$B19001_004)/DAL$B19001_001;
DAL$Group10_15 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007 + DAL$B19001_006 + DAL$B19001_005 + DAL$B19001_004 + DAL$B19001_003)/DAL$B19001_001;
DAL$Group10 <- (DAL$B19001_017 + DAL$B19001_016 + DAL$B19001_015 + DAL$B19001_014 + DAL$B19001_013 + DAL$B19001_012 + DAL$B19001_011 + DAL$B19001_010 + DAL$B19001_009 + DAL$B19001_008 + DAL$B19001_007 + DAL$B19001_006 + DAL$B19001_005 + DAL$B19001_004 + DAL$B19001_003 + DAL$B19001_002)/DAL$B19001_001;
DAL$ReverseGroup10 <- (DAL$B19001_002)/DAL$B19001_001;
DAL$ReverseGroup10_15 <- (DAL$B19001_002 + DAL$B19001_003)/DAL$B19001_001;
DAL$ReverseGroup15_20 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004)/DAL$B19001_001;
DAL$ReverseGroup20_25 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005)/DAL$B19001_001;
DAL$ReverseGroup25_30 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006)/DAL$B19001_001;
DAL$ReverseGroup30_35 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007)/DAL$B19001_001;
DAL$ReverseGroup35_40 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007 + DAL$B19001_008)/DAL$B19001_001;
DAL$ReverseGroup40_45 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007 + DAL$B19001_008 + DAL$B19001_009)/DAL$B19001_001;
DAL$ReverseGroup45_50 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007 + DAL$B19001_008 + DAL$B19001_009 + DAL$B19001_010)/DAL$B19001_001;
DAL$ReverseGroup50_60 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007 + DAL$B19001_008 + DAL$B19001_009 + DAL$B19001_010 + DAL$B19001_011)/DAL$B19001_001;
DAL$ReverseGroup60_75 <- (DAL$B19001_002 + DAL$B19001_003 + DAL$B19001_004 + DAL$B19001_005 + DAL$B19001_006 + DAL$B19001_007 + DAL$B19001_008 + DAL$B19001_009 + DAL$B19001_010 + DAL$B19001_011 + DAL$B19001_012)/DAL$B19001_001;

DAL$LocalEnt200 <- DAL$B19001_001 * ((DAL$Group200)*log2(1/(DAL$Group200)) + 
                                       (1-(DAL$Group200))*log2(1/(1-(DAL$Group200))))

DAL$LocalEnt150_200 <- DAL$B19001_001 * ((DAL$Group150_200)*log2(1/(DAL$Group150_200)) + 
                                           (1-(DAL$Group150_200))*log2(1/(1-(DAL$Group150_200))))

DAL$LocalEnt125_150 <- DAL$B19001_001 * ((DAL$Group125_150)*log2(1/(DAL$Group125_150)) + 
                                           (1-(DAL$Group125_150))*log2(1/(1-(DAL$Group125_150))))

DAL$LocalEnt100_125 <- DAL$B19001_001 * ((DAL$Group100_125)*log2(1/(DAL$Group100_125)) + 
                                           (1-(DAL$Group100_125))*log2(1/(1-(DAL$Group100_125))))

DAL$LocalEnt75_100 <- DAL$B19001_001 * ((DAL$Group75_100)*log2(1/(DAL$Group75_100)) + 
                                          (1-(DAL$Group75_100))*log2(1/(1-(DAL$Group75_100))))

DAL$LocalEnt60_75 <- DAL$B19001_001 * ((DAL$Group60_75)*log2(1/(DAL$Group60_75)) + 
                                         (1-(DAL$Group60_75))*log2(1/(1-(DAL$Group60_75))))

DAL$LocalEnt50_60 <- DAL$B19001_001 * ((DAL$Group50_60)*log2(1/(DAL$Group50_60)) + 
                                         (1-(DAL$Group50_60))*log2(1/(1-(DAL$Group50_60))))

DAL$LocalEnt45_50 <- DAL$B19001_001 * ((DAL$Group45_50)*log2(1/(DAL$Group45_50)) + 
                                         (1-(DAL$Group45_50))*log2(1/(1-(DAL$Group45_50))))

DAL$LocalEnt40_45 <- DAL$B19001_001 * ((DAL$Group40_45)*log2(1/(DAL$Group40_45)) + 
                                         (1-(DAL$Group40_45))*log2(1/(1-(DAL$Group40_45))))

DAL$LocalEnt35_40 <- DAL$B19001_001 * ((DAL$Group35_40)*log2(1/(DAL$Group35_40)) + 
                                         (1-(DAL$Group35_40))*log2(1/(1-(DAL$Group35_40))))

DAL$LocalEnt30_35 <- DAL$B19001_001 * ((DAL$Group30_35)*log2(1/(DAL$Group30_35)) + 
                                         (1-(DAL$Group30_35))*log2(1/(1-(DAL$Group30_35))))

DAL$LocalEnt25_30 <- DAL$B19001_001 * ((DAL$Group25_30)*log2(1/(DAL$Group25_30)) + 
                                         (1-(DAL$Group25_30))*log2(1/(1-(DAL$Group25_30))))

DAL$LocalEnt20_25 <- DAL$B19001_001 * ((DAL$Group20_25)*log2(1/(DAL$Group20_25)) + 
                                         (1-(DAL$Group20_25))*log2(1/(1-(DAL$Group20_25))))

DAL$LocalEnt15_20 <- DAL$B19001_001 * ((DAL$Group15_20)*log2(1/(DAL$Group15_20)) + 
                                         (1-(DAL$Group15_20))*log2(1/(1-(DAL$Group15_20))))

DAL$LocalEnt10_15 <- DAL$B19001_001 * ((DAL$Group10_15)*log2(1/(DAL$Group10_15)) + 
                                         (1-(DAL$Group10_15))*log2(1/(1-(DAL$Group10_15))))

DAL$LocalEnt10 <- DAL$B19001_001 * ((DAL$Group10)*log2(1/(DAL$Group10)) + 
                                      (1-(DAL$Group10))*log2(1/(1-(DAL$Group10))))

DAL$ReverseLocalEnt10 <- DAL$B19001_001 * ((DAL$ReverseGroup10)*log2(1/(DAL$ReverseGroup10)) + 
                                             (1-(DAL$ReverseGroup10))*log2(1/(1-(DAL$ReverseGroup10))))

DAL$ReverseLocalEnt10_15 <- DAL$B19001_001 * ((DAL$ReverseGroup10_15)*log2(1/(DAL$ReverseGroup10_15)) + 
                                                (1-(DAL$ReverseGroup10_15))*log2(1/(1-(DAL$ReverseGroup10_15))))

DAL$ReverseLocalEnt15_20 <- DAL$B19001_001 * ((DAL$ReverseGroup15_20)*log2(1/(DAL$ReverseGroup15_20)) + 
                                                (1-(DAL$ReverseGroup15_20))*log2(1/(1-(DAL$ReverseGroup15_20))))

DAL$ReverseLocalEnt20_25 <- DAL$B19001_001 * ((DAL$ReverseGroup20_25)*log2(1/(DAL$ReverseGroup20_25)) + 
                                                (1-(DAL$ReverseGroup20_25))*log2(1/(1-(DAL$ReverseGroup20_25))))

DAL$ReverseLocalEnt25_30 <- DAL$B19001_001 * ((DAL$ReverseGroup25_30)*log2(1/(DAL$ReverseGroup25_30)) + 
                                                (1-(DAL$ReverseGroup25_30))*log2(1/(1-(DAL$ReverseGroup25_30))))

DAL$ReverseLocalEnt30_35 <- DAL$B19001_001 * ((DAL$ReverseGroup30_35)*log2(1/(DAL$ReverseGroup30_35)) + 
                                                (1-(DAL$ReverseGroup30_35))*log2(1/(1-(DAL$ReverseGroup30_35))))


#HA stuff Total


DALTOTALS <- DAL %>%
  summarise(MSAB19001_001 = sum(DAL$B19001_001), MSAB19001_002 = sum(DAL$B19001_002), MSAB19001_003 = sum(DAL$B19001_003), MSAB19001_004 = sum(DAL$B19001_004),
            MSAB19001_005 = sum(DAL$B19001_005), MSAB19001_006 = sum(DAL$B19001_006), MSAB19001_007 = sum(DAL$B19001_007),
            MSAB19001_008 = sum(DAL$B19001_008), MSAB19001_009 = sum(DAL$B19001_009), MSAB19001_010 = sum(DAL$B19001_010),
            MSAB19001_011 = sum(DAL$B19001_011), MSAB19001_012 = sum(DAL$B19001_012), MSAB19001_013 = sum(DAL$B19001_013),
            MSAB19001_014 = sum(DAL$B19001_014), MSAB19001_015 = sum(DAL$B19001_015), MSAB19001_016 = sum(DAL$B19001_016),
            MSAB19001_017 = sum(DAL$B19001_017))


DALTOTALS$MSAGroup200 <- (DALTOTALS$MSAB19001_017/DALTOTALS$MSAB19001_001)
DALTOTALS$MSAGroup150_200 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup125_150 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup100_125 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup75_100 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup60_75 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup50_60 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup45_50 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup40_45 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup35_40 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup30_35 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup25_30 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_006)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup20_25 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_005)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup15_20 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_004)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup10_15 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_003)/DALTOTALS$MSAB19001_001;
DALTOTALS$MSAGroup10 <- (DALTOTALS$MSAB19001_017 + DALTOTALS$MSAB19001_016 + DALTOTALS$MSAB19001_015 + DALTOTALS$MSAB19001_014 + DALTOTALS$MSAB19001_013 + DALTOTALS$MSAB19001_012 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_002)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup10 <- (DALTOTALS$MSAB19001_002)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup10_15 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup15_20 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup20_25 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup25_30 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup30_35 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup35_40 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_008)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup40_45 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_009)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup45_50 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_010)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup50_60 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_011)/DALTOTALS$MSAB19001_001;
DALTOTALS$ReverseMSAGroup60_75 <- (DALTOTALS$MSAB19001_002 + DALTOTALS$MSAB19001_003 + DALTOTALS$MSAB19001_004 + DALTOTALS$MSAB19001_005 + DALTOTALS$MSAB19001_006 + DALTOTALS$MSAB19001_007 + DALTOTALS$MSAB19001_008 + DALTOTALS$MSAB19001_009 + DALTOTALS$MSAB19001_010 + DALTOTALS$MSAB19001_011 + DALTOTALS$MSAB19001_012)/DALTOTALS$MSAB19001_001;

DALTOTALS$TotalEnt200 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup200)*log2(1/(DALTOTALS$MSAGroup200)) + 
                                                      (1-(DALTOTALS$MSAGroup200))*log2(1/(1-(DALTOTALS$MSAGroup200))))

DALTOTALS$TotalEnt150_200 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup150_200)*log2(1/(DALTOTALS$MSAGroup150_200)) + 
                                                          (1-(DALTOTALS$MSAGroup150_200))*log2(1/(1-(DALTOTALS$MSAGroup150_200))))

DALTOTALS$TotalEnt125_150 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup125_150)*log2(1/(DALTOTALS$MSAGroup125_150)) + 
                                                          (1-(DALTOTALS$MSAGroup125_150))*log2(1/(1-(DALTOTALS$MSAGroup125_150))))

DALTOTALS$TotalEnt100_125 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup100_125)*log2(1/(DALTOTALS$MSAGroup100_125)) + 
                                                          (1-(DALTOTALS$MSAGroup100_125))*log2(1/(1-(DALTOTALS$MSAGroup100_125))))

DALTOTALS$TotalEnt75_100 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup75_100)*log2(1/(DALTOTALS$MSAGroup75_100)) + 
                                                         (1-(DALTOTALS$MSAGroup75_100))*log2(1/(1-(DALTOTALS$MSAGroup75_100))))

DALTOTALS$TotalEnt60_75 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup60_75)*log2(1/(DALTOTALS$MSAGroup60_75)) + 
                                                        (1-(DALTOTALS$MSAGroup60_75))*log2(1/(1-(DALTOTALS$MSAGroup60_75))))

DALTOTALS$TotalEnt50_60 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup50_60)*log2(1/(DALTOTALS$MSAGroup50_60)) + 
                                                        (1-(DALTOTALS$MSAGroup50_60))*log2(1/(1-(DALTOTALS$MSAGroup50_60))))

DALTOTALS$TotalEnt45_50 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup45_50)*log2(1/(DALTOTALS$MSAGroup45_50)) + 
                                                        (1-(DALTOTALS$MSAGroup45_50))*log2(1/(1-(DALTOTALS$MSAGroup45_50))))

DALTOTALS$TotalEnt40_45 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup40_45)*log2(1/(DALTOTALS$MSAGroup40_45)) + 
                                                        (1-(DALTOTALS$MSAGroup40_45))*log2(1/(1-(DALTOTALS$MSAGroup40_45))))

DALTOTALS$TotalEnt35_40 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup35_40)*log2(1/(DALTOTALS$MSAGroup35_40)) + 
                                                        (1-(DALTOTALS$MSAGroup35_40))*log2(1/(1-(DALTOTALS$MSAGroup35_40))))

DALTOTALS$TotalEnt30_35 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup30_35)*log2(1/(DALTOTALS$MSAGroup30_35)) + 
                                                        (1-(DALTOTALS$MSAGroup30_35))*log2(1/(1-(DALTOTALS$MSAGroup30_35))))

DALTOTALS$TotalEnt25_30 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup25_30)*log2(1/(DALTOTALS$MSAGroup25_30)) + 
                                                        (1-(DALTOTALS$MSAGroup25_30))*log2(1/(1-(DALTOTALS$MSAGroup25_30))))

DALTOTALS$TotalEnt20_25 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup20_25)*log2(1/(DALTOTALS$MSAGroup20_25)) + 
                                                        (1-(DALTOTALS$MSAGroup20_25))*log2(1/(1-(DALTOTALS$MSAGroup20_25))))

DALTOTALS$TotalEnt15_20 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup15_20)*log2(1/(DALTOTALS$MSAGroup15_20)) + 
                                                        (1-(DALTOTALS$MSAGroup15_20))*log2(1/(1-(DALTOTALS$MSAGroup15_20))))

DALTOTALS$TotalEnt10_15 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup10_15)*log2(1/(DALTOTALS$MSAGroup10_15)) + 
                                                        (1-(DALTOTALS$MSAGroup10_15))*log2(1/(1-(DALTOTALS$MSAGroup10_15))))

DALTOTALS$TotalEnt10 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$MSAGroup10)*log2(1/(DALTOTALS$MSAGroup10)) + 
                                                     (1-(DALTOTALS$MSAGroup10))*log2(1/(1-(DALTOTALS$MSAGroup10))))

DALTOTALS$ReverseTotalEnt10 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup10)*log2(1/(DALTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(DALTOTALS$ReverseMSAGroup10))*log2(1/(1-(DALTOTALS$ReverseMSAGroup10))))

DALTOTALS$ReverseTotalEnt10_15 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup10_15)*log2(1/(DALTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(DALTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DALTOTALS$ReverseMSAGroup10_15))))

DALTOTALS$ReverseTotalEnt15_20 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup15_20)*log2(1/(DALTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(DALTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DALTOTALS$ReverseMSAGroup15_20))))

DALTOTALS$ReverseTotalEnt20_25 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup20_25)*log2(1/(DALTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(DALTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DALTOTALS$ReverseMSAGroup20_25))))

DALTOTALS$ReverseTotalEnt25_30 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup25_30)*log2(1/(DALTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(DALTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DALTOTALS$ReverseMSAGroup25_30))))

DALTOTALS$ReverseTotalEnt30_35 <- DALTOTALS$MSAB19001_001 * ((DALTOTALS$ReverseMSAGroup30_35)*log2(1/(DALTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(DALTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DALTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
DALTOTALS$E200 <- ((DALTOTALS$MSAGroup200)*log2(1/(DALTOTALS$MSAGroup200)) + (1-(DALTOTALS$MSAGroup200))*log2(1/(1-(DALTOTALS$MSAGroup200))))
DALTOTALS$E150_200 <- ((DALTOTALS$MSAGroup150_200)*log2(1/(DALTOTALS$MSAGroup150_200)) + (1-(DALTOTALS$MSAGroup150_200))*log2(1/(1-(DALTOTALS$MSAGroup150_200))))
DALTOTALS$E125_150 <- ((DALTOTALS$MSAGroup125_150)*log2(1/(DALTOTALS$MSAGroup125_150)) + (1-(DALTOTALS$MSAGroup125_150))*log2(1/(1-(DALTOTALS$MSAGroup125_150))))
DALTOTALS$E100_125 <- ((DALTOTALS$MSAGroup100_125)*log2(1/(DALTOTALS$MSAGroup100_125)) + (1-(DALTOTALS$MSAGroup100_125))*log2(1/(1-(DALTOTALS$MSAGroup100_125))))
DALTOTALS$E75_100 <- ((DALTOTALS$MSAGroup75_100)*log2(1/(DALTOTALS$MSAGroup75_100)) + (1-(DALTOTALS$MSAGroup75_100))*log2(1/(1-(DALTOTALS$MSAGroup75_100))))
DALTOTALS$E60_75 <- ((DALTOTALS$MSAGroup60_75)*log2(1/(DALTOTALS$MSAGroup60_75)) + (1-(DALTOTALS$MSAGroup60_75))*log2(1/(1-(DALTOTALS$MSAGroup60_75))))
DALTOTALS$E50_60 <- ((DALTOTALS$MSAGroup50_60)*log2(1/(DALTOTALS$MSAGroup50_60)) + (1-(DALTOTALS$MSAGroup50_60))*log2(1/(1-(DALTOTALS$MSAGroup50_60))))
DALTOTALS$E50_60 <- ((DALTOTALS$MSAGroup50_60)*log2(1/(DALTOTALS$MSAGroup50_60)) + (1-(DALTOTALS$MSAGroup50_60))*log2(1/(1-(DALTOTALS$MSAGroup50_60))))
DALTOTALS$E45_50 <- ((DALTOTALS$MSAGroup45_50)*log2(1/(DALTOTALS$MSAGroup45_50)) + (1-(DALTOTALS$MSAGroup45_50))*log2(1/(1-(DALTOTALS$MSAGroup45_50))))
DALTOTALS$E40_45 <- ((DALTOTALS$MSAGroup40_45)*log2(1/(DALTOTALS$MSAGroup40_45)) + (1-(DALTOTALS$MSAGroup40_45))*log2(1/(1-(DALTOTALS$MSAGroup40_45))))
DALTOTALS$E35_40 <- ((DALTOTALS$MSAGroup35_40)*log2(1/(DALTOTALS$MSAGroup35_40)) + (1-(DALTOTALS$MSAGroup35_40))*log2(1/(1-(DALTOTALS$MSAGroup35_40))))
DALTOTALS$E30_35 <- ((DALTOTALS$MSAGroup30_35)*log2(1/(DALTOTALS$MSAGroup30_35)) + (1-(DALTOTALS$MSAGroup30_35))*log2(1/(1-(DALTOTALS$MSAGroup30_35))))
DALTOTALS$E25_30 <- ((DALTOTALS$MSAGroup25_30)*log2(1/(DALTOTALS$MSAGroup25_30)) + (1-(DALTOTALS$MSAGroup25_30))*log2(1/(1-(DALTOTALS$MSAGroup25_30))))
DALTOTALS$E20_25 <- ((DALTOTALS$MSAGroup20_25)*log2(1/(DALTOTALS$MSAGroup20_25)) + (1-(DALTOTALS$MSAGroup20_25))*log2(1/(1-(DALTOTALS$MSAGroup20_25))))
DALTOTALS$E15_20 <- ((DALTOTALS$MSAGroup15_20)*log2(1/(DALTOTALS$MSAGroup15_20)) + (1-(DALTOTALS$MSAGroup15_20))*log2(1/(1-(DALTOTALS$MSAGroup15_20))))
DALTOTALS$E10_15 <- ((DALTOTALS$MSAGroup10_15)*log2(1/(DALTOTALS$MSAGroup10_15)) + (1-(DALTOTALS$MSAGroup10_15))*log2(1/(1-(DALTOTALS$MSAGroup10_15))))
DALTOTALS$E10 <- ((DALTOTALS$MSAGroup10)*log2(1/(DALTOTALS$MSAGroup10)) + (1-(DALTOTALS$MSAGroup10))*log2(1/(1-(DALTOTALS$MSAGroup10))))
DALTOTALS$ReverseE10 <- ((DALTOTALS$ReverseMSAGroup10)*log2(1/(DALTOTALS$ReverseMSAGroup10)) + (1-(DALTOTALS$ReverseMSAGroup10))*log2(1/(1-(DALTOTALS$ReverseMSAGroup10))))
DALTOTALS$ReverseE10_15 <- ((DALTOTALS$ReverseMSAGroup10_15)*log2(1/(DALTOTALS$ReverseMSAGroup10_15)) + (1-(DALTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DALTOTALS$ReverseMSAGroup10_15))))
DALTOTALS$ReverseE15_20 <- ((DALTOTALS$ReverseMSAGroup15_20)*log2(1/(DALTOTALS$ReverseMSAGroup15_20)) + (1-(DALTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DALTOTALS$ReverseMSAGroup15_20))))
DALTOTALS$ReverseE20_25 <- ((DALTOTALS$ReverseMSAGroup20_25)*log2(1/(DALTOTALS$ReverseMSAGroup20_25)) + (1-(DALTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DALTOTALS$ReverseMSAGroup20_25))))
DALTOTALS$ReverseE25_30 <- ((DALTOTALS$ReverseMSAGroup25_30)*log2(1/(DALTOTALS$ReverseMSAGroup25_30)) + (1-(DALTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DALTOTALS$ReverseMSAGroup25_30))))
DALTOTALS$ReverseE30_35 <- ((DALTOTALS$ReverseMSAGroup30_35)*log2(1/(DALTOTALS$ReverseMSAGroup30_35)) + (1-(DALTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DALTOTALS$ReverseMSAGroup30_35))))
DALTOTALS$ReverseE35_40 <- ((DALTOTALS$ReverseMSAGroup35_40)*log2(1/(DALTOTALS$ReverseMSAGroup35_40)) + (1-(DALTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(DALTOTALS$ReverseMSAGroup35_40))))


DAL$Section200 <- DAL$LocalEnt200 / DALTOTALS$TotalEnt200
DAL$Section150_200 <- DAL$LocalEnt150_200 / DALTOTALS$TotalEnt150_200
DAL$Section125_150 <- DAL$LocalEnt125_150 / DALTOTALS$TotalEnt125_150
DAL$Section100_125 <- DAL$LocalEnt100_125 / DALTOTALS$TotalEnt100_125
DAL$Section75_100 <- DAL$LocalEnt75_100 / DALTOTALS$TotalEnt75_100
DAL$Section60_75 <- DAL$LocalEnt60_75 / DALTOTALS$TotalEnt60_75
DAL$Section50_60 <- DAL$LocalEnt50_60 / DALTOTALS$TotalEnt50_60
DAL$Section45_50 <- DAL$LocalEnt45_50 / DALTOTALS$TotalEnt45_50
DAL$Section40_45 <- DAL$LocalEnt40_45 / DALTOTALS$TotalEnt40_45
DAL$Section35_40 <- DAL$LocalEnt35_40 / DALTOTALS$TotalEnt35_40
DAL$Section30_35 <- DAL$LocalEnt30_35 / DALTOTALS$TotalEnt30_35
DAL$Section25_30 <- DAL$LocalEnt25_30 / DALTOTALS$TotalEnt25_30
DAL$Section20_25 <- DAL$LocalEnt20_25 / DALTOTALS$TotalEnt20_25
DAL$Section15_20 <- DAL$LocalEnt15_20 / DALTOTALS$TotalEnt15_20
DAL$Section10_15 <- DAL$LocalEnt10_15 / DALTOTALS$TotalEnt10_15
DAL$Section10 <- DAL$LocalEnt10 / DALTOTALS$TotalEnt10
DAL$ReverseSection10 <- DAL$ReverseLocalEnt10 / DALTOTALS$ReverseTotalEnt10
DAL$ReverseSection10_15 <- DAL$ReverseLocalEnt10_15 / DALTOTALS$ReverseTotalEnt10_15
DAL$ReverseSection15_20 <- DAL$ReverseLocalEnt15_20 / DALTOTALS$ReverseTotalEnt15_20
DAL$ReverseSection20_25 <- DAL$ReverseLocalEnt20_25 / DALTOTALS$ReverseTotalEnt20_25
DAL$ReverseSection25_30 <- DAL$ReverseLocalEnt25_30 / DALTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
DAL[is.na(DAL)] <- 0

DALTOTALS$Percent200 <- 1 - sum(DAL$Section200)
DALTOTALS$Percent150_200 <- 1 - sum(DAL$Section150_200)
DALTOTALS$Percent125_150 <- 1 - sum(DAL$Section125_150)
DALTOTALS$Percent100_125 <- 1 - sum(DAL$Section100_125)
DALTOTALS$Percent75_100 <- 1 - sum(DAL$Section75_100)
DALTOTALS$Percent60_75 <- 1 - sum(DAL$Section60_75)
DALTOTALS$Percent50_60 <- 1 - sum(DAL$Section50_60)
DALTOTALS$Percent45_50 <- 1 - sum(DAL$Section45_50)
DALTOTALS$Percent40_45 <- 1 - sum(DAL$Section40_45)
DALTOTALS$Percent35_40 <- 1 - sum(DAL$Section35_40)
DALTOTALS$Percent30_35 <- 1 - sum(DAL$Section30_35)
DALTOTALS$Percent25_30 <- 1 - sum(DAL$Section25_30)
DALTOTALS$Percent20_25 <- 1 - sum(DAL$Section20_25)
DALTOTALS$Percent15_20 <- 1 - sum(DAL$Section15_20)
DALTOTALS$Percent10_15 <- 1 - sum(DAL$Section10_15)
DALTOTALS$Percent10 <- 1 - sum(DAL$Section10)
DALTOTALS$ReversePercent10 <- 1 - sum(DAL$ReverseSection10)
DALTOTALS$ReversePercent10_15 <- 1 - sum(DAL$ReverseSection10_15)
DALTOTALS$ReversePercent15_20 <- 1 - sum(DAL$ReverseSection15_20)
DALTOTALS$ReversePercent20_25 <- 1 - sum(DAL$ReverseSection20_25)
DALTOTALS$ReversePercent25_30 <- 1 - sum(DAL$ReverseSection25_30)


DALTOTALS$Weight200 <- DALTOTALS$E200 * DALTOTALS$Percent200
DALTOTALS$Weight150_200 <- (DALTOTALS$E150_200 * DALTOTALS$Percent150_200)
DALTOTALS$Weight125_150 <- (DALTOTALS$E125_150 * DALTOTALS$Percent125_150) 
DALTOTALS$Weight100_125 <- (DALTOTALS$E100_125 * DALTOTALS$Percent100_125) 
DALTOTALS$Weight75_100 <- (DALTOTALS$E75_100 * DALTOTALS$Percent75_100)
DALTOTALS$Weight60_75 <- (DALTOTALS$E60_75 * DALTOTALS$Percent60_75) 
DALTOTALS$Weight50_60 <- (DALTOTALS$E50_60 * DALTOTALS$Percent50_60) 
DALTOTALS$Weight45_50 <- (DALTOTALS$E45_50 * DALTOTALS$Percent45_50)
DALTOTALS$Weight40_45 <- (DALTOTALS$E40_45 * DALTOTALS$Percent40_45) 
DALTOTALS$Weight35_40 <- (DALTOTALS$E35_40 * DALTOTALS$Percent35_40) 
DALTOTALS$Weight30_35 <- (DALTOTALS$E30_35 * DALTOTALS$Percent30_35)
DALTOTALS$Weight25_30 <- (DALTOTALS$E25_30 * DALTOTALS$Percent25_30) 
DALTOTALS$Weight20_25 <- (DALTOTALS$E20_25 * DALTOTALS$Percent20_25)
DALTOTALS$Weight15_20 <- (DALTOTALS$E15_20 * DALTOTALS$Percent15_20) 
DALTOTALS$Weight10_15 <- (DALTOTALS$E10_15 * DALTOTALS$Percent10_15) 
DALTOTALS$Weight10 <- (DALTOTALS$E10 * DALTOTALS$Percent10) 
DALTOTALS$ReverseWeight10 <- (DALTOTALS$ReverseE10 * DALTOTALS$ReversePercent10)
DALTOTALS$ReverseWeight10_15 <- (DALTOTALS$ReverseE10_15 * DALTOTALS$ReversePercent10_15)
DALTOTALS$ReverseWeight15_20 <- (DALTOTALS$ReverseE15_20 * DALTOTALS$ReversePercent15_20)
DALTOTALS$ReverseWeight20_25 <- (DALTOTALS$ReverseE20_25 * DALTOTALS$ReversePercent20_25)
DALTOTALS$ReverseWeight25_30 <- (DALTOTALS$ReverseE25_30 * DALTOTALS$ReversePercent25_30)



#trying to recreate the HA stuff I did thru SAS and R
#local

HOU$Group200 <- (HOU$B19001_017/HOU$B19001_001)
HOU$Group150_200 <- (HOU$B19001_017 + HOU$B19001_016)/HOU$B19001_001;
HOU$Group125_150 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015)/HOU$B19001_001;
HOU$Group100_125 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014)/HOU$B19001_001;
HOU$Group75_100 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013)/HOU$B19001_001;
HOU$Group60_75 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012)/HOU$B19001_001;
HOU$Group50_60 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011)/HOU$B19001_001;
HOU$Group45_50 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010)/HOU$B19001_001;
HOU$Group40_45 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009)/HOU$B19001_001;
HOU$Group35_40 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008)/HOU$B19001_001;
HOU$Group30_35 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007)/HOU$B19001_001;
HOU$Group25_30 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007 + HOU$B19001_006)/HOU$B19001_001;
HOU$Group20_25 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007 + HOU$B19001_006 + HOU$B19001_005)/HOU$B19001_001;
HOU$Group15_20 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007 + HOU$B19001_006 + HOU$B19001_005 + HOU$B19001_004)/HOU$B19001_001;
HOU$Group10_15 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007 + HOU$B19001_006 + HOU$B19001_005 + HOU$B19001_004 + HOU$B19001_003)/HOU$B19001_001;
HOU$Group10 <- (HOU$B19001_017 + HOU$B19001_016 + HOU$B19001_015 + HOU$B19001_014 + HOU$B19001_013 + HOU$B19001_012 + HOU$B19001_011 + HOU$B19001_010 + HOU$B19001_009 + HOU$B19001_008 + HOU$B19001_007 + HOU$B19001_006 + HOU$B19001_005 + HOU$B19001_004 + HOU$B19001_003 + HOU$B19001_002)/HOU$B19001_001;
HOU$ReverseGroup10 <- (HOU$B19001_002)/HOU$B19001_001;
HOU$ReverseGroup10_15 <- (HOU$B19001_002 + HOU$B19001_003)/HOU$B19001_001;
HOU$ReverseGroup15_20 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004)/HOU$B19001_001;
HOU$ReverseGroup20_25 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005)/HOU$B19001_001;
HOU$ReverseGroup25_30 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006)/HOU$B19001_001;
HOU$ReverseGroup30_35 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007)/HOU$B19001_001;
HOU$ReverseGroup35_40 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007 + HOU$B19001_008)/HOU$B19001_001;
HOU$ReverseGroup40_45 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007 + HOU$B19001_008 + HOU$B19001_009)/HOU$B19001_001;
HOU$ReverseGroup45_50 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007 + HOU$B19001_008 + HOU$B19001_009 + HOU$B19001_010)/HOU$B19001_001;
HOU$ReverseGroup50_60 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007 + HOU$B19001_008 + HOU$B19001_009 + HOU$B19001_010 + HOU$B19001_011)/HOU$B19001_001;
HOU$ReverseGroup60_75 <- (HOU$B19001_002 + HOU$B19001_003 + HOU$B19001_004 + HOU$B19001_005 + HOU$B19001_006 + HOU$B19001_007 + HOU$B19001_008 + HOU$B19001_009 + HOU$B19001_010 + HOU$B19001_011 + HOU$B19001_012)/HOU$B19001_001;

HOU$LocalEnt200 <- HOU$B19001_001 * ((HOU$Group200)*log2(1/(HOU$Group200)) + 
                                       (1-(HOU$Group200))*log2(1/(1-(HOU$Group200))))

HOU$LocalEnt150_200 <- HOU$B19001_001 * ((HOU$Group150_200)*log2(1/(HOU$Group150_200)) + 
                                           (1-(HOU$Group150_200))*log2(1/(1-(HOU$Group150_200))))

HOU$LocalEnt125_150 <- HOU$B19001_001 * ((HOU$Group125_150)*log2(1/(HOU$Group125_150)) + 
                                           (1-(HOU$Group125_150))*log2(1/(1-(HOU$Group125_150))))

HOU$LocalEnt100_125 <- HOU$B19001_001 * ((HOU$Group100_125)*log2(1/(HOU$Group100_125)) + 
                                           (1-(HOU$Group100_125))*log2(1/(1-(HOU$Group100_125))))

HOU$LocalEnt75_100 <- HOU$B19001_001 * ((HOU$Group75_100)*log2(1/(HOU$Group75_100)) + 
                                          (1-(HOU$Group75_100))*log2(1/(1-(HOU$Group75_100))))

HOU$LocalEnt60_75 <- HOU$B19001_001 * ((HOU$Group60_75)*log2(1/(HOU$Group60_75)) + 
                                         (1-(HOU$Group60_75))*log2(1/(1-(HOU$Group60_75))))

HOU$LocalEnt50_60 <- HOU$B19001_001 * ((HOU$Group50_60)*log2(1/(HOU$Group50_60)) + 
                                         (1-(HOU$Group50_60))*log2(1/(1-(HOU$Group50_60))))

HOU$LocalEnt45_50 <- HOU$B19001_001 * ((HOU$Group45_50)*log2(1/(HOU$Group45_50)) + 
                                         (1-(HOU$Group45_50))*log2(1/(1-(HOU$Group45_50))))

HOU$LocalEnt40_45 <- HOU$B19001_001 * ((HOU$Group40_45)*log2(1/(HOU$Group40_45)) + 
                                         (1-(HOU$Group40_45))*log2(1/(1-(HOU$Group40_45))))

HOU$LocalEnt35_40 <- HOU$B19001_001 * ((HOU$Group35_40)*log2(1/(HOU$Group35_40)) + 
                                         (1-(HOU$Group35_40))*log2(1/(1-(HOU$Group35_40))))

HOU$LocalEnt30_35 <- HOU$B19001_001 * ((HOU$Group30_35)*log2(1/(HOU$Group30_35)) + 
                                         (1-(HOU$Group30_35))*log2(1/(1-(HOU$Group30_35))))

HOU$LocalEnt25_30 <- HOU$B19001_001 * ((HOU$Group25_30)*log2(1/(HOU$Group25_30)) + 
                                         (1-(HOU$Group25_30))*log2(1/(1-(HOU$Group25_30))))

HOU$LocalEnt20_25 <- HOU$B19001_001 * ((HOU$Group20_25)*log2(1/(HOU$Group20_25)) + 
                                         (1-(HOU$Group20_25))*log2(1/(1-(HOU$Group20_25))))

HOU$LocalEnt15_20 <- HOU$B19001_001 * ((HOU$Group15_20)*log2(1/(HOU$Group15_20)) + 
                                         (1-(HOU$Group15_20))*log2(1/(1-(HOU$Group15_20))))

HOU$LocalEnt10_15 <- HOU$B19001_001 * ((HOU$Group10_15)*log2(1/(HOU$Group10_15)) + 
                                         (1-(HOU$Group10_15))*log2(1/(1-(HOU$Group10_15))))

HOU$LocalEnt10 <- HOU$B19001_001 * ((HOU$Group10)*log2(1/(HOU$Group10)) + 
                                      (1-(HOU$Group10))*log2(1/(1-(HOU$Group10))))

HOU$ReverseLocalEnt10 <- HOU$B19001_001 * ((HOU$ReverseGroup10)*log2(1/(HOU$ReverseGroup10)) + 
                                             (1-(HOU$ReverseGroup10))*log2(1/(1-(HOU$ReverseGroup10))))

HOU$ReverseLocalEnt10_15 <- HOU$B19001_001 * ((HOU$ReverseGroup10_15)*log2(1/(HOU$ReverseGroup10_15)) + 
                                                (1-(HOU$ReverseGroup10_15))*log2(1/(1-(HOU$ReverseGroup10_15))))

HOU$ReverseLocalEnt15_20 <- HOU$B19001_001 * ((HOU$ReverseGroup15_20)*log2(1/(HOU$ReverseGroup15_20)) + 
                                                (1-(HOU$ReverseGroup15_20))*log2(1/(1-(HOU$ReverseGroup15_20))))

HOU$ReverseLocalEnt20_25 <- HOU$B19001_001 * ((HOU$ReverseGroup20_25)*log2(1/(HOU$ReverseGroup20_25)) + 
                                                (1-(HOU$ReverseGroup20_25))*log2(1/(1-(HOU$ReverseGroup20_25))))

HOU$ReverseLocalEnt25_30 <- HOU$B19001_001 * ((HOU$ReverseGroup25_30)*log2(1/(HOU$ReverseGroup25_30)) + 
                                                (1-(HOU$ReverseGroup25_30))*log2(1/(1-(HOU$ReverseGroup25_30))))

HOU$ReverseLocalEnt30_35 <- HOU$B19001_001 * ((HOU$ReverseGroup30_35)*log2(1/(HOU$ReverseGroup30_35)) + 
                                                (1-(HOU$ReverseGroup30_35))*log2(1/(1-(HOU$ReverseGroup30_35))))


#HA stuff Total


HOUTOTALS <- HOU %>%
  summarise(MSAB19001_001 = sum(HOU$B19001_001), MSAB19001_002 = sum(HOU$B19001_002), MSAB19001_003 = sum(HOU$B19001_003), MSAB19001_004 = sum(HOU$B19001_004),
            MSAB19001_005 = sum(HOU$B19001_005), MSAB19001_006 = sum(HOU$B19001_006), MSAB19001_007 = sum(HOU$B19001_007),
            MSAB19001_008 = sum(HOU$B19001_008), MSAB19001_009 = sum(HOU$B19001_009), MSAB19001_010 = sum(HOU$B19001_010),
            MSAB19001_011 = sum(HOU$B19001_011), MSAB19001_012 = sum(HOU$B19001_012), MSAB19001_013 = sum(HOU$B19001_013),
            MSAB19001_014 = sum(HOU$B19001_014), MSAB19001_015 = sum(HOU$B19001_015), MSAB19001_016 = sum(HOU$B19001_016),
            MSAB19001_017 = sum(HOU$B19001_017))


HOUTOTALS$MSAGroup200 <- (HOUTOTALS$MSAB19001_017/HOUTOTALS$MSAB19001_001)
HOUTOTALS$MSAGroup150_200 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup125_150 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup100_125 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup75_100 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup60_75 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup50_60 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup45_50 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup40_45 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup35_40 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup30_35 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup25_30 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_006)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup20_25 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_005)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup15_20 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_004)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup10_15 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_003)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$MSAGroup10 <- (HOUTOTALS$MSAB19001_017 + HOUTOTALS$MSAB19001_016 + HOUTOTALS$MSAB19001_015 + HOUTOTALS$MSAB19001_014 + HOUTOTALS$MSAB19001_013 + HOUTOTALS$MSAB19001_012 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_002)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup10 <- (HOUTOTALS$MSAB19001_002)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup10_15 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup15_20 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup20_25 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup25_30 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup30_35 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup35_40 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_008)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup40_45 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_009)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup45_50 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_010)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup50_60 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_011)/HOUTOTALS$MSAB19001_001;
HOUTOTALS$ReverseMSAGroup60_75 <- (HOUTOTALS$MSAB19001_002 + HOUTOTALS$MSAB19001_003 + HOUTOTALS$MSAB19001_004 + HOUTOTALS$MSAB19001_005 + HOUTOTALS$MSAB19001_006 + HOUTOTALS$MSAB19001_007 + HOUTOTALS$MSAB19001_008 + HOUTOTALS$MSAB19001_009 + HOUTOTALS$MSAB19001_010 + HOUTOTALS$MSAB19001_011 + HOUTOTALS$MSAB19001_012)/HOUTOTALS$MSAB19001_001;

HOUTOTALS$TotalEnt200 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup200)*log2(1/(HOUTOTALS$MSAGroup200)) + 
                                                      (1-(HOUTOTALS$MSAGroup200))*log2(1/(1-(HOUTOTALS$MSAGroup200))))

HOUTOTALS$TotalEnt150_200 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup150_200)*log2(1/(HOUTOTALS$MSAGroup150_200)) + 
                                                          (1-(HOUTOTALS$MSAGroup150_200))*log2(1/(1-(HOUTOTALS$MSAGroup150_200))))

HOUTOTALS$TotalEnt125_150 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup125_150)*log2(1/(HOUTOTALS$MSAGroup125_150)) + 
                                                          (1-(HOUTOTALS$MSAGroup125_150))*log2(1/(1-(HOUTOTALS$MSAGroup125_150))))

HOUTOTALS$TotalEnt100_125 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup100_125)*log2(1/(HOUTOTALS$MSAGroup100_125)) + 
                                                          (1-(HOUTOTALS$MSAGroup100_125))*log2(1/(1-(HOUTOTALS$MSAGroup100_125))))

HOUTOTALS$TotalEnt75_100 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup75_100)*log2(1/(HOUTOTALS$MSAGroup75_100)) + 
                                                         (1-(HOUTOTALS$MSAGroup75_100))*log2(1/(1-(HOUTOTALS$MSAGroup75_100))))

HOUTOTALS$TotalEnt60_75 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup60_75)*log2(1/(HOUTOTALS$MSAGroup60_75)) + 
                                                        (1-(HOUTOTALS$MSAGroup60_75))*log2(1/(1-(HOUTOTALS$MSAGroup60_75))))

HOUTOTALS$TotalEnt50_60 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup50_60)*log2(1/(HOUTOTALS$MSAGroup50_60)) + 
                                                        (1-(HOUTOTALS$MSAGroup50_60))*log2(1/(1-(HOUTOTALS$MSAGroup50_60))))

HOUTOTALS$TotalEnt45_50 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup45_50)*log2(1/(HOUTOTALS$MSAGroup45_50)) + 
                                                        (1-(HOUTOTALS$MSAGroup45_50))*log2(1/(1-(HOUTOTALS$MSAGroup45_50))))

HOUTOTALS$TotalEnt40_45 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup40_45)*log2(1/(HOUTOTALS$MSAGroup40_45)) + 
                                                        (1-(HOUTOTALS$MSAGroup40_45))*log2(1/(1-(HOUTOTALS$MSAGroup40_45))))

HOUTOTALS$TotalEnt35_40 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup35_40)*log2(1/(HOUTOTALS$MSAGroup35_40)) + 
                                                        (1-(HOUTOTALS$MSAGroup35_40))*log2(1/(1-(HOUTOTALS$MSAGroup35_40))))

HOUTOTALS$TotalEnt30_35 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup30_35)*log2(1/(HOUTOTALS$MSAGroup30_35)) + 
                                                        (1-(HOUTOTALS$MSAGroup30_35))*log2(1/(1-(HOUTOTALS$MSAGroup30_35))))

HOUTOTALS$TotalEnt25_30 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup25_30)*log2(1/(HOUTOTALS$MSAGroup25_30)) + 
                                                        (1-(HOUTOTALS$MSAGroup25_30))*log2(1/(1-(HOUTOTALS$MSAGroup25_30))))

HOUTOTALS$TotalEnt20_25 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup20_25)*log2(1/(HOUTOTALS$MSAGroup20_25)) + 
                                                        (1-(HOUTOTALS$MSAGroup20_25))*log2(1/(1-(HOUTOTALS$MSAGroup20_25))))

HOUTOTALS$TotalEnt15_20 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup15_20)*log2(1/(HOUTOTALS$MSAGroup15_20)) + 
                                                        (1-(HOUTOTALS$MSAGroup15_20))*log2(1/(1-(HOUTOTALS$MSAGroup15_20))))

HOUTOTALS$TotalEnt10_15 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup10_15)*log2(1/(HOUTOTALS$MSAGroup10_15)) + 
                                                        (1-(HOUTOTALS$MSAGroup10_15))*log2(1/(1-(HOUTOTALS$MSAGroup10_15))))

HOUTOTALS$TotalEnt10 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$MSAGroup10)*log2(1/(HOUTOTALS$MSAGroup10)) + 
                                                     (1-(HOUTOTALS$MSAGroup10))*log2(1/(1-(HOUTOTALS$MSAGroup10))))

HOUTOTALS$ReverseTotalEnt10 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup10)*log2(1/(HOUTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(HOUTOTALS$ReverseMSAGroup10))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup10))))

HOUTOTALS$ReverseTotalEnt10_15 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup10_15)*log2(1/(HOUTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(HOUTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup10_15))))

HOUTOTALS$ReverseTotalEnt15_20 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup15_20)*log2(1/(HOUTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(HOUTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup15_20))))

HOUTOTALS$ReverseTotalEnt20_25 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup20_25)*log2(1/(HOUTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(HOUTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup20_25))))

HOUTOTALS$ReverseTotalEnt25_30 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup25_30)*log2(1/(HOUTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(HOUTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup25_30))))

HOUTOTALS$ReverseTotalEnt30_35 <- HOUTOTALS$MSAB19001_001 * ((HOUTOTALS$ReverseMSAGroup30_35)*log2(1/(HOUTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(HOUTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
HOUTOTALS$E200 <- ((HOUTOTALS$MSAGroup200)*log2(1/(HOUTOTALS$MSAGroup200)) + (1-(HOUTOTALS$MSAGroup200))*log2(1/(1-(HOUTOTALS$MSAGroup200))))
HOUTOTALS$E150_200 <- ((HOUTOTALS$MSAGroup150_200)*log2(1/(HOUTOTALS$MSAGroup150_200)) + (1-(HOUTOTALS$MSAGroup150_200))*log2(1/(1-(HOUTOTALS$MSAGroup150_200))))
HOUTOTALS$E125_150 <- ((HOUTOTALS$MSAGroup125_150)*log2(1/(HOUTOTALS$MSAGroup125_150)) + (1-(HOUTOTALS$MSAGroup125_150))*log2(1/(1-(HOUTOTALS$MSAGroup125_150))))
HOUTOTALS$E100_125 <- ((HOUTOTALS$MSAGroup100_125)*log2(1/(HOUTOTALS$MSAGroup100_125)) + (1-(HOUTOTALS$MSAGroup100_125))*log2(1/(1-(HOUTOTALS$MSAGroup100_125))))
HOUTOTALS$E75_100 <- ((HOUTOTALS$MSAGroup75_100)*log2(1/(HOUTOTALS$MSAGroup75_100)) + (1-(HOUTOTALS$MSAGroup75_100))*log2(1/(1-(HOUTOTALS$MSAGroup75_100))))
HOUTOTALS$E60_75 <- ((HOUTOTALS$MSAGroup60_75)*log2(1/(HOUTOTALS$MSAGroup60_75)) + (1-(HOUTOTALS$MSAGroup60_75))*log2(1/(1-(HOUTOTALS$MSAGroup60_75))))
HOUTOTALS$E50_60 <- ((HOUTOTALS$MSAGroup50_60)*log2(1/(HOUTOTALS$MSAGroup50_60)) + (1-(HOUTOTALS$MSAGroup50_60))*log2(1/(1-(HOUTOTALS$MSAGroup50_60))))
HOUTOTALS$E50_60 <- ((HOUTOTALS$MSAGroup50_60)*log2(1/(HOUTOTALS$MSAGroup50_60)) + (1-(HOUTOTALS$MSAGroup50_60))*log2(1/(1-(HOUTOTALS$MSAGroup50_60))))
HOUTOTALS$E45_50 <- ((HOUTOTALS$MSAGroup45_50)*log2(1/(HOUTOTALS$MSAGroup45_50)) + (1-(HOUTOTALS$MSAGroup45_50))*log2(1/(1-(HOUTOTALS$MSAGroup45_50))))
HOUTOTALS$E40_45 <- ((HOUTOTALS$MSAGroup40_45)*log2(1/(HOUTOTALS$MSAGroup40_45)) + (1-(HOUTOTALS$MSAGroup40_45))*log2(1/(1-(HOUTOTALS$MSAGroup40_45))))
HOUTOTALS$E35_40 <- ((HOUTOTALS$MSAGroup35_40)*log2(1/(HOUTOTALS$MSAGroup35_40)) + (1-(HOUTOTALS$MSAGroup35_40))*log2(1/(1-(HOUTOTALS$MSAGroup35_40))))
HOUTOTALS$E30_35 <- ((HOUTOTALS$MSAGroup30_35)*log2(1/(HOUTOTALS$MSAGroup30_35)) + (1-(HOUTOTALS$MSAGroup30_35))*log2(1/(1-(HOUTOTALS$MSAGroup30_35))))
HOUTOTALS$E25_30 <- ((HOUTOTALS$MSAGroup25_30)*log2(1/(HOUTOTALS$MSAGroup25_30)) + (1-(HOUTOTALS$MSAGroup25_30))*log2(1/(1-(HOUTOTALS$MSAGroup25_30))))
HOUTOTALS$E20_25 <- ((HOUTOTALS$MSAGroup20_25)*log2(1/(HOUTOTALS$MSAGroup20_25)) + (1-(HOUTOTALS$MSAGroup20_25))*log2(1/(1-(HOUTOTALS$MSAGroup20_25))))
HOUTOTALS$E15_20 <- ((HOUTOTALS$MSAGroup15_20)*log2(1/(HOUTOTALS$MSAGroup15_20)) + (1-(HOUTOTALS$MSAGroup15_20))*log2(1/(1-(HOUTOTALS$MSAGroup15_20))))
HOUTOTALS$E10_15 <- ((HOUTOTALS$MSAGroup10_15)*log2(1/(HOUTOTALS$MSAGroup10_15)) + (1-(HOUTOTALS$MSAGroup10_15))*log2(1/(1-(HOUTOTALS$MSAGroup10_15))))
HOUTOTALS$E10 <- ((HOUTOTALS$MSAGroup10)*log2(1/(HOUTOTALS$MSAGroup10)) + (1-(HOUTOTALS$MSAGroup10))*log2(1/(1-(HOUTOTALS$MSAGroup10))))
HOUTOTALS$ReverseE10 <- ((HOUTOTALS$ReverseMSAGroup10)*log2(1/(HOUTOTALS$ReverseMSAGroup10)) + (1-(HOUTOTALS$ReverseMSAGroup10))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup10))))
HOUTOTALS$ReverseE10_15 <- ((HOUTOTALS$ReverseMSAGroup10_15)*log2(1/(HOUTOTALS$ReverseMSAGroup10_15)) + (1-(HOUTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup10_15))))
HOUTOTALS$ReverseE15_20 <- ((HOUTOTALS$ReverseMSAGroup15_20)*log2(1/(HOUTOTALS$ReverseMSAGroup15_20)) + (1-(HOUTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup15_20))))
HOUTOTALS$ReverseE20_25 <- ((HOUTOTALS$ReverseMSAGroup20_25)*log2(1/(HOUTOTALS$ReverseMSAGroup20_25)) + (1-(HOUTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup20_25))))
HOUTOTALS$ReverseE25_30 <- ((HOUTOTALS$ReverseMSAGroup25_30)*log2(1/(HOUTOTALS$ReverseMSAGroup25_30)) + (1-(HOUTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup25_30))))
HOUTOTALS$ReverseE30_35 <- ((HOUTOTALS$ReverseMSAGroup30_35)*log2(1/(HOUTOTALS$ReverseMSAGroup30_35)) + (1-(HOUTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup30_35))))
HOUTOTALS$ReverseE35_40 <- ((HOUTOTALS$ReverseMSAGroup35_40)*log2(1/(HOUTOTALS$ReverseMSAGroup35_40)) + (1-(HOUTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(HOUTOTALS$ReverseMSAGroup35_40))))


HOU$Section200 <- HOU$LocalEnt200 / HOUTOTALS$TotalEnt200
HOU$Section150_200 <- HOU$LocalEnt150_200 / HOUTOTALS$TotalEnt150_200
HOU$Section125_150 <- HOU$LocalEnt125_150 / HOUTOTALS$TotalEnt125_150
HOU$Section100_125 <- HOU$LocalEnt100_125 / HOUTOTALS$TotalEnt100_125
HOU$Section75_100 <- HOU$LocalEnt75_100 / HOUTOTALS$TotalEnt75_100
HOU$Section60_75 <- HOU$LocalEnt60_75 / HOUTOTALS$TotalEnt60_75
HOU$Section50_60 <- HOU$LocalEnt50_60 / HOUTOTALS$TotalEnt50_60
HOU$Section45_50 <- HOU$LocalEnt45_50 / HOUTOTALS$TotalEnt45_50
HOU$Section40_45 <- HOU$LocalEnt40_45 / HOUTOTALS$TotalEnt40_45
HOU$Section35_40 <- HOU$LocalEnt35_40 / HOUTOTALS$TotalEnt35_40
HOU$Section30_35 <- HOU$LocalEnt30_35 / HOUTOTALS$TotalEnt30_35
HOU$Section25_30 <- HOU$LocalEnt25_30 / HOUTOTALS$TotalEnt25_30
HOU$Section20_25 <- HOU$LocalEnt20_25 / HOUTOTALS$TotalEnt20_25
HOU$Section15_20 <- HOU$LocalEnt15_20 / HOUTOTALS$TotalEnt15_20
HOU$Section10_15 <- HOU$LocalEnt10_15 / HOUTOTALS$TotalEnt10_15
HOU$Section10 <- HOU$LocalEnt10 / HOUTOTALS$TotalEnt10
HOU$ReverseSection10 <- HOU$ReverseLocalEnt10 / HOUTOTALS$ReverseTotalEnt10
HOU$ReverseSection10_15 <- HOU$ReverseLocalEnt10_15 / HOUTOTALS$ReverseTotalEnt10_15
HOU$ReverseSection15_20 <- HOU$ReverseLocalEnt15_20 / HOUTOTALS$ReverseTotalEnt15_20
HOU$ReverseSection20_25 <- HOU$ReverseLocalEnt20_25 / HOUTOTALS$ReverseTotalEnt20_25
HOU$ReverseSection25_30 <- HOU$ReverseLocalEnt25_30 / HOUTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
HOU[is.na(HOU)] <- 0

HOUTOTALS$Percent200 <- 1 - sum(HOU$Section200)
HOUTOTALS$Percent150_200 <- 1 - sum(HOU$Section150_200)
HOUTOTALS$Percent125_150 <- 1 - sum(HOU$Section125_150)
HOUTOTALS$Percent100_125 <- 1 - sum(HOU$Section100_125)
HOUTOTALS$Percent75_100 <- 1 - sum(HOU$Section75_100)
HOUTOTALS$Percent60_75 <- 1 - sum(HOU$Section60_75)
HOUTOTALS$Percent50_60 <- 1 - sum(HOU$Section50_60)
HOUTOTALS$Percent45_50 <- 1 - sum(HOU$Section45_50)
HOUTOTALS$Percent40_45 <- 1 - sum(HOU$Section40_45)
HOUTOTALS$Percent35_40 <- 1 - sum(HOU$Section35_40)
HOUTOTALS$Percent30_35 <- 1 - sum(HOU$Section30_35)
HOUTOTALS$Percent25_30 <- 1 - sum(HOU$Section25_30)
HOUTOTALS$Percent20_25 <- 1 - sum(HOU$Section20_25)
HOUTOTALS$Percent15_20 <- 1 - sum(HOU$Section15_20)
HOUTOTALS$Percent10_15 <- 1 - sum(HOU$Section10_15)
HOUTOTALS$Percent10 <- 1 - sum(HOU$Section10)
HOUTOTALS$ReversePercent10 <- 1 - sum(HOU$ReverseSection10)
HOUTOTALS$ReversePercent10_15 <- 1 - sum(HOU$ReverseSection10_15)
HOUTOTALS$ReversePercent15_20 <- 1 - sum(HOU$ReverseSection15_20)
HOUTOTALS$ReversePercent20_25 <- 1 - sum(HOU$ReverseSection20_25)
HOUTOTALS$ReversePercent25_30 <- 1 - sum(HOU$ReverseSection25_30)


HOUTOTALS$Weight200 <- HOUTOTALS$E200 * HOUTOTALS$Percent200
HOUTOTALS$Weight150_200 <- (HOUTOTALS$E150_200 * HOUTOTALS$Percent150_200)
HOUTOTALS$Weight125_150 <- (HOUTOTALS$E125_150 * HOUTOTALS$Percent125_150) 
HOUTOTALS$Weight100_125 <- (HOUTOTALS$E100_125 * HOUTOTALS$Percent100_125) 
HOUTOTALS$Weight75_100 <- (HOUTOTALS$E75_100 * HOUTOTALS$Percent75_100)
HOUTOTALS$Weight60_75 <- (HOUTOTALS$E60_75 * HOUTOTALS$Percent60_75) 
HOUTOTALS$Weight50_60 <- (HOUTOTALS$E50_60 * HOUTOTALS$Percent50_60) 
HOUTOTALS$Weight45_50 <- (HOUTOTALS$E45_50 * HOUTOTALS$Percent45_50)
HOUTOTALS$Weight40_45 <- (HOUTOTALS$E40_45 * HOUTOTALS$Percent40_45) 
HOUTOTALS$Weight35_40 <- (HOUTOTALS$E35_40 * HOUTOTALS$Percent35_40) 
HOUTOTALS$Weight30_35 <- (HOUTOTALS$E30_35 * HOUTOTALS$Percent30_35)
HOUTOTALS$Weight25_30 <- (HOUTOTALS$E25_30 * HOUTOTALS$Percent25_30) 
HOUTOTALS$Weight20_25 <- (HOUTOTALS$E20_25 * HOUTOTALS$Percent20_25)
HOUTOTALS$Weight15_20 <- (HOUTOTALS$E15_20 * HOUTOTALS$Percent15_20) 
HOUTOTALS$Weight10_15 <- (HOUTOTALS$E10_15 * HOUTOTALS$Percent10_15) 
HOUTOTALS$Weight10 <- (HOUTOTALS$E10 * HOUTOTALS$Percent10) 
HOUTOTALS$ReverseWeight10 <- (HOUTOTALS$ReverseE10 * HOUTOTALS$ReversePercent10)
HOUTOTALS$ReverseWeight10_15 <- (HOUTOTALS$ReverseE10_15 * HOUTOTALS$ReversePercent10_15)
HOUTOTALS$ReverseWeight15_20 <- (HOUTOTALS$ReverseE15_20 * HOUTOTALS$ReversePercent15_20)
HOUTOTALS$ReverseWeight20_25 <- (HOUTOTALS$ReverseE20_25 * HOUTOTALS$ReversePercent20_25)
HOUTOTALS$ReverseWeight25_30 <- (HOUTOTALS$ReverseE25_30 * HOUTOTALS$ReversePercent25_30)



#trying to recreate the HA stuff I did thru SAS and R
#local

PHX$Group200 <- (PHX$B19001_017/PHX$B19001_001)
PHX$Group150_200 <- (PHX$B19001_017 + PHX$B19001_016)/PHX$B19001_001;
PHX$Group125_150 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015)/PHX$B19001_001;
PHX$Group100_125 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014)/PHX$B19001_001;
PHX$Group75_100 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013)/PHX$B19001_001;
PHX$Group60_75 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012)/PHX$B19001_001;
PHX$Group50_60 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011)/PHX$B19001_001;
PHX$Group45_50 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010)/PHX$B19001_001;
PHX$Group40_45 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009)/PHX$B19001_001;
PHX$Group35_40 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008)/PHX$B19001_001;
PHX$Group30_35 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007)/PHX$B19001_001;
PHX$Group25_30 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007 + PHX$B19001_006)/PHX$B19001_001;
PHX$Group20_25 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007 + PHX$B19001_006 + PHX$B19001_005)/PHX$B19001_001;
PHX$Group15_20 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007 + PHX$B19001_006 + PHX$B19001_005 + PHX$B19001_004)/PHX$B19001_001;
PHX$Group10_15 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007 + PHX$B19001_006 + PHX$B19001_005 + PHX$B19001_004 + PHX$B19001_003)/PHX$B19001_001;
PHX$Group10 <- (PHX$B19001_017 + PHX$B19001_016 + PHX$B19001_015 + PHX$B19001_014 + PHX$B19001_013 + PHX$B19001_012 + PHX$B19001_011 + PHX$B19001_010 + PHX$B19001_009 + PHX$B19001_008 + PHX$B19001_007 + PHX$B19001_006 + PHX$B19001_005 + PHX$B19001_004 + PHX$B19001_003 + PHX$B19001_002)/PHX$B19001_001;
PHX$ReverseGroup10 <- (PHX$B19001_002)/PHX$B19001_001;
PHX$ReverseGroup10_15 <- (PHX$B19001_002 + PHX$B19001_003)/PHX$B19001_001;
PHX$ReverseGroup15_20 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004)/PHX$B19001_001;
PHX$ReverseGroup20_25 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005)/PHX$B19001_001;
PHX$ReverseGroup25_30 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006)/PHX$B19001_001;
PHX$ReverseGroup30_35 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007)/PHX$B19001_001;
PHX$ReverseGroup35_40 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007 + PHX$B19001_008)/PHX$B19001_001;
PHX$ReverseGroup40_45 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007 + PHX$B19001_008 + PHX$B19001_009)/PHX$B19001_001;
PHX$ReverseGroup45_50 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007 + PHX$B19001_008 + PHX$B19001_009 + PHX$B19001_010)/PHX$B19001_001;
PHX$ReverseGroup50_60 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007 + PHX$B19001_008 + PHX$B19001_009 + PHX$B19001_010 + PHX$B19001_011)/PHX$B19001_001;
PHX$ReverseGroup60_75 <- (PHX$B19001_002 + PHX$B19001_003 + PHX$B19001_004 + PHX$B19001_005 + PHX$B19001_006 + PHX$B19001_007 + PHX$B19001_008 + PHX$B19001_009 + PHX$B19001_010 + PHX$B19001_011 + PHX$B19001_012)/PHX$B19001_001;

PHX$LocalEnt200 <- PHX$B19001_001 * ((PHX$Group200)*log2(1/(PHX$Group200)) + 
                                       (1-(PHX$Group200))*log2(1/(1-(PHX$Group200))))

PHX$LocalEnt150_200 <- PHX$B19001_001 * ((PHX$Group150_200)*log2(1/(PHX$Group150_200)) + 
                                           (1-(PHX$Group150_200))*log2(1/(1-(PHX$Group150_200))))

PHX$LocalEnt125_150 <- PHX$B19001_001 * ((PHX$Group125_150)*log2(1/(PHX$Group125_150)) + 
                                           (1-(PHX$Group125_150))*log2(1/(1-(PHX$Group125_150))))

PHX$LocalEnt100_125 <- PHX$B19001_001 * ((PHX$Group100_125)*log2(1/(PHX$Group100_125)) + 
                                           (1-(PHX$Group100_125))*log2(1/(1-(PHX$Group100_125))))

PHX$LocalEnt75_100 <- PHX$B19001_001 * ((PHX$Group75_100)*log2(1/(PHX$Group75_100)) + 
                                          (1-(PHX$Group75_100))*log2(1/(1-(PHX$Group75_100))))

PHX$LocalEnt60_75 <- PHX$B19001_001 * ((PHX$Group60_75)*log2(1/(PHX$Group60_75)) + 
                                         (1-(PHX$Group60_75))*log2(1/(1-(PHX$Group60_75))))

PHX$LocalEnt50_60 <- PHX$B19001_001 * ((PHX$Group50_60)*log2(1/(PHX$Group50_60)) + 
                                         (1-(PHX$Group50_60))*log2(1/(1-(PHX$Group50_60))))

PHX$LocalEnt45_50 <- PHX$B19001_001 * ((PHX$Group45_50)*log2(1/(PHX$Group45_50)) + 
                                         (1-(PHX$Group45_50))*log2(1/(1-(PHX$Group45_50))))

PHX$LocalEnt40_45 <- PHX$B19001_001 * ((PHX$Group40_45)*log2(1/(PHX$Group40_45)) + 
                                         (1-(PHX$Group40_45))*log2(1/(1-(PHX$Group40_45))))

PHX$LocalEnt35_40 <- PHX$B19001_001 * ((PHX$Group35_40)*log2(1/(PHX$Group35_40)) + 
                                         (1-(PHX$Group35_40))*log2(1/(1-(PHX$Group35_40))))

PHX$LocalEnt30_35 <- PHX$B19001_001 * ((PHX$Group30_35)*log2(1/(PHX$Group30_35)) + 
                                         (1-(PHX$Group30_35))*log2(1/(1-(PHX$Group30_35))))

PHX$LocalEnt25_30 <- PHX$B19001_001 * ((PHX$Group25_30)*log2(1/(PHX$Group25_30)) + 
                                         (1-(PHX$Group25_30))*log2(1/(1-(PHX$Group25_30))))

PHX$LocalEnt20_25 <- PHX$B19001_001 * ((PHX$Group20_25)*log2(1/(PHX$Group20_25)) + 
                                         (1-(PHX$Group20_25))*log2(1/(1-(PHX$Group20_25))))

PHX$LocalEnt15_20 <- PHX$B19001_001 * ((PHX$Group15_20)*log2(1/(PHX$Group15_20)) + 
                                         (1-(PHX$Group15_20))*log2(1/(1-(PHX$Group15_20))))

PHX$LocalEnt10_15 <- PHX$B19001_001 * ((PHX$Group10_15)*log2(1/(PHX$Group10_15)) + 
                                         (1-(PHX$Group10_15))*log2(1/(1-(PHX$Group10_15))))

PHX$LocalEnt10 <- PHX$B19001_001 * ((PHX$Group10)*log2(1/(PHX$Group10)) + 
                                      (1-(PHX$Group10))*log2(1/(1-(PHX$Group10))))

PHX$ReverseLocalEnt10 <- PHX$B19001_001 * ((PHX$ReverseGroup10)*log2(1/(PHX$ReverseGroup10)) + 
                                             (1-(PHX$ReverseGroup10))*log2(1/(1-(PHX$ReverseGroup10))))

PHX$ReverseLocalEnt10_15 <- PHX$B19001_001 * ((PHX$ReverseGroup10_15)*log2(1/(PHX$ReverseGroup10_15)) + 
                                                (1-(PHX$ReverseGroup10_15))*log2(1/(1-(PHX$ReverseGroup10_15))))

PHX$ReverseLocalEnt15_20 <- PHX$B19001_001 * ((PHX$ReverseGroup15_20)*log2(1/(PHX$ReverseGroup15_20)) + 
                                                (1-(PHX$ReverseGroup15_20))*log2(1/(1-(PHX$ReverseGroup15_20))))

PHX$ReverseLocalEnt20_25 <- PHX$B19001_001 * ((PHX$ReverseGroup20_25)*log2(1/(PHX$ReverseGroup20_25)) + 
                                                (1-(PHX$ReverseGroup20_25))*log2(1/(1-(PHX$ReverseGroup20_25))))

PHX$ReverseLocalEnt25_30 <- PHX$B19001_001 * ((PHX$ReverseGroup25_30)*log2(1/(PHX$ReverseGroup25_30)) + 
                                                (1-(PHX$ReverseGroup25_30))*log2(1/(1-(PHX$ReverseGroup25_30))))

PHX$ReverseLocalEnt30_35 <- PHX$B19001_001 * ((PHX$ReverseGroup30_35)*log2(1/(PHX$ReverseGroup30_35)) + 
                                                (1-(PHX$ReverseGroup30_35))*log2(1/(1-(PHX$ReverseGroup30_35))))


#HA stuff Total


PHXTOTALS <- PHX %>%
  summarise(MSAB19001_001 = sum(PHX$B19001_001), MSAB19001_002 = sum(PHX$B19001_002), MSAB19001_003 = sum(PHX$B19001_003), MSAB19001_004 = sum(PHX$B19001_004),
            MSAB19001_005 = sum(PHX$B19001_005), MSAB19001_006 = sum(PHX$B19001_006), MSAB19001_007 = sum(PHX$B19001_007),
            MSAB19001_008 = sum(PHX$B19001_008), MSAB19001_009 = sum(PHX$B19001_009), MSAB19001_010 = sum(PHX$B19001_010),
            MSAB19001_011 = sum(PHX$B19001_011), MSAB19001_012 = sum(PHX$B19001_012), MSAB19001_013 = sum(PHX$B19001_013),
            MSAB19001_014 = sum(PHX$B19001_014), MSAB19001_015 = sum(PHX$B19001_015), MSAB19001_016 = sum(PHX$B19001_016),
            MSAB19001_017 = sum(PHX$B19001_017))


PHXTOTALS$MSAGroup200 <- (PHXTOTALS$MSAB19001_017/PHXTOTALS$MSAB19001_001)
PHXTOTALS$MSAGroup150_200 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup125_150 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup100_125 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup75_100 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup60_75 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup50_60 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup45_50 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup40_45 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup35_40 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup30_35 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup25_30 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_006)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup20_25 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_005)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup15_20 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_004)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup10_15 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_003)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$MSAGroup10 <- (PHXTOTALS$MSAB19001_017 + PHXTOTALS$MSAB19001_016 + PHXTOTALS$MSAB19001_015 + PHXTOTALS$MSAB19001_014 + PHXTOTALS$MSAB19001_013 + PHXTOTALS$MSAB19001_012 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_002)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup10 <- (PHXTOTALS$MSAB19001_002)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup10_15 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup15_20 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup20_25 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup25_30 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup30_35 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup35_40 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_008)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup40_45 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_009)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup45_50 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_010)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup50_60 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_011)/PHXTOTALS$MSAB19001_001;
PHXTOTALS$ReverseMSAGroup60_75 <- (PHXTOTALS$MSAB19001_002 + PHXTOTALS$MSAB19001_003 + PHXTOTALS$MSAB19001_004 + PHXTOTALS$MSAB19001_005 + PHXTOTALS$MSAB19001_006 + PHXTOTALS$MSAB19001_007 + PHXTOTALS$MSAB19001_008 + PHXTOTALS$MSAB19001_009 + PHXTOTALS$MSAB19001_010 + PHXTOTALS$MSAB19001_011 + PHXTOTALS$MSAB19001_012)/PHXTOTALS$MSAB19001_001;

PHXTOTALS$TotalEnt200 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup200)*log2(1/(PHXTOTALS$MSAGroup200)) + 
                                                      (1-(PHXTOTALS$MSAGroup200))*log2(1/(1-(PHXTOTALS$MSAGroup200))))

PHXTOTALS$TotalEnt150_200 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup150_200)*log2(1/(PHXTOTALS$MSAGroup150_200)) + 
                                                          (1-(PHXTOTALS$MSAGroup150_200))*log2(1/(1-(PHXTOTALS$MSAGroup150_200))))

PHXTOTALS$TotalEnt125_150 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup125_150)*log2(1/(PHXTOTALS$MSAGroup125_150)) + 
                                                          (1-(PHXTOTALS$MSAGroup125_150))*log2(1/(1-(PHXTOTALS$MSAGroup125_150))))

PHXTOTALS$TotalEnt100_125 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup100_125)*log2(1/(PHXTOTALS$MSAGroup100_125)) + 
                                                          (1-(PHXTOTALS$MSAGroup100_125))*log2(1/(1-(PHXTOTALS$MSAGroup100_125))))

PHXTOTALS$TotalEnt75_100 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup75_100)*log2(1/(PHXTOTALS$MSAGroup75_100)) + 
                                                         (1-(PHXTOTALS$MSAGroup75_100))*log2(1/(1-(PHXTOTALS$MSAGroup75_100))))

PHXTOTALS$TotalEnt60_75 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup60_75)*log2(1/(PHXTOTALS$MSAGroup60_75)) + 
                                                        (1-(PHXTOTALS$MSAGroup60_75))*log2(1/(1-(PHXTOTALS$MSAGroup60_75))))

PHXTOTALS$TotalEnt50_60 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup50_60)*log2(1/(PHXTOTALS$MSAGroup50_60)) + 
                                                        (1-(PHXTOTALS$MSAGroup50_60))*log2(1/(1-(PHXTOTALS$MSAGroup50_60))))

PHXTOTALS$TotalEnt45_50 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup45_50)*log2(1/(PHXTOTALS$MSAGroup45_50)) + 
                                                        (1-(PHXTOTALS$MSAGroup45_50))*log2(1/(1-(PHXTOTALS$MSAGroup45_50))))

PHXTOTALS$TotalEnt40_45 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup40_45)*log2(1/(PHXTOTALS$MSAGroup40_45)) + 
                                                        (1-(PHXTOTALS$MSAGroup40_45))*log2(1/(1-(PHXTOTALS$MSAGroup40_45))))

PHXTOTALS$TotalEnt35_40 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup35_40)*log2(1/(PHXTOTALS$MSAGroup35_40)) + 
                                                        (1-(PHXTOTALS$MSAGroup35_40))*log2(1/(1-(PHXTOTALS$MSAGroup35_40))))

PHXTOTALS$TotalEnt30_35 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup30_35)*log2(1/(PHXTOTALS$MSAGroup30_35)) + 
                                                        (1-(PHXTOTALS$MSAGroup30_35))*log2(1/(1-(PHXTOTALS$MSAGroup30_35))))

PHXTOTALS$TotalEnt25_30 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup25_30)*log2(1/(PHXTOTALS$MSAGroup25_30)) + 
                                                        (1-(PHXTOTALS$MSAGroup25_30))*log2(1/(1-(PHXTOTALS$MSAGroup25_30))))

PHXTOTALS$TotalEnt20_25 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup20_25)*log2(1/(PHXTOTALS$MSAGroup20_25)) + 
                                                        (1-(PHXTOTALS$MSAGroup20_25))*log2(1/(1-(PHXTOTALS$MSAGroup20_25))))

PHXTOTALS$TotalEnt15_20 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup15_20)*log2(1/(PHXTOTALS$MSAGroup15_20)) + 
                                                        (1-(PHXTOTALS$MSAGroup15_20))*log2(1/(1-(PHXTOTALS$MSAGroup15_20))))

PHXTOTALS$TotalEnt10_15 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup10_15)*log2(1/(PHXTOTALS$MSAGroup10_15)) + 
                                                        (1-(PHXTOTALS$MSAGroup10_15))*log2(1/(1-(PHXTOTALS$MSAGroup10_15))))

PHXTOTALS$TotalEnt10 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$MSAGroup10)*log2(1/(PHXTOTALS$MSAGroup10)) + 
                                                     (1-(PHXTOTALS$MSAGroup10))*log2(1/(1-(PHXTOTALS$MSAGroup10))))

PHXTOTALS$ReverseTotalEnt10 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup10)*log2(1/(PHXTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(PHXTOTALS$ReverseMSAGroup10))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup10))))

PHXTOTALS$ReverseTotalEnt10_15 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup10_15)*log2(1/(PHXTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(PHXTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup10_15))))

PHXTOTALS$ReverseTotalEnt15_20 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup15_20)*log2(1/(PHXTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(PHXTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup15_20))))

PHXTOTALS$ReverseTotalEnt20_25 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup20_25)*log2(1/(PHXTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(PHXTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup20_25))))

PHXTOTALS$ReverseTotalEnt25_30 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup25_30)*log2(1/(PHXTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(PHXTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup25_30))))

PHXTOTALS$ReverseTotalEnt30_35 <- PHXTOTALS$MSAB19001_001 * ((PHXTOTALS$ReverseMSAGroup30_35)*log2(1/(PHXTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(PHXTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
PHXTOTALS$E200 <- ((PHXTOTALS$MSAGroup200)*log2(1/(PHXTOTALS$MSAGroup200)) + (1-(PHXTOTALS$MSAGroup200))*log2(1/(1-(PHXTOTALS$MSAGroup200))))
PHXTOTALS$E150_200 <- ((PHXTOTALS$MSAGroup150_200)*log2(1/(PHXTOTALS$MSAGroup150_200)) + (1-(PHXTOTALS$MSAGroup150_200))*log2(1/(1-(PHXTOTALS$MSAGroup150_200))))
PHXTOTALS$E125_150 <- ((PHXTOTALS$MSAGroup125_150)*log2(1/(PHXTOTALS$MSAGroup125_150)) + (1-(PHXTOTALS$MSAGroup125_150))*log2(1/(1-(PHXTOTALS$MSAGroup125_150))))
PHXTOTALS$E100_125 <- ((PHXTOTALS$MSAGroup100_125)*log2(1/(PHXTOTALS$MSAGroup100_125)) + (1-(PHXTOTALS$MSAGroup100_125))*log2(1/(1-(PHXTOTALS$MSAGroup100_125))))
PHXTOTALS$E75_100 <- ((PHXTOTALS$MSAGroup75_100)*log2(1/(PHXTOTALS$MSAGroup75_100)) + (1-(PHXTOTALS$MSAGroup75_100))*log2(1/(1-(PHXTOTALS$MSAGroup75_100))))
PHXTOTALS$E60_75 <- ((PHXTOTALS$MSAGroup60_75)*log2(1/(PHXTOTALS$MSAGroup60_75)) + (1-(PHXTOTALS$MSAGroup60_75))*log2(1/(1-(PHXTOTALS$MSAGroup60_75))))
PHXTOTALS$E50_60 <- ((PHXTOTALS$MSAGroup50_60)*log2(1/(PHXTOTALS$MSAGroup50_60)) + (1-(PHXTOTALS$MSAGroup50_60))*log2(1/(1-(PHXTOTALS$MSAGroup50_60))))
PHXTOTALS$E50_60 <- ((PHXTOTALS$MSAGroup50_60)*log2(1/(PHXTOTALS$MSAGroup50_60)) + (1-(PHXTOTALS$MSAGroup50_60))*log2(1/(1-(PHXTOTALS$MSAGroup50_60))))
PHXTOTALS$E45_50 <- ((PHXTOTALS$MSAGroup45_50)*log2(1/(PHXTOTALS$MSAGroup45_50)) + (1-(PHXTOTALS$MSAGroup45_50))*log2(1/(1-(PHXTOTALS$MSAGroup45_50))))
PHXTOTALS$E40_45 <- ((PHXTOTALS$MSAGroup40_45)*log2(1/(PHXTOTALS$MSAGroup40_45)) + (1-(PHXTOTALS$MSAGroup40_45))*log2(1/(1-(PHXTOTALS$MSAGroup40_45))))
PHXTOTALS$E35_40 <- ((PHXTOTALS$MSAGroup35_40)*log2(1/(PHXTOTALS$MSAGroup35_40)) + (1-(PHXTOTALS$MSAGroup35_40))*log2(1/(1-(PHXTOTALS$MSAGroup35_40))))
PHXTOTALS$E30_35 <- ((PHXTOTALS$MSAGroup30_35)*log2(1/(PHXTOTALS$MSAGroup30_35)) + (1-(PHXTOTALS$MSAGroup30_35))*log2(1/(1-(PHXTOTALS$MSAGroup30_35))))
PHXTOTALS$E25_30 <- ((PHXTOTALS$MSAGroup25_30)*log2(1/(PHXTOTALS$MSAGroup25_30)) + (1-(PHXTOTALS$MSAGroup25_30))*log2(1/(1-(PHXTOTALS$MSAGroup25_30))))
PHXTOTALS$E20_25 <- ((PHXTOTALS$MSAGroup20_25)*log2(1/(PHXTOTALS$MSAGroup20_25)) + (1-(PHXTOTALS$MSAGroup20_25))*log2(1/(1-(PHXTOTALS$MSAGroup20_25))))
PHXTOTALS$E15_20 <- ((PHXTOTALS$MSAGroup15_20)*log2(1/(PHXTOTALS$MSAGroup15_20)) + (1-(PHXTOTALS$MSAGroup15_20))*log2(1/(1-(PHXTOTALS$MSAGroup15_20))))
PHXTOTALS$E10_15 <- ((PHXTOTALS$MSAGroup10_15)*log2(1/(PHXTOTALS$MSAGroup10_15)) + (1-(PHXTOTALS$MSAGroup10_15))*log2(1/(1-(PHXTOTALS$MSAGroup10_15))))
PHXTOTALS$E10 <- ((PHXTOTALS$MSAGroup10)*log2(1/(PHXTOTALS$MSAGroup10)) + (1-(PHXTOTALS$MSAGroup10))*log2(1/(1-(PHXTOTALS$MSAGroup10))))
PHXTOTALS$ReverseE10 <- ((PHXTOTALS$ReverseMSAGroup10)*log2(1/(PHXTOTALS$ReverseMSAGroup10)) + (1-(PHXTOTALS$ReverseMSAGroup10))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup10))))
PHXTOTALS$ReverseE10_15 <- ((PHXTOTALS$ReverseMSAGroup10_15)*log2(1/(PHXTOTALS$ReverseMSAGroup10_15)) + (1-(PHXTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup10_15))))
PHXTOTALS$ReverseE15_20 <- ((PHXTOTALS$ReverseMSAGroup15_20)*log2(1/(PHXTOTALS$ReverseMSAGroup15_20)) + (1-(PHXTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup15_20))))
PHXTOTALS$ReverseE20_25 <- ((PHXTOTALS$ReverseMSAGroup20_25)*log2(1/(PHXTOTALS$ReverseMSAGroup20_25)) + (1-(PHXTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup20_25))))
PHXTOTALS$ReverseE25_30 <- ((PHXTOTALS$ReverseMSAGroup25_30)*log2(1/(PHXTOTALS$ReverseMSAGroup25_30)) + (1-(PHXTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup25_30))))
PHXTOTALS$ReverseE30_35 <- ((PHXTOTALS$ReverseMSAGroup30_35)*log2(1/(PHXTOTALS$ReverseMSAGroup30_35)) + (1-(PHXTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup30_35))))
PHXTOTALS$ReverseE35_40 <- ((PHXTOTALS$ReverseMSAGroup35_40)*log2(1/(PHXTOTALS$ReverseMSAGroup35_40)) + (1-(PHXTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(PHXTOTALS$ReverseMSAGroup35_40))))


PHX$Section200 <- PHX$LocalEnt200 / PHXTOTALS$TotalEnt200
PHX$Section150_200 <- PHX$LocalEnt150_200 / PHXTOTALS$TotalEnt150_200
PHX$Section125_150 <- PHX$LocalEnt125_150 / PHXTOTALS$TotalEnt125_150
PHX$Section100_125 <- PHX$LocalEnt100_125 / PHXTOTALS$TotalEnt100_125
PHX$Section75_100 <- PHX$LocalEnt75_100 / PHXTOTALS$TotalEnt75_100
PHX$Section60_75 <- PHX$LocalEnt60_75 / PHXTOTALS$TotalEnt60_75
PHX$Section50_60 <- PHX$LocalEnt50_60 / PHXTOTALS$TotalEnt50_60
PHX$Section45_50 <- PHX$LocalEnt45_50 / PHXTOTALS$TotalEnt45_50
PHX$Section40_45 <- PHX$LocalEnt40_45 / PHXTOTALS$TotalEnt40_45
PHX$Section35_40 <- PHX$LocalEnt35_40 / PHXTOTALS$TotalEnt35_40
PHX$Section30_35 <- PHX$LocalEnt30_35 / PHXTOTALS$TotalEnt30_35
PHX$Section25_30 <- PHX$LocalEnt25_30 / PHXTOTALS$TotalEnt25_30
PHX$Section20_25 <- PHX$LocalEnt20_25 / PHXTOTALS$TotalEnt20_25
PHX$Section15_20 <- PHX$LocalEnt15_20 / PHXTOTALS$TotalEnt15_20
PHX$Section10_15 <- PHX$LocalEnt10_15 / PHXTOTALS$TotalEnt10_15
PHX$Section10 <- PHX$LocalEnt10 / PHXTOTALS$TotalEnt10
PHX$ReverseSection10 <- PHX$ReverseLocalEnt10 / PHXTOTALS$ReverseTotalEnt10
PHX$ReverseSection10_15 <- PHX$ReverseLocalEnt10_15 / PHXTOTALS$ReverseTotalEnt10_15
PHX$ReverseSection15_20 <- PHX$ReverseLocalEnt15_20 / PHXTOTALS$ReverseTotalEnt15_20
PHX$ReverseSection20_25 <- PHX$ReverseLocalEnt20_25 / PHXTOTALS$ReverseTotalEnt20_25
PHX$ReverseSection25_30 <- PHX$ReverseLocalEnt25_30 / PHXTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
PHX[is.na(PHX)] <- 0

PHXTOTALS$Percent200 <- 1 - sum(PHX$Section200)
PHXTOTALS$Percent150_200 <- 1 - sum(PHX$Section150_200)
PHXTOTALS$Percent125_150 <- 1 - sum(PHX$Section125_150)
PHXTOTALS$Percent100_125 <- 1 - sum(PHX$Section100_125)
PHXTOTALS$Percent75_100 <- 1 - sum(PHX$Section75_100)
PHXTOTALS$Percent60_75 <- 1 - sum(PHX$Section60_75)
PHXTOTALS$Percent50_60 <- 1 - sum(PHX$Section50_60)
PHXTOTALS$Percent45_50 <- 1 - sum(PHX$Section45_50)
PHXTOTALS$Percent40_45 <- 1 - sum(PHX$Section40_45)
PHXTOTALS$Percent35_40 <- 1 - sum(PHX$Section35_40)
PHXTOTALS$Percent30_35 <- 1 - sum(PHX$Section30_35)
PHXTOTALS$Percent25_30 <- 1 - sum(PHX$Section25_30)
PHXTOTALS$Percent20_25 <- 1 - sum(PHX$Section20_25)
PHXTOTALS$Percent15_20 <- 1 - sum(PHX$Section15_20)
PHXTOTALS$Percent10_15 <- 1 - sum(PHX$Section10_15)
PHXTOTALS$Percent10 <- 1 - sum(PHX$Section10)
PHXTOTALS$ReversePercent10 <- 1 - sum(PHX$ReverseSection10)
PHXTOTALS$ReversePercent10_15 <- 1 - sum(PHX$ReverseSection10_15)
PHXTOTALS$ReversePercent15_20 <- 1 - sum(PHX$ReverseSection15_20)
PHXTOTALS$ReversePercent20_25 <- 1 - sum(PHX$ReverseSection20_25)
PHXTOTALS$ReversePercent25_30 <- 1 - sum(PHX$ReverseSection25_30)


PHXTOTALS$Weight200 <- PHXTOTALS$E200 * PHXTOTALS$Percent200
PHXTOTALS$Weight150_200 <- (PHXTOTALS$E150_200 * PHXTOTALS$Percent150_200)
PHXTOTALS$Weight125_150 <- (PHXTOTALS$E125_150 * PHXTOTALS$Percent125_150) 
PHXTOTALS$Weight100_125 <- (PHXTOTALS$E100_125 * PHXTOTALS$Percent100_125) 
PHXTOTALS$Weight75_100 <- (PHXTOTALS$E75_100 * PHXTOTALS$Percent75_100)
PHXTOTALS$Weight60_75 <- (PHXTOTALS$E60_75 * PHXTOTALS$Percent60_75) 
PHXTOTALS$Weight50_60 <- (PHXTOTALS$E50_60 * PHXTOTALS$Percent50_60) 
PHXTOTALS$Weight45_50 <- (PHXTOTALS$E45_50 * PHXTOTALS$Percent45_50)
PHXTOTALS$Weight40_45 <- (PHXTOTALS$E40_45 * PHXTOTALS$Percent40_45) 
PHXTOTALS$Weight35_40 <- (PHXTOTALS$E35_40 * PHXTOTALS$Percent35_40) 
PHXTOTALS$Weight30_35 <- (PHXTOTALS$E30_35 * PHXTOTALS$Percent30_35)
PHXTOTALS$Weight25_30 <- (PHXTOTALS$E25_30 * PHXTOTALS$Percent25_30) 
PHXTOTALS$Weight20_25 <- (PHXTOTALS$E20_25 * PHXTOTALS$Percent20_25)
PHXTOTALS$Weight15_20 <- (PHXTOTALS$E15_20 * PHXTOTALS$Percent15_20) 
PHXTOTALS$Weight10_15 <- (PHXTOTALS$E10_15 * PHXTOTALS$Percent10_15) 
PHXTOTALS$Weight10 <- (PHXTOTALS$E10 * PHXTOTALS$Percent10) 
PHXTOTALS$ReverseWeight10 <- (PHXTOTALS$ReverseE10 * PHXTOTALS$ReversePercent10)
PHXTOTALS$ReverseWeight10_15 <- (PHXTOTALS$ReverseE10_15 * PHXTOTALS$ReversePercent10_15)
PHXTOTALS$ReverseWeight15_20 <- (PHXTOTALS$ReverseE15_20 * PHXTOTALS$ReversePercent15_20)
PHXTOTALS$ReverseWeight20_25 <- (PHXTOTALS$ReverseE20_25 * PHXTOTALS$ReversePercent20_25)
PHXTOTALS$ReverseWeight25_30 <- (PHXTOTALS$ReverseE25_30 * PHXTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

LA$Group200 <- (LA$B19001_017/LA$B19001_001)
LA$Group150_200 <- (LA$B19001_017 + LA$B19001_016)/LA$B19001_001;
LA$Group125_150 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015)/LA$B19001_001;
LA$Group100_125 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014)/LA$B19001_001;
LA$Group75_100 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013)/LA$B19001_001;
LA$Group60_75 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012)/LA$B19001_001;
LA$Group50_60 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011)/LA$B19001_001;
LA$Group45_50 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010)/LA$B19001_001;
LA$Group40_45 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009)/LA$B19001_001;
LA$Group35_40 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008)/LA$B19001_001;
LA$Group30_35 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007)/LA$B19001_001;
LA$Group25_30 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007 + LA$B19001_006)/LA$B19001_001;
LA$Group20_25 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007 + LA$B19001_006 + LA$B19001_005)/LA$B19001_001;
LA$Group15_20 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007 + LA$B19001_006 + LA$B19001_005 + LA$B19001_004)/LA$B19001_001;
LA$Group10_15 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007 + LA$B19001_006 + LA$B19001_005 + LA$B19001_004 + LA$B19001_003)/LA$B19001_001;
LA$Group10 <- (LA$B19001_017 + LA$B19001_016 + LA$B19001_015 + LA$B19001_014 + LA$B19001_013 + LA$B19001_012 + LA$B19001_011 + LA$B19001_010 + LA$B19001_009 + LA$B19001_008 + LA$B19001_007 + LA$B19001_006 + LA$B19001_005 + LA$B19001_004 + LA$B19001_003 + LA$B19001_002)/LA$B19001_001;
LA$ReverseGroup10 <- (LA$B19001_002)/LA$B19001_001;
LA$ReverseGroup10_15 <- (LA$B19001_002 + LA$B19001_003)/LA$B19001_001;
LA$ReverseGroup15_20 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004)/LA$B19001_001;
LA$ReverseGroup20_25 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005)/LA$B19001_001;
LA$ReverseGroup25_30 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006)/LA$B19001_001;
LA$ReverseGroup30_35 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007)/LA$B19001_001;
LA$ReverseGroup35_40 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007 + LA$B19001_008)/LA$B19001_001;
LA$ReverseGroup40_45 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007 + LA$B19001_008 + LA$B19001_009)/LA$B19001_001;
LA$ReverseGroup45_50 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007 + LA$B19001_008 + LA$B19001_009 + LA$B19001_010)/LA$B19001_001;
LA$ReverseGroup50_60 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007 + LA$B19001_008 + LA$B19001_009 + LA$B19001_010 + LA$B19001_011)/LA$B19001_001;
LA$ReverseGroup60_75 <- (LA$B19001_002 + LA$B19001_003 + LA$B19001_004 + LA$B19001_005 + LA$B19001_006 + LA$B19001_007 + LA$B19001_008 + LA$B19001_009 + LA$B19001_010 + LA$B19001_011 + LA$B19001_012)/LA$B19001_001;

LA$LocalEnt200 <- LA$B19001_001 * ((LA$Group200)*log2(1/(LA$Group200)) + 
                                     (1-(LA$Group200))*log2(1/(1-(LA$Group200))))

LA$LocalEnt150_200 <- LA$B19001_001 * ((LA$Group150_200)*log2(1/(LA$Group150_200)) + 
                                         (1-(LA$Group150_200))*log2(1/(1-(LA$Group150_200))))

LA$LocalEnt125_150 <- LA$B19001_001 * ((LA$Group125_150)*log2(1/(LA$Group125_150)) + 
                                         (1-(LA$Group125_150))*log2(1/(1-(LA$Group125_150))))

LA$LocalEnt100_125 <- LA$B19001_001 * ((LA$Group100_125)*log2(1/(LA$Group100_125)) + 
                                         (1-(LA$Group100_125))*log2(1/(1-(LA$Group100_125))))

LA$LocalEnt75_100 <- LA$B19001_001 * ((LA$Group75_100)*log2(1/(LA$Group75_100)) + 
                                        (1-(LA$Group75_100))*log2(1/(1-(LA$Group75_100))))

LA$LocalEnt60_75 <- LA$B19001_001 * ((LA$Group60_75)*log2(1/(LA$Group60_75)) + 
                                       (1-(LA$Group60_75))*log2(1/(1-(LA$Group60_75))))

LA$LocalEnt50_60 <- LA$B19001_001 * ((LA$Group50_60)*log2(1/(LA$Group50_60)) + 
                                       (1-(LA$Group50_60))*log2(1/(1-(LA$Group50_60))))

LA$LocalEnt45_50 <- LA$B19001_001 * ((LA$Group45_50)*log2(1/(LA$Group45_50)) + 
                                       (1-(LA$Group45_50))*log2(1/(1-(LA$Group45_50))))

LA$LocalEnt40_45 <- LA$B19001_001 * ((LA$Group40_45)*log2(1/(LA$Group40_45)) + 
                                       (1-(LA$Group40_45))*log2(1/(1-(LA$Group40_45))))

LA$LocalEnt35_40 <- LA$B19001_001 * ((LA$Group35_40)*log2(1/(LA$Group35_40)) + 
                                       (1-(LA$Group35_40))*log2(1/(1-(LA$Group35_40))))

LA$LocalEnt30_35 <- LA$B19001_001 * ((LA$Group30_35)*log2(1/(LA$Group30_35)) + 
                                       (1-(LA$Group30_35))*log2(1/(1-(LA$Group30_35))))

LA$LocalEnt25_30 <- LA$B19001_001 * ((LA$Group25_30)*log2(1/(LA$Group25_30)) + 
                                       (1-(LA$Group25_30))*log2(1/(1-(LA$Group25_30))))

LA$LocalEnt20_25 <- LA$B19001_001 * ((LA$Group20_25)*log2(1/(LA$Group20_25)) + 
                                       (1-(LA$Group20_25))*log2(1/(1-(LA$Group20_25))))

LA$LocalEnt15_20 <- LA$B19001_001 * ((LA$Group15_20)*log2(1/(LA$Group15_20)) + 
                                       (1-(LA$Group15_20))*log2(1/(1-(LA$Group15_20))))

LA$LocalEnt10_15 <- LA$B19001_001 * ((LA$Group10_15)*log2(1/(LA$Group10_15)) + 
                                       (1-(LA$Group10_15))*log2(1/(1-(LA$Group10_15))))

LA$LocalEnt10 <- LA$B19001_001 * ((LA$Group10)*log2(1/(LA$Group10)) + 
                                    (1-(LA$Group10))*log2(1/(1-(LA$Group10))))

LA$ReverseLocalEnt10 <- LA$B19001_001 * ((LA$ReverseGroup10)*log2(1/(LA$ReverseGroup10)) + 
                                           (1-(LA$ReverseGroup10))*log2(1/(1-(LA$ReverseGroup10))))

LA$ReverseLocalEnt10_15 <- LA$B19001_001 * ((LA$ReverseGroup10_15)*log2(1/(LA$ReverseGroup10_15)) + 
                                              (1-(LA$ReverseGroup10_15))*log2(1/(1-(LA$ReverseGroup10_15))))

LA$ReverseLocalEnt15_20 <- LA$B19001_001 * ((LA$ReverseGroup15_20)*log2(1/(LA$ReverseGroup15_20)) + 
                                              (1-(LA$ReverseGroup15_20))*log2(1/(1-(LA$ReverseGroup15_20))))

LA$ReverseLocalEnt20_25 <- LA$B19001_001 * ((LA$ReverseGroup20_25)*log2(1/(LA$ReverseGroup20_25)) + 
                                              (1-(LA$ReverseGroup20_25))*log2(1/(1-(LA$ReverseGroup20_25))))

LA$ReverseLocalEnt25_30 <- LA$B19001_001 * ((LA$ReverseGroup25_30)*log2(1/(LA$ReverseGroup25_30)) + 
                                              (1-(LA$ReverseGroup25_30))*log2(1/(1-(LA$ReverseGroup25_30))))

LA$ReverseLocalEnt30_35 <- LA$B19001_001 * ((LA$ReverseGroup30_35)*log2(1/(LA$ReverseGroup30_35)) + 
                                              (1-(LA$ReverseGroup30_35))*log2(1/(1-(LA$ReverseGroup30_35))))


#HA stuff Total


LATOTALS <- LA %>%
  summarise(MSAB19001_001 = sum(LA$B19001_001), MSAB19001_002 = sum(LA$B19001_002), MSAB19001_003 = sum(LA$B19001_003), MSAB19001_004 = sum(LA$B19001_004),
            MSAB19001_005 = sum(LA$B19001_005), MSAB19001_006 = sum(LA$B19001_006), MSAB19001_007 = sum(LA$B19001_007),
            MSAB19001_008 = sum(LA$B19001_008), MSAB19001_009 = sum(LA$B19001_009), MSAB19001_010 = sum(LA$B19001_010),
            MSAB19001_011 = sum(LA$B19001_011), MSAB19001_012 = sum(LA$B19001_012), MSAB19001_013 = sum(LA$B19001_013),
            MSAB19001_014 = sum(LA$B19001_014), MSAB19001_015 = sum(LA$B19001_015), MSAB19001_016 = sum(LA$B19001_016),
            MSAB19001_017 = sum(LA$B19001_017))


LATOTALS$MSAGroup200 <- (LATOTALS$MSAB19001_017/LATOTALS$MSAB19001_001)
LATOTALS$MSAGroup150_200 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup125_150 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup100_125 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup75_100 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup60_75 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup50_60 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup45_50 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup40_45 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup35_40 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup30_35 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup25_30 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_006)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup20_25 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_005)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup15_20 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_004)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup10_15 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_003)/LATOTALS$MSAB19001_001;
LATOTALS$MSAGroup10 <- (LATOTALS$MSAB19001_017 + LATOTALS$MSAB19001_016 + LATOTALS$MSAB19001_015 + LATOTALS$MSAB19001_014 + LATOTALS$MSAB19001_013 + LATOTALS$MSAB19001_012 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_002)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup10 <- (LATOTALS$MSAB19001_002)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup10_15 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup15_20 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup20_25 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup25_30 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup30_35 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup35_40 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_008)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup40_45 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_009)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup45_50 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_010)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup50_60 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_011)/LATOTALS$MSAB19001_001;
LATOTALS$ReverseMSAGroup60_75 <- (LATOTALS$MSAB19001_002 + LATOTALS$MSAB19001_003 + LATOTALS$MSAB19001_004 + LATOTALS$MSAB19001_005 + LATOTALS$MSAB19001_006 + LATOTALS$MSAB19001_007 + LATOTALS$MSAB19001_008 + LATOTALS$MSAB19001_009 + LATOTALS$MSAB19001_010 + LATOTALS$MSAB19001_011 + LATOTALS$MSAB19001_012)/LATOTALS$MSAB19001_001;

LATOTALS$TotalEnt200 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup200)*log2(1/(LATOTALS$MSAGroup200)) + 
                                                    (1-(LATOTALS$MSAGroup200))*log2(1/(1-(LATOTALS$MSAGroup200))))

LATOTALS$TotalEnt150_200 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup150_200)*log2(1/(LATOTALS$MSAGroup150_200)) + 
                                                        (1-(LATOTALS$MSAGroup150_200))*log2(1/(1-(LATOTALS$MSAGroup150_200))))

LATOTALS$TotalEnt125_150 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup125_150)*log2(1/(LATOTALS$MSAGroup125_150)) + 
                                                        (1-(LATOTALS$MSAGroup125_150))*log2(1/(1-(LATOTALS$MSAGroup125_150))))

LATOTALS$TotalEnt100_125 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup100_125)*log2(1/(LATOTALS$MSAGroup100_125)) + 
                                                        (1-(LATOTALS$MSAGroup100_125))*log2(1/(1-(LATOTALS$MSAGroup100_125))))

LATOTALS$TotalEnt75_100 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup75_100)*log2(1/(LATOTALS$MSAGroup75_100)) + 
                                                       (1-(LATOTALS$MSAGroup75_100))*log2(1/(1-(LATOTALS$MSAGroup75_100))))

LATOTALS$TotalEnt60_75 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup60_75)*log2(1/(LATOTALS$MSAGroup60_75)) + 
                                                      (1-(LATOTALS$MSAGroup60_75))*log2(1/(1-(LATOTALS$MSAGroup60_75))))

LATOTALS$TotalEnt50_60 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup50_60)*log2(1/(LATOTALS$MSAGroup50_60)) + 
                                                      (1-(LATOTALS$MSAGroup50_60))*log2(1/(1-(LATOTALS$MSAGroup50_60))))

LATOTALS$TotalEnt45_50 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup45_50)*log2(1/(LATOTALS$MSAGroup45_50)) + 
                                                      (1-(LATOTALS$MSAGroup45_50))*log2(1/(1-(LATOTALS$MSAGroup45_50))))

LATOTALS$TotalEnt40_45 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup40_45)*log2(1/(LATOTALS$MSAGroup40_45)) + 
                                                      (1-(LATOTALS$MSAGroup40_45))*log2(1/(1-(LATOTALS$MSAGroup40_45))))

LATOTALS$TotalEnt35_40 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup35_40)*log2(1/(LATOTALS$MSAGroup35_40)) + 
                                                      (1-(LATOTALS$MSAGroup35_40))*log2(1/(1-(LATOTALS$MSAGroup35_40))))

LATOTALS$TotalEnt30_35 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup30_35)*log2(1/(LATOTALS$MSAGroup30_35)) + 
                                                      (1-(LATOTALS$MSAGroup30_35))*log2(1/(1-(LATOTALS$MSAGroup30_35))))

LATOTALS$TotalEnt25_30 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup25_30)*log2(1/(LATOTALS$MSAGroup25_30)) + 
                                                      (1-(LATOTALS$MSAGroup25_30))*log2(1/(1-(LATOTALS$MSAGroup25_30))))

LATOTALS$TotalEnt20_25 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup20_25)*log2(1/(LATOTALS$MSAGroup20_25)) + 
                                                      (1-(LATOTALS$MSAGroup20_25))*log2(1/(1-(LATOTALS$MSAGroup20_25))))

LATOTALS$TotalEnt15_20 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup15_20)*log2(1/(LATOTALS$MSAGroup15_20)) + 
                                                      (1-(LATOTALS$MSAGroup15_20))*log2(1/(1-(LATOTALS$MSAGroup15_20))))

LATOTALS$TotalEnt10_15 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup10_15)*log2(1/(LATOTALS$MSAGroup10_15)) + 
                                                      (1-(LATOTALS$MSAGroup10_15))*log2(1/(1-(LATOTALS$MSAGroup10_15))))

LATOTALS$TotalEnt10 <- LATOTALS$MSAB19001_001 * ((LATOTALS$MSAGroup10)*log2(1/(LATOTALS$MSAGroup10)) + 
                                                   (1-(LATOTALS$MSAGroup10))*log2(1/(1-(LATOTALS$MSAGroup10))))

LATOTALS$ReverseTotalEnt10 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup10)*log2(1/(LATOTALS$ReverseMSAGroup10)) + 
                                                          (1-(LATOTALS$ReverseMSAGroup10))*log2(1/(1-(LATOTALS$ReverseMSAGroup10))))

LATOTALS$ReverseTotalEnt10_15 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup10_15)*log2(1/(LATOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(LATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(LATOTALS$ReverseMSAGroup10_15))))

LATOTALS$ReverseTotalEnt15_20 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup15_20)*log2(1/(LATOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(LATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(LATOTALS$ReverseMSAGroup15_20))))

LATOTALS$ReverseTotalEnt20_25 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup20_25)*log2(1/(LATOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(LATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(LATOTALS$ReverseMSAGroup20_25))))

LATOTALS$ReverseTotalEnt25_30 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup25_30)*log2(1/(LATOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(LATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(LATOTALS$ReverseMSAGroup25_30))))

LATOTALS$ReverseTotalEnt30_35 <- LATOTALS$MSAB19001_001 * ((LATOTALS$ReverseMSAGroup30_35)*log2(1/(LATOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(LATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(LATOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
LATOTALS$E200 <- ((LATOTALS$MSAGroup200)*log2(1/(LATOTALS$MSAGroup200)) + (1-(LATOTALS$MSAGroup200))*log2(1/(1-(LATOTALS$MSAGroup200))))
LATOTALS$E150_200 <- ((LATOTALS$MSAGroup150_200)*log2(1/(LATOTALS$MSAGroup150_200)) + (1-(LATOTALS$MSAGroup150_200))*log2(1/(1-(LATOTALS$MSAGroup150_200))))
LATOTALS$E125_150 <- ((LATOTALS$MSAGroup125_150)*log2(1/(LATOTALS$MSAGroup125_150)) + (1-(LATOTALS$MSAGroup125_150))*log2(1/(1-(LATOTALS$MSAGroup125_150))))
LATOTALS$E100_125 <- ((LATOTALS$MSAGroup100_125)*log2(1/(LATOTALS$MSAGroup100_125)) + (1-(LATOTALS$MSAGroup100_125))*log2(1/(1-(LATOTALS$MSAGroup100_125))))
LATOTALS$E75_100 <- ((LATOTALS$MSAGroup75_100)*log2(1/(LATOTALS$MSAGroup75_100)) + (1-(LATOTALS$MSAGroup75_100))*log2(1/(1-(LATOTALS$MSAGroup75_100))))
LATOTALS$E60_75 <- ((LATOTALS$MSAGroup60_75)*log2(1/(LATOTALS$MSAGroup60_75)) + (1-(LATOTALS$MSAGroup60_75))*log2(1/(1-(LATOTALS$MSAGroup60_75))))
LATOTALS$E50_60 <- ((LATOTALS$MSAGroup50_60)*log2(1/(LATOTALS$MSAGroup50_60)) + (1-(LATOTALS$MSAGroup50_60))*log2(1/(1-(LATOTALS$MSAGroup50_60))))
LATOTALS$E50_60 <- ((LATOTALS$MSAGroup50_60)*log2(1/(LATOTALS$MSAGroup50_60)) + (1-(LATOTALS$MSAGroup50_60))*log2(1/(1-(LATOTALS$MSAGroup50_60))))
LATOTALS$E45_50 <- ((LATOTALS$MSAGroup45_50)*log2(1/(LATOTALS$MSAGroup45_50)) + (1-(LATOTALS$MSAGroup45_50))*log2(1/(1-(LATOTALS$MSAGroup45_50))))
LATOTALS$E40_45 <- ((LATOTALS$MSAGroup40_45)*log2(1/(LATOTALS$MSAGroup40_45)) + (1-(LATOTALS$MSAGroup40_45))*log2(1/(1-(LATOTALS$MSAGroup40_45))))
LATOTALS$E35_40 <- ((LATOTALS$MSAGroup35_40)*log2(1/(LATOTALS$MSAGroup35_40)) + (1-(LATOTALS$MSAGroup35_40))*log2(1/(1-(LATOTALS$MSAGroup35_40))))
LATOTALS$E30_35 <- ((LATOTALS$MSAGroup30_35)*log2(1/(LATOTALS$MSAGroup30_35)) + (1-(LATOTALS$MSAGroup30_35))*log2(1/(1-(LATOTALS$MSAGroup30_35))))
LATOTALS$E25_30 <- ((LATOTALS$MSAGroup25_30)*log2(1/(LATOTALS$MSAGroup25_30)) + (1-(LATOTALS$MSAGroup25_30))*log2(1/(1-(LATOTALS$MSAGroup25_30))))
LATOTALS$E20_25 <- ((LATOTALS$MSAGroup20_25)*log2(1/(LATOTALS$MSAGroup20_25)) + (1-(LATOTALS$MSAGroup20_25))*log2(1/(1-(LATOTALS$MSAGroup20_25))))
LATOTALS$E15_20 <- ((LATOTALS$MSAGroup15_20)*log2(1/(LATOTALS$MSAGroup15_20)) + (1-(LATOTALS$MSAGroup15_20))*log2(1/(1-(LATOTALS$MSAGroup15_20))))
LATOTALS$E10_15 <- ((LATOTALS$MSAGroup10_15)*log2(1/(LATOTALS$MSAGroup10_15)) + (1-(LATOTALS$MSAGroup10_15))*log2(1/(1-(LATOTALS$MSAGroup10_15))))
LATOTALS$E10 <- ((LATOTALS$MSAGroup10)*log2(1/(LATOTALS$MSAGroup10)) + (1-(LATOTALS$MSAGroup10))*log2(1/(1-(LATOTALS$MSAGroup10))))
LATOTALS$ReverseE10 <- ((LATOTALS$ReverseMSAGroup10)*log2(1/(LATOTALS$ReverseMSAGroup10)) + (1-(LATOTALS$ReverseMSAGroup10))*log2(1/(1-(LATOTALS$ReverseMSAGroup10))))
LATOTALS$ReverseE10_15 <- ((LATOTALS$ReverseMSAGroup10_15)*log2(1/(LATOTALS$ReverseMSAGroup10_15)) + (1-(LATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(LATOTALS$ReverseMSAGroup10_15))))
LATOTALS$ReverseE15_20 <- ((LATOTALS$ReverseMSAGroup15_20)*log2(1/(LATOTALS$ReverseMSAGroup15_20)) + (1-(LATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(LATOTALS$ReverseMSAGroup15_20))))
LATOTALS$ReverseE20_25 <- ((LATOTALS$ReverseMSAGroup20_25)*log2(1/(LATOTALS$ReverseMSAGroup20_25)) + (1-(LATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(LATOTALS$ReverseMSAGroup20_25))))
LATOTALS$ReverseE25_30 <- ((LATOTALS$ReverseMSAGroup25_30)*log2(1/(LATOTALS$ReverseMSAGroup25_30)) + (1-(LATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(LATOTALS$ReverseMSAGroup25_30))))
LATOTALS$ReverseE30_35 <- ((LATOTALS$ReverseMSAGroup30_35)*log2(1/(LATOTALS$ReverseMSAGroup30_35)) + (1-(LATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(LATOTALS$ReverseMSAGroup30_35))))
LATOTALS$ReverseE35_40 <- ((LATOTALS$ReverseMSAGroup35_40)*log2(1/(LATOTALS$ReverseMSAGroup35_40)) + (1-(LATOTALS$ReverseMSAGroup35_40))*log2(1/(1-(LATOTALS$ReverseMSAGroup35_40))))


LA$Section200 <- LA$LocalEnt200 / LATOTALS$TotalEnt200
LA$Section150_200 <- LA$LocalEnt150_200 / LATOTALS$TotalEnt150_200
LA$Section125_150 <- LA$LocalEnt125_150 / LATOTALS$TotalEnt125_150
LA$Section100_125 <- LA$LocalEnt100_125 / LATOTALS$TotalEnt100_125
LA$Section75_100 <- LA$LocalEnt75_100 / LATOTALS$TotalEnt75_100
LA$Section60_75 <- LA$LocalEnt60_75 / LATOTALS$TotalEnt60_75
LA$Section50_60 <- LA$LocalEnt50_60 / LATOTALS$TotalEnt50_60
LA$Section45_50 <- LA$LocalEnt45_50 / LATOTALS$TotalEnt45_50
LA$Section40_45 <- LA$LocalEnt40_45 / LATOTALS$TotalEnt40_45
LA$Section35_40 <- LA$LocalEnt35_40 / LATOTALS$TotalEnt35_40
LA$Section30_35 <- LA$LocalEnt30_35 / LATOTALS$TotalEnt30_35
LA$Section25_30 <- LA$LocalEnt25_30 / LATOTALS$TotalEnt25_30
LA$Section20_25 <- LA$LocalEnt20_25 / LATOTALS$TotalEnt20_25
LA$Section15_20 <- LA$LocalEnt15_20 / LATOTALS$TotalEnt15_20
LA$Section10_15 <- LA$LocalEnt10_15 / LATOTALS$TotalEnt10_15
LA$Section10 <- LA$LocalEnt10 / LATOTALS$TotalEnt10
LA$ReverseSection10 <- LA$ReverseLocalEnt10 / LATOTALS$ReverseTotalEnt10
LA$ReverseSection10_15 <- LA$ReverseLocalEnt10_15 / LATOTALS$ReverseTotalEnt10_15
LA$ReverseSection15_20 <- LA$ReverseLocalEnt15_20 / LATOTALS$ReverseTotalEnt15_20
LA$ReverseSection20_25 <- LA$ReverseLocalEnt20_25 / LATOTALS$ReverseTotalEnt20_25
LA$ReverseSection25_30 <- LA$ReverseLocalEnt25_30 / LATOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
LA[is.na(LA)] <- 0

LATOTALS$Percent200 <- 1 - sum(LA$Section200)
LATOTALS$Percent150_200 <- 1 - sum(LA$Section150_200)
LATOTALS$Percent125_150 <- 1 - sum(LA$Section125_150)
LATOTALS$Percent100_125 <- 1 - sum(LA$Section100_125)
LATOTALS$Percent75_100 <- 1 - sum(LA$Section75_100)
LATOTALS$Percent60_75 <- 1 - sum(LA$Section60_75)
LATOTALS$Percent50_60 <- 1 - sum(LA$Section50_60)
LATOTALS$Percent45_50 <- 1 - sum(LA$Section45_50)
LATOTALS$Percent40_45 <- 1 - sum(LA$Section40_45)
LATOTALS$Percent35_40 <- 1 - sum(LA$Section35_40)
LATOTALS$Percent30_35 <- 1 - sum(LA$Section30_35)
LATOTALS$Percent25_30 <- 1 - sum(LA$Section25_30)
LATOTALS$Percent20_25 <- 1 - sum(LA$Section20_25)
LATOTALS$Percent15_20 <- 1 - sum(LA$Section15_20)
LATOTALS$Percent10_15 <- 1 - sum(LA$Section10_15)
LATOTALS$Percent10 <- 1 - sum(LA$Section10)
LATOTALS$ReversePercent10 <- 1 - sum(LA$ReverseSection10)
LATOTALS$ReversePercent10_15 <- 1 - sum(LA$ReverseSection10_15)
LATOTALS$ReversePercent15_20 <- 1 - sum(LA$ReverseSection15_20)
LATOTALS$ReversePercent20_25 <- 1 - sum(LA$ReverseSection20_25)
LATOTALS$ReversePercent25_30 <- 1 - sum(LA$ReverseSection25_30)


LATOTALS$Weight200 <- LATOTALS$E200 * LATOTALS$Percent200
LATOTALS$Weight150_200 <- (LATOTALS$E150_200 * LATOTALS$Percent150_200)
LATOTALS$Weight125_150 <- (LATOTALS$E125_150 * LATOTALS$Percent125_150) 
LATOTALS$Weight100_125 <- (LATOTALS$E100_125 * LATOTALS$Percent100_125) 
LATOTALS$Weight75_100 <- (LATOTALS$E75_100 * LATOTALS$Percent75_100)
LATOTALS$Weight60_75 <- (LATOTALS$E60_75 * LATOTALS$Percent60_75) 
LATOTALS$Weight50_60 <- (LATOTALS$E50_60 * LATOTALS$Percent50_60) 
LATOTALS$Weight45_50 <- (LATOTALS$E45_50 * LATOTALS$Percent45_50)
LATOTALS$Weight40_45 <- (LATOTALS$E40_45 * LATOTALS$Percent40_45) 
LATOTALS$Weight35_40 <- (LATOTALS$E35_40 * LATOTALS$Percent35_40) 
LATOTALS$Weight30_35 <- (LATOTALS$E30_35 * LATOTALS$Percent30_35)
LATOTALS$Weight25_30 <- (LATOTALS$E25_30 * LATOTALS$Percent25_30) 
LATOTALS$Weight20_25 <- (LATOTALS$E20_25 * LATOTALS$Percent20_25)
LATOTALS$Weight15_20 <- (LATOTALS$E15_20 * LATOTALS$Percent15_20) 
LATOTALS$Weight10_15 <- (LATOTALS$E10_15 * LATOTALS$Percent10_15) 
LATOTALS$Weight10 <- (LATOTALS$E10 * LATOTALS$Percent10) 
LATOTALS$ReverseWeight10 <- (LATOTALS$ReverseE10 * LATOTALS$ReversePercent10)
LATOTALS$ReverseWeight10_15 <- (LATOTALS$ReverseE10_15 * LATOTALS$ReversePercent10_15)
LATOTALS$ReverseWeight15_20 <- (LATOTALS$ReverseE15_20 * LATOTALS$ReversePercent15_20)
LATOTALS$ReverseWeight20_25 <- (LATOTALS$ReverseE20_25 * LATOTALS$ReversePercent20_25)
LATOTALS$ReverseWeight25_30 <- (LATOTALS$ReverseE25_30 * LATOTALS$ReversePercent25_30)



#trying to recreate the HA stuff I did thru SAS and R
#local

LV$Group200 <- (LV$B19001_017/LV$B19001_001)
LV$Group150_200 <- (LV$B19001_017 + LV$B19001_016)/LV$B19001_001;
LV$Group125_150 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015)/LV$B19001_001;
LV$Group100_125 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014)/LV$B19001_001;
LV$Group75_100 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013)/LV$B19001_001;
LV$Group60_75 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012)/LV$B19001_001;
LV$Group50_60 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011)/LV$B19001_001;
LV$Group45_50 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010)/LV$B19001_001;
LV$Group40_45 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009)/LV$B19001_001;
LV$Group35_40 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008)/LV$B19001_001;
LV$Group30_35 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007)/LV$B19001_001;
LV$Group25_30 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007 + LV$B19001_006)/LV$B19001_001;
LV$Group20_25 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007 + LV$B19001_006 + LV$B19001_005)/LV$B19001_001;
LV$Group15_20 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007 + LV$B19001_006 + LV$B19001_005 + LV$B19001_004)/LV$B19001_001;
LV$Group10_15 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007 + LV$B19001_006 + LV$B19001_005 + LV$B19001_004 + LV$B19001_003)/LV$B19001_001;
LV$Group10 <- (LV$B19001_017 + LV$B19001_016 + LV$B19001_015 + LV$B19001_014 + LV$B19001_013 + LV$B19001_012 + LV$B19001_011 + LV$B19001_010 + LV$B19001_009 + LV$B19001_008 + LV$B19001_007 + LV$B19001_006 + LV$B19001_005 + LV$B19001_004 + LV$B19001_003 + LV$B19001_002)/LV$B19001_001;
LV$ReverseGroup10 <- (LV$B19001_002)/LV$B19001_001;
LV$ReverseGroup10_15 <- (LV$B19001_002 + LV$B19001_003)/LV$B19001_001;
LV$ReverseGroup15_20 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004)/LV$B19001_001;
LV$ReverseGroup20_25 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005)/LV$B19001_001;
LV$ReverseGroup25_30 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006)/LV$B19001_001;
LV$ReverseGroup30_35 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007)/LV$B19001_001;
LV$ReverseGroup35_40 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007 + LV$B19001_008)/LV$B19001_001;
LV$ReverseGroup40_45 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007 + LV$B19001_008 + LV$B19001_009)/LV$B19001_001;
LV$ReverseGroup45_50 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007 + LV$B19001_008 + LV$B19001_009 + LV$B19001_010)/LV$B19001_001;
LV$ReverseGroup50_60 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007 + LV$B19001_008 + LV$B19001_009 + LV$B19001_010 + LV$B19001_011)/LV$B19001_001;
LV$ReverseGroup60_75 <- (LV$B19001_002 + LV$B19001_003 + LV$B19001_004 + LV$B19001_005 + LV$B19001_006 + LV$B19001_007 + LV$B19001_008 + LV$B19001_009 + LV$B19001_010 + LV$B19001_011 + LV$B19001_012)/LV$B19001_001;

LV$LocalEnt200 <- LV$B19001_001 * ((LV$Group200)*log2(1/(LV$Group200)) + 
                                     (1-(LV$Group200))*log2(1/(1-(LV$Group200))))

LV$LocalEnt150_200 <- LV$B19001_001 * ((LV$Group150_200)*log2(1/(LV$Group150_200)) + 
                                         (1-(LV$Group150_200))*log2(1/(1-(LV$Group150_200))))

LV$LocalEnt125_150 <- LV$B19001_001 * ((LV$Group125_150)*log2(1/(LV$Group125_150)) + 
                                         (1-(LV$Group125_150))*log2(1/(1-(LV$Group125_150))))

LV$LocalEnt100_125 <- LV$B19001_001 * ((LV$Group100_125)*log2(1/(LV$Group100_125)) + 
                                         (1-(LV$Group100_125))*log2(1/(1-(LV$Group100_125))))

LV$LocalEnt75_100 <- LV$B19001_001 * ((LV$Group75_100)*log2(1/(LV$Group75_100)) + 
                                        (1-(LV$Group75_100))*log2(1/(1-(LV$Group75_100))))

LV$LocalEnt60_75 <- LV$B19001_001 * ((LV$Group60_75)*log2(1/(LV$Group60_75)) + 
                                       (1-(LV$Group60_75))*log2(1/(1-(LV$Group60_75))))

LV$LocalEnt50_60 <- LV$B19001_001 * ((LV$Group50_60)*log2(1/(LV$Group50_60)) + 
                                       (1-(LV$Group50_60))*log2(1/(1-(LV$Group50_60))))

LV$LocalEnt45_50 <- LV$B19001_001 * ((LV$Group45_50)*log2(1/(LV$Group45_50)) + 
                                       (1-(LV$Group45_50))*log2(1/(1-(LV$Group45_50))))

LV$LocalEnt40_45 <- LV$B19001_001 * ((LV$Group40_45)*log2(1/(LV$Group40_45)) + 
                                       (1-(LV$Group40_45))*log2(1/(1-(LV$Group40_45))))

LV$LocalEnt35_40 <- LV$B19001_001 * ((LV$Group35_40)*log2(1/(LV$Group35_40)) + 
                                       (1-(LV$Group35_40))*log2(1/(1-(LV$Group35_40))))

LV$LocalEnt30_35 <- LV$B19001_001 * ((LV$Group30_35)*log2(1/(LV$Group30_35)) + 
                                       (1-(LV$Group30_35))*log2(1/(1-(LV$Group30_35))))

LV$LocalEnt25_30 <- LV$B19001_001 * ((LV$Group25_30)*log2(1/(LV$Group25_30)) + 
                                       (1-(LV$Group25_30))*log2(1/(1-(LV$Group25_30))))

LV$LocalEnt20_25 <- LV$B19001_001 * ((LV$Group20_25)*log2(1/(LV$Group20_25)) + 
                                       (1-(LV$Group20_25))*log2(1/(1-(LV$Group20_25))))

LV$LocalEnt15_20 <- LV$B19001_001 * ((LV$Group15_20)*log2(1/(LV$Group15_20)) + 
                                       (1-(LV$Group15_20))*log2(1/(1-(LV$Group15_20))))

LV$LocalEnt10_15 <- LV$B19001_001 * ((LV$Group10_15)*log2(1/(LV$Group10_15)) + 
                                       (1-(LV$Group10_15))*log2(1/(1-(LV$Group10_15))))

LV$LocalEnt10 <- LV$B19001_001 * ((LV$Group10)*log2(1/(LV$Group10)) + 
                                    (1-(LV$Group10))*log2(1/(1-(LV$Group10))))

LV$ReverseLocalEnt10 <- LV$B19001_001 * ((LV$ReverseGroup10)*log2(1/(LV$ReverseGroup10)) + 
                                           (1-(LV$ReverseGroup10))*log2(1/(1-(LV$ReverseGroup10))))

LV$ReverseLocalEnt10_15 <- LV$B19001_001 * ((LV$ReverseGroup10_15)*log2(1/(LV$ReverseGroup10_15)) + 
                                              (1-(LV$ReverseGroup10_15))*log2(1/(1-(LV$ReverseGroup10_15))))

LV$ReverseLocalEnt15_20 <- LV$B19001_001 * ((LV$ReverseGroup15_20)*log2(1/(LV$ReverseGroup15_20)) + 
                                              (1-(LV$ReverseGroup15_20))*log2(1/(1-(LV$ReverseGroup15_20))))

LV$ReverseLocalEnt20_25 <- LV$B19001_001 * ((LV$ReverseGroup20_25)*log2(1/(LV$ReverseGroup20_25)) + 
                                              (1-(LV$ReverseGroup20_25))*log2(1/(1-(LV$ReverseGroup20_25))))

LV$ReverseLocalEnt25_30 <- LV$B19001_001 * ((LV$ReverseGroup25_30)*log2(1/(LV$ReverseGroup25_30)) + 
                                              (1-(LV$ReverseGroup25_30))*log2(1/(1-(LV$ReverseGroup25_30))))

LV$ReverseLocalEnt30_35 <- LV$B19001_001 * ((LV$ReverseGroup30_35)*log2(1/(LV$ReverseGroup30_35)) + 
                                              (1-(LV$ReverseGroup30_35))*log2(1/(1-(LV$ReverseGroup30_35))))


#HA stuff Total


LVTOTALS <- LV %>%
  summarise(MSAB19001_001 = sum(LV$B19001_001), MSAB19001_002 = sum(LV$B19001_002), MSAB19001_003 = sum(LV$B19001_003), MSAB19001_004 = sum(LV$B19001_004),
            MSAB19001_005 = sum(LV$B19001_005), MSAB19001_006 = sum(LV$B19001_006), MSAB19001_007 = sum(LV$B19001_007),
            MSAB19001_008 = sum(LV$B19001_008), MSAB19001_009 = sum(LV$B19001_009), MSAB19001_010 = sum(LV$B19001_010),
            MSAB19001_011 = sum(LV$B19001_011), MSAB19001_012 = sum(LV$B19001_012), MSAB19001_013 = sum(LV$B19001_013),
            MSAB19001_014 = sum(LV$B19001_014), MSAB19001_015 = sum(LV$B19001_015), MSAB19001_016 = sum(LV$B19001_016),
            MSAB19001_017 = sum(LV$B19001_017))


LVTOTALS$MSAGroup200 <- (LVTOTALS$MSAB19001_017/LVTOTALS$MSAB19001_001)
LVTOTALS$MSAGroup150_200 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup125_150 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup100_125 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup75_100 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup60_75 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup50_60 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup45_50 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup40_45 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup35_40 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup30_35 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup25_30 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_006)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup20_25 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_005)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup15_20 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_004)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup10_15 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_003)/LVTOTALS$MSAB19001_001;
LVTOTALS$MSAGroup10 <- (LVTOTALS$MSAB19001_017 + LVTOTALS$MSAB19001_016 + LVTOTALS$MSAB19001_015 + LVTOTALS$MSAB19001_014 + LVTOTALS$MSAB19001_013 + LVTOTALS$MSAB19001_012 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_002)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup10 <- (LVTOTALS$MSAB19001_002)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup10_15 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup15_20 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup20_25 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup25_30 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup30_35 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup35_40 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_008)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup40_45 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_009)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup45_50 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_010)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup50_60 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_011)/LVTOTALS$MSAB19001_001;
LVTOTALS$ReverseMSAGroup60_75 <- (LVTOTALS$MSAB19001_002 + LVTOTALS$MSAB19001_003 + LVTOTALS$MSAB19001_004 + LVTOTALS$MSAB19001_005 + LVTOTALS$MSAB19001_006 + LVTOTALS$MSAB19001_007 + LVTOTALS$MSAB19001_008 + LVTOTALS$MSAB19001_009 + LVTOTALS$MSAB19001_010 + LVTOTALS$MSAB19001_011 + LVTOTALS$MSAB19001_012)/LVTOTALS$MSAB19001_001;

LVTOTALS$TotalEnt200 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup200)*log2(1/(LVTOTALS$MSAGroup200)) + 
                                                    (1-(LVTOTALS$MSAGroup200))*log2(1/(1-(LVTOTALS$MSAGroup200))))

LVTOTALS$TotalEnt150_200 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup150_200)*log2(1/(LVTOTALS$MSAGroup150_200)) + 
                                                        (1-(LVTOTALS$MSAGroup150_200))*log2(1/(1-(LVTOTALS$MSAGroup150_200))))

LVTOTALS$TotalEnt125_150 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup125_150)*log2(1/(LVTOTALS$MSAGroup125_150)) + 
                                                        (1-(LVTOTALS$MSAGroup125_150))*log2(1/(1-(LVTOTALS$MSAGroup125_150))))

LVTOTALS$TotalEnt100_125 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup100_125)*log2(1/(LVTOTALS$MSAGroup100_125)) + 
                                                        (1-(LVTOTALS$MSAGroup100_125))*log2(1/(1-(LVTOTALS$MSAGroup100_125))))

LVTOTALS$TotalEnt75_100 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup75_100)*log2(1/(LVTOTALS$MSAGroup75_100)) + 
                                                       (1-(LVTOTALS$MSAGroup75_100))*log2(1/(1-(LVTOTALS$MSAGroup75_100))))

LVTOTALS$TotalEnt60_75 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup60_75)*log2(1/(LVTOTALS$MSAGroup60_75)) + 
                                                      (1-(LVTOTALS$MSAGroup60_75))*log2(1/(1-(LVTOTALS$MSAGroup60_75))))

LVTOTALS$TotalEnt50_60 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup50_60)*log2(1/(LVTOTALS$MSAGroup50_60)) + 
                                                      (1-(LVTOTALS$MSAGroup50_60))*log2(1/(1-(LVTOTALS$MSAGroup50_60))))

LVTOTALS$TotalEnt45_50 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup45_50)*log2(1/(LVTOTALS$MSAGroup45_50)) + 
                                                      (1-(LVTOTALS$MSAGroup45_50))*log2(1/(1-(LVTOTALS$MSAGroup45_50))))

LVTOTALS$TotalEnt40_45 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup40_45)*log2(1/(LVTOTALS$MSAGroup40_45)) + 
                                                      (1-(LVTOTALS$MSAGroup40_45))*log2(1/(1-(LVTOTALS$MSAGroup40_45))))

LVTOTALS$TotalEnt35_40 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup35_40)*log2(1/(LVTOTALS$MSAGroup35_40)) + 
                                                      (1-(LVTOTALS$MSAGroup35_40))*log2(1/(1-(LVTOTALS$MSAGroup35_40))))

LVTOTALS$TotalEnt30_35 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup30_35)*log2(1/(LVTOTALS$MSAGroup30_35)) + 
                                                      (1-(LVTOTALS$MSAGroup30_35))*log2(1/(1-(LVTOTALS$MSAGroup30_35))))

LVTOTALS$TotalEnt25_30 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup25_30)*log2(1/(LVTOTALS$MSAGroup25_30)) + 
                                                      (1-(LVTOTALS$MSAGroup25_30))*log2(1/(1-(LVTOTALS$MSAGroup25_30))))

LVTOTALS$TotalEnt20_25 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup20_25)*log2(1/(LVTOTALS$MSAGroup20_25)) + 
                                                      (1-(LVTOTALS$MSAGroup20_25))*log2(1/(1-(LVTOTALS$MSAGroup20_25))))

LVTOTALS$TotalEnt15_20 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup15_20)*log2(1/(LVTOTALS$MSAGroup15_20)) + 
                                                      (1-(LVTOTALS$MSAGroup15_20))*log2(1/(1-(LVTOTALS$MSAGroup15_20))))

LVTOTALS$TotalEnt10_15 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup10_15)*log2(1/(LVTOTALS$MSAGroup10_15)) + 
                                                      (1-(LVTOTALS$MSAGroup10_15))*log2(1/(1-(LVTOTALS$MSAGroup10_15))))

LVTOTALS$TotalEnt10 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$MSAGroup10)*log2(1/(LVTOTALS$MSAGroup10)) + 
                                                   (1-(LVTOTALS$MSAGroup10))*log2(1/(1-(LVTOTALS$MSAGroup10))))

LVTOTALS$ReverseTotalEnt10 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup10)*log2(1/(LVTOTALS$ReverseMSAGroup10)) + 
                                                          (1-(LVTOTALS$ReverseMSAGroup10))*log2(1/(1-(LVTOTALS$ReverseMSAGroup10))))

LVTOTALS$ReverseTotalEnt10_15 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup10_15)*log2(1/(LVTOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(LVTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(LVTOTALS$ReverseMSAGroup10_15))))

LVTOTALS$ReverseTotalEnt15_20 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup15_20)*log2(1/(LVTOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(LVTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(LVTOTALS$ReverseMSAGroup15_20))))

LVTOTALS$ReverseTotalEnt20_25 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup20_25)*log2(1/(LVTOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(LVTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(LVTOTALS$ReverseMSAGroup20_25))))

LVTOTALS$ReverseTotalEnt25_30 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup25_30)*log2(1/(LVTOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(LVTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(LVTOTALS$ReverseMSAGroup25_30))))

LVTOTALS$ReverseTotalEnt30_35 <- LVTOTALS$MSAB19001_001 * ((LVTOTALS$ReverseMSAGroup30_35)*log2(1/(LVTOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(LVTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(LVTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
LVTOTALS$E200 <- ((LVTOTALS$MSAGroup200)*log2(1/(LVTOTALS$MSAGroup200)) + (1-(LVTOTALS$MSAGroup200))*log2(1/(1-(LVTOTALS$MSAGroup200))))
LVTOTALS$E150_200 <- ((LVTOTALS$MSAGroup150_200)*log2(1/(LVTOTALS$MSAGroup150_200)) + (1-(LVTOTALS$MSAGroup150_200))*log2(1/(1-(LVTOTALS$MSAGroup150_200))))
LVTOTALS$E125_150 <- ((LVTOTALS$MSAGroup125_150)*log2(1/(LVTOTALS$MSAGroup125_150)) + (1-(LVTOTALS$MSAGroup125_150))*log2(1/(1-(LVTOTALS$MSAGroup125_150))))
LVTOTALS$E100_125 <- ((LVTOTALS$MSAGroup100_125)*log2(1/(LVTOTALS$MSAGroup100_125)) + (1-(LVTOTALS$MSAGroup100_125))*log2(1/(1-(LVTOTALS$MSAGroup100_125))))
LVTOTALS$E75_100 <- ((LVTOTALS$MSAGroup75_100)*log2(1/(LVTOTALS$MSAGroup75_100)) + (1-(LVTOTALS$MSAGroup75_100))*log2(1/(1-(LVTOTALS$MSAGroup75_100))))
LVTOTALS$E60_75 <- ((LVTOTALS$MSAGroup60_75)*log2(1/(LVTOTALS$MSAGroup60_75)) + (1-(LVTOTALS$MSAGroup60_75))*log2(1/(1-(LVTOTALS$MSAGroup60_75))))
LVTOTALS$E50_60 <- ((LVTOTALS$MSAGroup50_60)*log2(1/(LVTOTALS$MSAGroup50_60)) + (1-(LVTOTALS$MSAGroup50_60))*log2(1/(1-(LVTOTALS$MSAGroup50_60))))
LVTOTALS$E50_60 <- ((LVTOTALS$MSAGroup50_60)*log2(1/(LVTOTALS$MSAGroup50_60)) + (1-(LVTOTALS$MSAGroup50_60))*log2(1/(1-(LVTOTALS$MSAGroup50_60))))
LVTOTALS$E45_50 <- ((LVTOTALS$MSAGroup45_50)*log2(1/(LVTOTALS$MSAGroup45_50)) + (1-(LVTOTALS$MSAGroup45_50))*log2(1/(1-(LVTOTALS$MSAGroup45_50))))
LVTOTALS$E40_45 <- ((LVTOTALS$MSAGroup40_45)*log2(1/(LVTOTALS$MSAGroup40_45)) + (1-(LVTOTALS$MSAGroup40_45))*log2(1/(1-(LVTOTALS$MSAGroup40_45))))
LVTOTALS$E35_40 <- ((LVTOTALS$MSAGroup35_40)*log2(1/(LVTOTALS$MSAGroup35_40)) + (1-(LVTOTALS$MSAGroup35_40))*log2(1/(1-(LVTOTALS$MSAGroup35_40))))
LVTOTALS$E30_35 <- ((LVTOTALS$MSAGroup30_35)*log2(1/(LVTOTALS$MSAGroup30_35)) + (1-(LVTOTALS$MSAGroup30_35))*log2(1/(1-(LVTOTALS$MSAGroup30_35))))
LVTOTALS$E25_30 <- ((LVTOTALS$MSAGroup25_30)*log2(1/(LVTOTALS$MSAGroup25_30)) + (1-(LVTOTALS$MSAGroup25_30))*log2(1/(1-(LVTOTALS$MSAGroup25_30))))
LVTOTALS$E20_25 <- ((LVTOTALS$MSAGroup20_25)*log2(1/(LVTOTALS$MSAGroup20_25)) + (1-(LVTOTALS$MSAGroup20_25))*log2(1/(1-(LVTOTALS$MSAGroup20_25))))
LVTOTALS$E15_20 <- ((LVTOTALS$MSAGroup15_20)*log2(1/(LVTOTALS$MSAGroup15_20)) + (1-(LVTOTALS$MSAGroup15_20))*log2(1/(1-(LVTOTALS$MSAGroup15_20))))
LVTOTALS$E10_15 <- ((LVTOTALS$MSAGroup10_15)*log2(1/(LVTOTALS$MSAGroup10_15)) + (1-(LVTOTALS$MSAGroup10_15))*log2(1/(1-(LVTOTALS$MSAGroup10_15))))
LVTOTALS$E10 <- ((LVTOTALS$MSAGroup10)*log2(1/(LVTOTALS$MSAGroup10)) + (1-(LVTOTALS$MSAGroup10))*log2(1/(1-(LVTOTALS$MSAGroup10))))
LVTOTALS$ReverseE10 <- ((LVTOTALS$ReverseMSAGroup10)*log2(1/(LVTOTALS$ReverseMSAGroup10)) + (1-(LVTOTALS$ReverseMSAGroup10))*log2(1/(1-(LVTOTALS$ReverseMSAGroup10))))
LVTOTALS$ReverseE10_15 <- ((LVTOTALS$ReverseMSAGroup10_15)*log2(1/(LVTOTALS$ReverseMSAGroup10_15)) + (1-(LVTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(LVTOTALS$ReverseMSAGroup10_15))))
LVTOTALS$ReverseE15_20 <- ((LVTOTALS$ReverseMSAGroup15_20)*log2(1/(LVTOTALS$ReverseMSAGroup15_20)) + (1-(LVTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(LVTOTALS$ReverseMSAGroup15_20))))
LVTOTALS$ReverseE20_25 <- ((LVTOTALS$ReverseMSAGroup20_25)*log2(1/(LVTOTALS$ReverseMSAGroup20_25)) + (1-(LVTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(LVTOTALS$ReverseMSAGroup20_25))))
LVTOTALS$ReverseE25_30 <- ((LVTOTALS$ReverseMSAGroup25_30)*log2(1/(LVTOTALS$ReverseMSAGroup25_30)) + (1-(LVTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(LVTOTALS$ReverseMSAGroup25_30))))
LVTOTALS$ReverseE30_35 <- ((LVTOTALS$ReverseMSAGroup30_35)*log2(1/(LVTOTALS$ReverseMSAGroup30_35)) + (1-(LVTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(LVTOTALS$ReverseMSAGroup30_35))))
LVTOTALS$ReverseE35_40 <- ((LVTOTALS$ReverseMSAGroup35_40)*log2(1/(LVTOTALS$ReverseMSAGroup35_40)) + (1-(LVTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(LVTOTALS$ReverseMSAGroup35_40))))


LV$Section200 <- LV$LocalEnt200 / LVTOTALS$TotalEnt200
LV$Section150_200 <- LV$LocalEnt150_200 / LVTOTALS$TotalEnt150_200
LV$Section125_150 <- LV$LocalEnt125_150 / LVTOTALS$TotalEnt125_150
LV$Section100_125 <- LV$LocalEnt100_125 / LVTOTALS$TotalEnt100_125
LV$Section75_100 <- LV$LocalEnt75_100 / LVTOTALS$TotalEnt75_100
LV$Section60_75 <- LV$LocalEnt60_75 / LVTOTALS$TotalEnt60_75
LV$Section50_60 <- LV$LocalEnt50_60 / LVTOTALS$TotalEnt50_60
LV$Section45_50 <- LV$LocalEnt45_50 / LVTOTALS$TotalEnt45_50
LV$Section40_45 <- LV$LocalEnt40_45 / LVTOTALS$TotalEnt40_45
LV$Section35_40 <- LV$LocalEnt35_40 / LVTOTALS$TotalEnt35_40
LV$Section30_35 <- LV$LocalEnt30_35 / LVTOTALS$TotalEnt30_35
LV$Section25_30 <- LV$LocalEnt25_30 / LVTOTALS$TotalEnt25_30
LV$Section20_25 <- LV$LocalEnt20_25 / LVTOTALS$TotalEnt20_25
LV$Section15_20 <- LV$LocalEnt15_20 / LVTOTALS$TotalEnt15_20
LV$Section10_15 <- LV$LocalEnt10_15 / LVTOTALS$TotalEnt10_15
LV$Section10 <- LV$LocalEnt10 / LVTOTALS$TotalEnt10
LV$ReverseSection10 <- LV$ReverseLocalEnt10 / LVTOTALS$ReverseTotalEnt10
LV$ReverseSection10_15 <- LV$ReverseLocalEnt10_15 / LVTOTALS$ReverseTotalEnt10_15
LV$ReverseSection15_20 <- LV$ReverseLocalEnt15_20 / LVTOTALS$ReverseTotalEnt15_20
LV$ReverseSection20_25 <- LV$ReverseLocalEnt20_25 / LVTOTALS$ReverseTotalEnt20_25
LV$ReverseSection25_30 <- LV$ReverseLocalEnt25_30 / LVTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
LV[is.na(LV)] <- 0

LVTOTALS$Percent200 <- 1 - sum(LV$Section200)
LVTOTALS$Percent150_200 <- 1 - sum(LV$Section150_200)
LVTOTALS$Percent125_150 <- 1 - sum(LV$Section125_150)
LVTOTALS$Percent100_125 <- 1 - sum(LV$Section100_125)
LVTOTALS$Percent75_100 <- 1 - sum(LV$Section75_100)
LVTOTALS$Percent60_75 <- 1 - sum(LV$Section60_75)
LVTOTALS$Percent50_60 <- 1 - sum(LV$Section50_60)
LVTOTALS$Percent45_50 <- 1 - sum(LV$Section45_50)
LVTOTALS$Percent40_45 <- 1 - sum(LV$Section40_45)
LVTOTALS$Percent35_40 <- 1 - sum(LV$Section35_40)
LVTOTALS$Percent30_35 <- 1 - sum(LV$Section30_35)
LVTOTALS$Percent25_30 <- 1 - sum(LV$Section25_30)
LVTOTALS$Percent20_25 <- 1 - sum(LV$Section20_25)
LVTOTALS$Percent15_20 <- 1 - sum(LV$Section15_20)
LVTOTALS$Percent10_15 <- 1 - sum(LV$Section10_15)
LVTOTALS$Percent10 <- 1 - sum(LV$Section10)
LVTOTALS$ReversePercent10 <- 1 - sum(LV$ReverseSection10)
LVTOTALS$ReversePercent10_15 <- 1 - sum(LV$ReverseSection10_15)
LVTOTALS$ReversePercent15_20 <- 1 - sum(LV$ReverseSection15_20)
LVTOTALS$ReversePercent20_25 <- 1 - sum(LV$ReverseSection20_25)
LVTOTALS$ReversePercent25_30 <- 1 - sum(LV$ReverseSection25_30)


LVTOTALS$Weight200 <- LVTOTALS$E200 * LVTOTALS$Percent200
LVTOTALS$Weight150_200 <- (LVTOTALS$E150_200 * LVTOTALS$Percent150_200)
LVTOTALS$Weight125_150 <- (LVTOTALS$E125_150 * LVTOTALS$Percent125_150) 
LVTOTALS$Weight100_125 <- (LVTOTALS$E100_125 * LVTOTALS$Percent100_125) 
LVTOTALS$Weight75_100 <- (LVTOTALS$E75_100 * LVTOTALS$Percent75_100)
LVTOTALS$Weight60_75 <- (LVTOTALS$E60_75 * LVTOTALS$Percent60_75) 
LVTOTALS$Weight50_60 <- (LVTOTALS$E50_60 * LVTOTALS$Percent50_60) 
LVTOTALS$Weight45_50 <- (LVTOTALS$E45_50 * LVTOTALS$Percent45_50)
LVTOTALS$Weight40_45 <- (LVTOTALS$E40_45 * LVTOTALS$Percent40_45) 
LVTOTALS$Weight35_40 <- (LVTOTALS$E35_40 * LVTOTALS$Percent35_40) 
LVTOTALS$Weight30_35 <- (LVTOTALS$E30_35 * LVTOTALS$Percent30_35)
LVTOTALS$Weight25_30 <- (LVTOTALS$E25_30 * LVTOTALS$Percent25_30) 
LVTOTALS$Weight20_25 <- (LVTOTALS$E20_25 * LVTOTALS$Percent20_25)
LVTOTALS$Weight15_20 <- (LVTOTALS$E15_20 * LVTOTALS$Percent15_20) 
LVTOTALS$Weight10_15 <- (LVTOTALS$E10_15 * LVTOTALS$Percent10_15) 
LVTOTALS$Weight10 <- (LVTOTALS$E10 * LVTOTALS$Percent10) 
LVTOTALS$ReverseWeight10 <- (LVTOTALS$ReverseE10 * LVTOTALS$ReversePercent10)
LVTOTALS$ReverseWeight10_15 <- (LVTOTALS$ReverseE10_15 * LVTOTALS$ReversePercent10_15)
LVTOTALS$ReverseWeight15_20 <- (LVTOTALS$ReverseE15_20 * LVTOTALS$ReversePercent15_20)
LVTOTALS$ReverseWeight20_25 <- (LVTOTALS$ReverseE20_25 * LVTOTALS$ReversePercent20_25)
LVTOTALS$ReverseWeight25_30 <- (LVTOTALS$ReverseE25_30 * LVTOTALS$ReversePercent25_30)



#trying to recreate the HA stuff I did thru SAS and R
#local

SD$Group200 <- (SD$B19001_017/SD$B19001_001)
SD$Group150_200 <- (SD$B19001_017 + SD$B19001_016)/SD$B19001_001;
SD$Group125_150 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015)/SD$B19001_001;
SD$Group100_125 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014)/SD$B19001_001;
SD$Group75_100 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013)/SD$B19001_001;
SD$Group60_75 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012)/SD$B19001_001;
SD$Group50_60 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011)/SD$B19001_001;
SD$Group45_50 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010)/SD$B19001_001;
SD$Group40_45 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009)/SD$B19001_001;
SD$Group35_40 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008)/SD$B19001_001;
SD$Group30_35 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007)/SD$B19001_001;
SD$Group25_30 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007 + SD$B19001_006)/SD$B19001_001;
SD$Group20_25 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007 + SD$B19001_006 + SD$B19001_005)/SD$B19001_001;
SD$Group15_20 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007 + SD$B19001_006 + SD$B19001_005 + SD$B19001_004)/SD$B19001_001;
SD$Group10_15 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007 + SD$B19001_006 + SD$B19001_005 + SD$B19001_004 + SD$B19001_003)/SD$B19001_001;
SD$Group10 <- (SD$B19001_017 + SD$B19001_016 + SD$B19001_015 + SD$B19001_014 + SD$B19001_013 + SD$B19001_012 + SD$B19001_011 + SD$B19001_010 + SD$B19001_009 + SD$B19001_008 + SD$B19001_007 + SD$B19001_006 + SD$B19001_005 + SD$B19001_004 + SD$B19001_003 + SD$B19001_002)/SD$B19001_001;
SD$ReverseGroup10 <- (SD$B19001_002)/SD$B19001_001;
SD$ReverseGroup10_15 <- (SD$B19001_002 + SD$B19001_003)/SD$B19001_001;
SD$ReverseGroup15_20 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004)/SD$B19001_001;
SD$ReverseGroup20_25 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005)/SD$B19001_001;
SD$ReverseGroup25_30 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006)/SD$B19001_001;
SD$ReverseGroup30_35 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007)/SD$B19001_001;
SD$ReverseGroup35_40 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007 + SD$B19001_008)/SD$B19001_001;
SD$ReverseGroup40_45 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007 + SD$B19001_008 + SD$B19001_009)/SD$B19001_001;
SD$ReverseGroup45_50 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007 + SD$B19001_008 + SD$B19001_009 + SD$B19001_010)/SD$B19001_001;
SD$ReverseGroup50_60 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007 + SD$B19001_008 + SD$B19001_009 + SD$B19001_010 + SD$B19001_011)/SD$B19001_001;
SD$ReverseGroup60_75 <- (SD$B19001_002 + SD$B19001_003 + SD$B19001_004 + SD$B19001_005 + SD$B19001_006 + SD$B19001_007 + SD$B19001_008 + SD$B19001_009 + SD$B19001_010 + SD$B19001_011 + SD$B19001_012)/SD$B19001_001;

SD$LocalEnt200 <- SD$B19001_001 * ((SD$Group200)*log2(1/(SD$Group200)) + 
                                     (1-(SD$Group200))*log2(1/(1-(SD$Group200))))

SD$LocalEnt150_200 <- SD$B19001_001 * ((SD$Group150_200)*log2(1/(SD$Group150_200)) + 
                                         (1-(SD$Group150_200))*log2(1/(1-(SD$Group150_200))))

SD$LocalEnt125_150 <- SD$B19001_001 * ((SD$Group125_150)*log2(1/(SD$Group125_150)) + 
                                         (1-(SD$Group125_150))*log2(1/(1-(SD$Group125_150))))

SD$LocalEnt100_125 <- SD$B19001_001 * ((SD$Group100_125)*log2(1/(SD$Group100_125)) + 
                                         (1-(SD$Group100_125))*log2(1/(1-(SD$Group100_125))))

SD$LocalEnt75_100 <- SD$B19001_001 * ((SD$Group75_100)*log2(1/(SD$Group75_100)) + 
                                        (1-(SD$Group75_100))*log2(1/(1-(SD$Group75_100))))

SD$LocalEnt60_75 <- SD$B19001_001 * ((SD$Group60_75)*log2(1/(SD$Group60_75)) + 
                                       (1-(SD$Group60_75))*log2(1/(1-(SD$Group60_75))))

SD$LocalEnt50_60 <- SD$B19001_001 * ((SD$Group50_60)*log2(1/(SD$Group50_60)) + 
                                       (1-(SD$Group50_60))*log2(1/(1-(SD$Group50_60))))

SD$LocalEnt45_50 <- SD$B19001_001 * ((SD$Group45_50)*log2(1/(SD$Group45_50)) + 
                                       (1-(SD$Group45_50))*log2(1/(1-(SD$Group45_50))))

SD$LocalEnt40_45 <- SD$B19001_001 * ((SD$Group40_45)*log2(1/(SD$Group40_45)) + 
                                       (1-(SD$Group40_45))*log2(1/(1-(SD$Group40_45))))

SD$LocalEnt35_40 <- SD$B19001_001 * ((SD$Group35_40)*log2(1/(SD$Group35_40)) + 
                                       (1-(SD$Group35_40))*log2(1/(1-(SD$Group35_40))))

SD$LocalEnt30_35 <- SD$B19001_001 * ((SD$Group30_35)*log2(1/(SD$Group30_35)) + 
                                       (1-(SD$Group30_35))*log2(1/(1-(SD$Group30_35))))

SD$LocalEnt25_30 <- SD$B19001_001 * ((SD$Group25_30)*log2(1/(SD$Group25_30)) + 
                                       (1-(SD$Group25_30))*log2(1/(1-(SD$Group25_30))))

SD$LocalEnt20_25 <- SD$B19001_001 * ((SD$Group20_25)*log2(1/(SD$Group20_25)) + 
                                       (1-(SD$Group20_25))*log2(1/(1-(SD$Group20_25))))

SD$LocalEnt15_20 <- SD$B19001_001 * ((SD$Group15_20)*log2(1/(SD$Group15_20)) + 
                                       (1-(SD$Group15_20))*log2(1/(1-(SD$Group15_20))))

SD$LocalEnt10_15 <- SD$B19001_001 * ((SD$Group10_15)*log2(1/(SD$Group10_15)) + 
                                       (1-(SD$Group10_15))*log2(1/(1-(SD$Group10_15))))

SD$LocalEnt10 <- SD$B19001_001 * ((SD$Group10)*log2(1/(SD$Group10)) + 
                                    (1-(SD$Group10))*log2(1/(1-(SD$Group10))))

SD$ReverseLocalEnt10 <- SD$B19001_001 * ((SD$ReverseGroup10)*log2(1/(SD$ReverseGroup10)) + 
                                           (1-(SD$ReverseGroup10))*log2(1/(1-(SD$ReverseGroup10))))

SD$ReverseLocalEnt10_15 <- SD$B19001_001 * ((SD$ReverseGroup10_15)*log2(1/(SD$ReverseGroup10_15)) + 
                                              (1-(SD$ReverseGroup10_15))*log2(1/(1-(SD$ReverseGroup10_15))))

SD$ReverseLocalEnt15_20 <- SD$B19001_001 * ((SD$ReverseGroup15_20)*log2(1/(SD$ReverseGroup15_20)) + 
                                              (1-(SD$ReverseGroup15_20))*log2(1/(1-(SD$ReverseGroup15_20))))

SD$ReverseLocalEnt20_25 <- SD$B19001_001 * ((SD$ReverseGroup20_25)*log2(1/(SD$ReverseGroup20_25)) + 
                                              (1-(SD$ReverseGroup20_25))*log2(1/(1-(SD$ReverseGroup20_25))))

SD$ReverseLocalEnt25_30 <- SD$B19001_001 * ((SD$ReverseGroup25_30)*log2(1/(SD$ReverseGroup25_30)) + 
                                              (1-(SD$ReverseGroup25_30))*log2(1/(1-(SD$ReverseGroup25_30))))

SD$ReverseLocalEnt30_35 <- SD$B19001_001 * ((SD$ReverseGroup30_35)*log2(1/(SD$ReverseGroup30_35)) + 
                                              (1-(SD$ReverseGroup30_35))*log2(1/(1-(SD$ReverseGroup30_35))))


#HA stuff Total


SDTOTALS <- SD %>%
  summarise(MSAB19001_001 = sum(SD$B19001_001), MSAB19001_002 = sum(SD$B19001_002), MSAB19001_003 = sum(SD$B19001_003), MSAB19001_004 = sum(SD$B19001_004),
            MSAB19001_005 = sum(SD$B19001_005), MSAB19001_006 = sum(SD$B19001_006), MSAB19001_007 = sum(SD$B19001_007),
            MSAB19001_008 = sum(SD$B19001_008), MSAB19001_009 = sum(SD$B19001_009), MSAB19001_010 = sum(SD$B19001_010),
            MSAB19001_011 = sum(SD$B19001_011), MSAB19001_012 = sum(SD$B19001_012), MSAB19001_013 = sum(SD$B19001_013),
            MSAB19001_014 = sum(SD$B19001_014), MSAB19001_015 = sum(SD$B19001_015), MSAB19001_016 = sum(SD$B19001_016),
            MSAB19001_017 = sum(SD$B19001_017))


SDTOTALS$MSAGroup200 <- (SDTOTALS$MSAB19001_017/SDTOTALS$MSAB19001_001)
SDTOTALS$MSAGroup150_200 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup125_150 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup100_125 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup75_100 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup60_75 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup50_60 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup45_50 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup40_45 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup35_40 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup30_35 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup25_30 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_006)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup20_25 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_005)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup15_20 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_004)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup10_15 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_003)/SDTOTALS$MSAB19001_001;
SDTOTALS$MSAGroup10 <- (SDTOTALS$MSAB19001_017 + SDTOTALS$MSAB19001_016 + SDTOTALS$MSAB19001_015 + SDTOTALS$MSAB19001_014 + SDTOTALS$MSAB19001_013 + SDTOTALS$MSAB19001_012 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_002)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup10 <- (SDTOTALS$MSAB19001_002)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup10_15 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup15_20 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup20_25 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup25_30 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup30_35 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup35_40 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_008)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup40_45 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_009)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup45_50 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_010)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup50_60 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_011)/SDTOTALS$MSAB19001_001;
SDTOTALS$ReverseMSAGroup60_75 <- (SDTOTALS$MSAB19001_002 + SDTOTALS$MSAB19001_003 + SDTOTALS$MSAB19001_004 + SDTOTALS$MSAB19001_005 + SDTOTALS$MSAB19001_006 + SDTOTALS$MSAB19001_007 + SDTOTALS$MSAB19001_008 + SDTOTALS$MSAB19001_009 + SDTOTALS$MSAB19001_010 + SDTOTALS$MSAB19001_011 + SDTOTALS$MSAB19001_012)/SDTOTALS$MSAB19001_001;

SDTOTALS$TotalEnt200 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup200)*log2(1/(SDTOTALS$MSAGroup200)) + 
                                                    (1-(SDTOTALS$MSAGroup200))*log2(1/(1-(SDTOTALS$MSAGroup200))))

SDTOTALS$TotalEnt150_200 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup150_200)*log2(1/(SDTOTALS$MSAGroup150_200)) + 
                                                        (1-(SDTOTALS$MSAGroup150_200))*log2(1/(1-(SDTOTALS$MSAGroup150_200))))

SDTOTALS$TotalEnt125_150 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup125_150)*log2(1/(SDTOTALS$MSAGroup125_150)) + 
                                                        (1-(SDTOTALS$MSAGroup125_150))*log2(1/(1-(SDTOTALS$MSAGroup125_150))))

SDTOTALS$TotalEnt100_125 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup100_125)*log2(1/(SDTOTALS$MSAGroup100_125)) + 
                                                        (1-(SDTOTALS$MSAGroup100_125))*log2(1/(1-(SDTOTALS$MSAGroup100_125))))

SDTOTALS$TotalEnt75_100 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup75_100)*log2(1/(SDTOTALS$MSAGroup75_100)) + 
                                                       (1-(SDTOTALS$MSAGroup75_100))*log2(1/(1-(SDTOTALS$MSAGroup75_100))))

SDTOTALS$TotalEnt60_75 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup60_75)*log2(1/(SDTOTALS$MSAGroup60_75)) + 
                                                      (1-(SDTOTALS$MSAGroup60_75))*log2(1/(1-(SDTOTALS$MSAGroup60_75))))

SDTOTALS$TotalEnt50_60 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup50_60)*log2(1/(SDTOTALS$MSAGroup50_60)) + 
                                                      (1-(SDTOTALS$MSAGroup50_60))*log2(1/(1-(SDTOTALS$MSAGroup50_60))))

SDTOTALS$TotalEnt45_50 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup45_50)*log2(1/(SDTOTALS$MSAGroup45_50)) + 
                                                      (1-(SDTOTALS$MSAGroup45_50))*log2(1/(1-(SDTOTALS$MSAGroup45_50))))

SDTOTALS$TotalEnt40_45 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup40_45)*log2(1/(SDTOTALS$MSAGroup40_45)) + 
                                                      (1-(SDTOTALS$MSAGroup40_45))*log2(1/(1-(SDTOTALS$MSAGroup40_45))))

SDTOTALS$TotalEnt35_40 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup35_40)*log2(1/(SDTOTALS$MSAGroup35_40)) + 
                                                      (1-(SDTOTALS$MSAGroup35_40))*log2(1/(1-(SDTOTALS$MSAGroup35_40))))

SDTOTALS$TotalEnt30_35 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup30_35)*log2(1/(SDTOTALS$MSAGroup30_35)) + 
                                                      (1-(SDTOTALS$MSAGroup30_35))*log2(1/(1-(SDTOTALS$MSAGroup30_35))))

SDTOTALS$TotalEnt25_30 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup25_30)*log2(1/(SDTOTALS$MSAGroup25_30)) + 
                                                      (1-(SDTOTALS$MSAGroup25_30))*log2(1/(1-(SDTOTALS$MSAGroup25_30))))

SDTOTALS$TotalEnt20_25 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup20_25)*log2(1/(SDTOTALS$MSAGroup20_25)) + 
                                                      (1-(SDTOTALS$MSAGroup20_25))*log2(1/(1-(SDTOTALS$MSAGroup20_25))))

SDTOTALS$TotalEnt15_20 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup15_20)*log2(1/(SDTOTALS$MSAGroup15_20)) + 
                                                      (1-(SDTOTALS$MSAGroup15_20))*log2(1/(1-(SDTOTALS$MSAGroup15_20))))

SDTOTALS$TotalEnt10_15 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup10_15)*log2(1/(SDTOTALS$MSAGroup10_15)) + 
                                                      (1-(SDTOTALS$MSAGroup10_15))*log2(1/(1-(SDTOTALS$MSAGroup10_15))))

SDTOTALS$TotalEnt10 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$MSAGroup10)*log2(1/(SDTOTALS$MSAGroup10)) + 
                                                   (1-(SDTOTALS$MSAGroup10))*log2(1/(1-(SDTOTALS$MSAGroup10))))

SDTOTALS$ReverseTotalEnt10 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup10)*log2(1/(SDTOTALS$ReverseMSAGroup10)) + 
                                                          (1-(SDTOTALS$ReverseMSAGroup10))*log2(1/(1-(SDTOTALS$ReverseMSAGroup10))))

SDTOTALS$ReverseTotalEnt10_15 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup10_15)*log2(1/(SDTOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(SDTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SDTOTALS$ReverseMSAGroup10_15))))

SDTOTALS$ReverseTotalEnt15_20 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup15_20)*log2(1/(SDTOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(SDTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SDTOTALS$ReverseMSAGroup15_20))))

SDTOTALS$ReverseTotalEnt20_25 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup20_25)*log2(1/(SDTOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(SDTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SDTOTALS$ReverseMSAGroup20_25))))

SDTOTALS$ReverseTotalEnt25_30 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup25_30)*log2(1/(SDTOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(SDTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SDTOTALS$ReverseMSAGroup25_30))))

SDTOTALS$ReverseTotalEnt30_35 <- SDTOTALS$MSAB19001_001 * ((SDTOTALS$ReverseMSAGroup30_35)*log2(1/(SDTOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(SDTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SDTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
SDTOTALS$E200 <- ((SDTOTALS$MSAGroup200)*log2(1/(SDTOTALS$MSAGroup200)) + (1-(SDTOTALS$MSAGroup200))*log2(1/(1-(SDTOTALS$MSAGroup200))))
SDTOTALS$E150_200 <- ((SDTOTALS$MSAGroup150_200)*log2(1/(SDTOTALS$MSAGroup150_200)) + (1-(SDTOTALS$MSAGroup150_200))*log2(1/(1-(SDTOTALS$MSAGroup150_200))))
SDTOTALS$E125_150 <- ((SDTOTALS$MSAGroup125_150)*log2(1/(SDTOTALS$MSAGroup125_150)) + (1-(SDTOTALS$MSAGroup125_150))*log2(1/(1-(SDTOTALS$MSAGroup125_150))))
SDTOTALS$E100_125 <- ((SDTOTALS$MSAGroup100_125)*log2(1/(SDTOTALS$MSAGroup100_125)) + (1-(SDTOTALS$MSAGroup100_125))*log2(1/(1-(SDTOTALS$MSAGroup100_125))))
SDTOTALS$E75_100 <- ((SDTOTALS$MSAGroup75_100)*log2(1/(SDTOTALS$MSAGroup75_100)) + (1-(SDTOTALS$MSAGroup75_100))*log2(1/(1-(SDTOTALS$MSAGroup75_100))))
SDTOTALS$E60_75 <- ((SDTOTALS$MSAGroup60_75)*log2(1/(SDTOTALS$MSAGroup60_75)) + (1-(SDTOTALS$MSAGroup60_75))*log2(1/(1-(SDTOTALS$MSAGroup60_75))))
SDTOTALS$E50_60 <- ((SDTOTALS$MSAGroup50_60)*log2(1/(SDTOTALS$MSAGroup50_60)) + (1-(SDTOTALS$MSAGroup50_60))*log2(1/(1-(SDTOTALS$MSAGroup50_60))))
SDTOTALS$E50_60 <- ((SDTOTALS$MSAGroup50_60)*log2(1/(SDTOTALS$MSAGroup50_60)) + (1-(SDTOTALS$MSAGroup50_60))*log2(1/(1-(SDTOTALS$MSAGroup50_60))))
SDTOTALS$E45_50 <- ((SDTOTALS$MSAGroup45_50)*log2(1/(SDTOTALS$MSAGroup45_50)) + (1-(SDTOTALS$MSAGroup45_50))*log2(1/(1-(SDTOTALS$MSAGroup45_50))))
SDTOTALS$E40_45 <- ((SDTOTALS$MSAGroup40_45)*log2(1/(SDTOTALS$MSAGroup40_45)) + (1-(SDTOTALS$MSAGroup40_45))*log2(1/(1-(SDTOTALS$MSAGroup40_45))))
SDTOTALS$E35_40 <- ((SDTOTALS$MSAGroup35_40)*log2(1/(SDTOTALS$MSAGroup35_40)) + (1-(SDTOTALS$MSAGroup35_40))*log2(1/(1-(SDTOTALS$MSAGroup35_40))))
SDTOTALS$E30_35 <- ((SDTOTALS$MSAGroup30_35)*log2(1/(SDTOTALS$MSAGroup30_35)) + (1-(SDTOTALS$MSAGroup30_35))*log2(1/(1-(SDTOTALS$MSAGroup30_35))))
SDTOTALS$E25_30 <- ((SDTOTALS$MSAGroup25_30)*log2(1/(SDTOTALS$MSAGroup25_30)) + (1-(SDTOTALS$MSAGroup25_30))*log2(1/(1-(SDTOTALS$MSAGroup25_30))))
SDTOTALS$E20_25 <- ((SDTOTALS$MSAGroup20_25)*log2(1/(SDTOTALS$MSAGroup20_25)) + (1-(SDTOTALS$MSAGroup20_25))*log2(1/(1-(SDTOTALS$MSAGroup20_25))))
SDTOTALS$E15_20 <- ((SDTOTALS$MSAGroup15_20)*log2(1/(SDTOTALS$MSAGroup15_20)) + (1-(SDTOTALS$MSAGroup15_20))*log2(1/(1-(SDTOTALS$MSAGroup15_20))))
SDTOTALS$E10_15 <- ((SDTOTALS$MSAGroup10_15)*log2(1/(SDTOTALS$MSAGroup10_15)) + (1-(SDTOTALS$MSAGroup10_15))*log2(1/(1-(SDTOTALS$MSAGroup10_15))))
SDTOTALS$E10 <- ((SDTOTALS$MSAGroup10)*log2(1/(SDTOTALS$MSAGroup10)) + (1-(SDTOTALS$MSAGroup10))*log2(1/(1-(SDTOTALS$MSAGroup10))))
SDTOTALS$ReverseE10 <- ((SDTOTALS$ReverseMSAGroup10)*log2(1/(SDTOTALS$ReverseMSAGroup10)) + (1-(SDTOTALS$ReverseMSAGroup10))*log2(1/(1-(SDTOTALS$ReverseMSAGroup10))))
SDTOTALS$ReverseE10_15 <- ((SDTOTALS$ReverseMSAGroup10_15)*log2(1/(SDTOTALS$ReverseMSAGroup10_15)) + (1-(SDTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SDTOTALS$ReverseMSAGroup10_15))))
SDTOTALS$ReverseE15_20 <- ((SDTOTALS$ReverseMSAGroup15_20)*log2(1/(SDTOTALS$ReverseMSAGroup15_20)) + (1-(SDTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SDTOTALS$ReverseMSAGroup15_20))))
SDTOTALS$ReverseE20_25 <- ((SDTOTALS$ReverseMSAGroup20_25)*log2(1/(SDTOTALS$ReverseMSAGroup20_25)) + (1-(SDTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SDTOTALS$ReverseMSAGroup20_25))))
SDTOTALS$ReverseE25_30 <- ((SDTOTALS$ReverseMSAGroup25_30)*log2(1/(SDTOTALS$ReverseMSAGroup25_30)) + (1-(SDTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SDTOTALS$ReverseMSAGroup25_30))))
SDTOTALS$ReverseE30_35 <- ((SDTOTALS$ReverseMSAGroup30_35)*log2(1/(SDTOTALS$ReverseMSAGroup30_35)) + (1-(SDTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SDTOTALS$ReverseMSAGroup30_35))))
SDTOTALS$ReverseE35_40 <- ((SDTOTALS$ReverseMSAGroup35_40)*log2(1/(SDTOTALS$ReverseMSAGroup35_40)) + (1-(SDTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(SDTOTALS$ReverseMSAGroup35_40))))


SD$Section200 <- SD$LocalEnt200 / SDTOTALS$TotalEnt200
SD$Section150_200 <- SD$LocalEnt150_200 / SDTOTALS$TotalEnt150_200
SD$Section125_150 <- SD$LocalEnt125_150 / SDTOTALS$TotalEnt125_150
SD$Section100_125 <- SD$LocalEnt100_125 / SDTOTALS$TotalEnt100_125
SD$Section75_100 <- SD$LocalEnt75_100 / SDTOTALS$TotalEnt75_100
SD$Section60_75 <- SD$LocalEnt60_75 / SDTOTALS$TotalEnt60_75
SD$Section50_60 <- SD$LocalEnt50_60 / SDTOTALS$TotalEnt50_60
SD$Section45_50 <- SD$LocalEnt45_50 / SDTOTALS$TotalEnt45_50
SD$Section40_45 <- SD$LocalEnt40_45 / SDTOTALS$TotalEnt40_45
SD$Section35_40 <- SD$LocalEnt35_40 / SDTOTALS$TotalEnt35_40
SD$Section30_35 <- SD$LocalEnt30_35 / SDTOTALS$TotalEnt30_35
SD$Section25_30 <- SD$LocalEnt25_30 / SDTOTALS$TotalEnt25_30
SD$Section20_25 <- SD$LocalEnt20_25 / SDTOTALS$TotalEnt20_25
SD$Section15_20 <- SD$LocalEnt15_20 / SDTOTALS$TotalEnt15_20
SD$Section10_15 <- SD$LocalEnt10_15 / SDTOTALS$TotalEnt10_15
SD$Section10 <- SD$LocalEnt10 / SDTOTALS$TotalEnt10
SD$ReverseSection10 <- SD$ReverseLocalEnt10 / SDTOTALS$ReverseTotalEnt10
SD$ReverseSection10_15 <- SD$ReverseLocalEnt10_15 / SDTOTALS$ReverseTotalEnt10_15
SD$ReverseSection15_20 <- SD$ReverseLocalEnt15_20 / SDTOTALS$ReverseTotalEnt15_20
SD$ReverseSection20_25 <- SD$ReverseLocalEnt20_25 / SDTOTALS$ReverseTotalEnt20_25
SD$ReverseSection25_30 <- SD$ReverseLocalEnt25_30 / SDTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
SD[is.na(SD)] <- 0

SDTOTALS$Percent200 <- 1 - sum(SD$Section200)
SDTOTALS$Percent150_200 <- 1 - sum(SD$Section150_200)
SDTOTALS$Percent125_150 <- 1 - sum(SD$Section125_150)
SDTOTALS$Percent100_125 <- 1 - sum(SD$Section100_125)
SDTOTALS$Percent75_100 <- 1 - sum(SD$Section75_100)
SDTOTALS$Percent60_75 <- 1 - sum(SD$Section60_75)
SDTOTALS$Percent50_60 <- 1 - sum(SD$Section50_60)
SDTOTALS$Percent45_50 <- 1 - sum(SD$Section45_50)
SDTOTALS$Percent40_45 <- 1 - sum(SD$Section40_45)
SDTOTALS$Percent35_40 <- 1 - sum(SD$Section35_40)
SDTOTALS$Percent30_35 <- 1 - sum(SD$Section30_35)
SDTOTALS$Percent25_30 <- 1 - sum(SD$Section25_30)
SDTOTALS$Percent20_25 <- 1 - sum(SD$Section20_25)
SDTOTALS$Percent15_20 <- 1 - sum(SD$Section15_20)
SDTOTALS$Percent10_15 <- 1 - sum(SD$Section10_15)
SDTOTALS$Percent10 <- 1 - sum(SD$Section10)
SDTOTALS$ReversePercent10 <- 1 - sum(SD$ReverseSection10)
SDTOTALS$ReversePercent10_15 <- 1 - sum(SD$ReverseSection10_15)
SDTOTALS$ReversePercent15_20 <- 1 - sum(SD$ReverseSection15_20)
SDTOTALS$ReversePercent20_25 <- 1 - sum(SD$ReverseSection20_25)
SDTOTALS$ReversePercent25_30 <- 1 - sum(SD$ReverseSection25_30)


SDTOTALS$Weight200 <- SDTOTALS$E200 * SDTOTALS$Percent200
SDTOTALS$Weight150_200 <- (SDTOTALS$E150_200 * SDTOTALS$Percent150_200)
SDTOTALS$Weight125_150 <- (SDTOTALS$E125_150 * SDTOTALS$Percent125_150) 
SDTOTALS$Weight100_125 <- (SDTOTALS$E100_125 * SDTOTALS$Percent100_125) 
SDTOTALS$Weight75_100 <- (SDTOTALS$E75_100 * SDTOTALS$Percent75_100)
SDTOTALS$Weight60_75 <- (SDTOTALS$E60_75 * SDTOTALS$Percent60_75) 
SDTOTALS$Weight50_60 <- (SDTOTALS$E50_60 * SDTOTALS$Percent50_60) 
SDTOTALS$Weight45_50 <- (SDTOTALS$E45_50 * SDTOTALS$Percent45_50)
SDTOTALS$Weight40_45 <- (SDTOTALS$E40_45 * SDTOTALS$Percent40_45) 
SDTOTALS$Weight35_40 <- (SDTOTALS$E35_40 * SDTOTALS$Percent35_40) 
SDTOTALS$Weight30_35 <- (SDTOTALS$E30_35 * SDTOTALS$Percent30_35)
SDTOTALS$Weight25_30 <- (SDTOTALS$E25_30 * SDTOTALS$Percent25_30) 
SDTOTALS$Weight20_25 <- (SDTOTALS$E20_25 * SDTOTALS$Percent20_25)
SDTOTALS$Weight15_20 <- (SDTOTALS$E15_20 * SDTOTALS$Percent15_20) 
SDTOTALS$Weight10_15 <- (SDTOTALS$E10_15 * SDTOTALS$Percent10_15) 
SDTOTALS$Weight10 <- (SDTOTALS$E10 * SDTOTALS$Percent10) 
SDTOTALS$ReverseWeight10 <- (SDTOTALS$ReverseE10 * SDTOTALS$ReversePercent10)
SDTOTALS$ReverseWeight10_15 <- (SDTOTALS$ReverseE10_15 * SDTOTALS$ReversePercent10_15)
SDTOTALS$ReverseWeight15_20 <- (SDTOTALS$ReverseE15_20 * SDTOTALS$ReversePercent15_20)
SDTOTALS$ReverseWeight20_25 <- (SDTOTALS$ReverseE20_25 * SDTOTALS$ReversePercent20_25)
SDTOTALS$ReverseWeight25_30 <- (SDTOTALS$ReverseE25_30 * SDTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

SF$Group200 <- (SF$B19001_017/SF$B19001_001)
SF$Group150_200 <- (SF$B19001_017 + SF$B19001_016)/SF$B19001_001;
SF$Group125_150 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015)/SF$B19001_001;
SF$Group100_125 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014)/SF$B19001_001;
SF$Group75_100 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013)/SF$B19001_001;
SF$Group60_75 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012)/SF$B19001_001;
SF$Group50_60 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011)/SF$B19001_001;
SF$Group45_50 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010)/SF$B19001_001;
SF$Group40_45 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009)/SF$B19001_001;
SF$Group35_40 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008)/SF$B19001_001;
SF$Group30_35 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007)/SF$B19001_001;
SF$Group25_30 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007 + SF$B19001_006)/SF$B19001_001;
SF$Group20_25 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007 + SF$B19001_006 + SF$B19001_005)/SF$B19001_001;
SF$Group15_20 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007 + SF$B19001_006 + SF$B19001_005 + SF$B19001_004)/SF$B19001_001;
SF$Group10_15 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007 + SF$B19001_006 + SF$B19001_005 + SF$B19001_004 + SF$B19001_003)/SF$B19001_001;
SF$Group10 <- (SF$B19001_017 + SF$B19001_016 + SF$B19001_015 + SF$B19001_014 + SF$B19001_013 + SF$B19001_012 + SF$B19001_011 + SF$B19001_010 + SF$B19001_009 + SF$B19001_008 + SF$B19001_007 + SF$B19001_006 + SF$B19001_005 + SF$B19001_004 + SF$B19001_003 + SF$B19001_002)/SF$B19001_001;
SF$ReverseGroup10 <- (SF$B19001_002)/SF$B19001_001;
SF$ReverseGroup10_15 <- (SF$B19001_002 + SF$B19001_003)/SF$B19001_001;
SF$ReverseGroup15_20 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004)/SF$B19001_001;
SF$ReverseGroup20_25 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005)/SF$B19001_001;
SF$ReverseGroup25_30 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006)/SF$B19001_001;
SF$ReverseGroup30_35 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007)/SF$B19001_001;
SF$ReverseGroup35_40 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007 + SF$B19001_008)/SF$B19001_001;
SF$ReverseGroup40_45 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007 + SF$B19001_008 + SF$B19001_009)/SF$B19001_001;
SF$ReverseGroup45_50 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007 + SF$B19001_008 + SF$B19001_009 + SF$B19001_010)/SF$B19001_001;
SF$ReverseGroup50_60 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007 + SF$B19001_008 + SF$B19001_009 + SF$B19001_010 + SF$B19001_011)/SF$B19001_001;
SF$ReverseGroup60_75 <- (SF$B19001_002 + SF$B19001_003 + SF$B19001_004 + SF$B19001_005 + SF$B19001_006 + SF$B19001_007 + SF$B19001_008 + SF$B19001_009 + SF$B19001_010 + SF$B19001_011 + SF$B19001_012)/SF$B19001_001;

SF$LocalEnt200 <- SF$B19001_001 * ((SF$Group200)*log2(1/(SF$Group200)) + 
                                     (1-(SF$Group200))*log2(1/(1-(SF$Group200))))

SF$LocalEnt150_200 <- SF$B19001_001 * ((SF$Group150_200)*log2(1/(SF$Group150_200)) + 
                                         (1-(SF$Group150_200))*log2(1/(1-(SF$Group150_200))))

SF$LocalEnt125_150 <- SF$B19001_001 * ((SF$Group125_150)*log2(1/(SF$Group125_150)) + 
                                         (1-(SF$Group125_150))*log2(1/(1-(SF$Group125_150))))

SF$LocalEnt100_125 <- SF$B19001_001 * ((SF$Group100_125)*log2(1/(SF$Group100_125)) + 
                                         (1-(SF$Group100_125))*log2(1/(1-(SF$Group100_125))))

SF$LocalEnt75_100 <- SF$B19001_001 * ((SF$Group75_100)*log2(1/(SF$Group75_100)) + 
                                        (1-(SF$Group75_100))*log2(1/(1-(SF$Group75_100))))

SF$LocalEnt60_75 <- SF$B19001_001 * ((SF$Group60_75)*log2(1/(SF$Group60_75)) + 
                                       (1-(SF$Group60_75))*log2(1/(1-(SF$Group60_75))))

SF$LocalEnt50_60 <- SF$B19001_001 * ((SF$Group50_60)*log2(1/(SF$Group50_60)) + 
                                       (1-(SF$Group50_60))*log2(1/(1-(SF$Group50_60))))

SF$LocalEnt45_50 <- SF$B19001_001 * ((SF$Group45_50)*log2(1/(SF$Group45_50)) + 
                                       (1-(SF$Group45_50))*log2(1/(1-(SF$Group45_50))))

SF$LocalEnt40_45 <- SF$B19001_001 * ((SF$Group40_45)*log2(1/(SF$Group40_45)) + 
                                       (1-(SF$Group40_45))*log2(1/(1-(SF$Group40_45))))

SF$LocalEnt35_40 <- SF$B19001_001 * ((SF$Group35_40)*log2(1/(SF$Group35_40)) + 
                                       (1-(SF$Group35_40))*log2(1/(1-(SF$Group35_40))))

SF$LocalEnt30_35 <- SF$B19001_001 * ((SF$Group30_35)*log2(1/(SF$Group30_35)) + 
                                       (1-(SF$Group30_35))*log2(1/(1-(SF$Group30_35))))

SF$LocalEnt25_30 <- SF$B19001_001 * ((SF$Group25_30)*log2(1/(SF$Group25_30)) + 
                                       (1-(SF$Group25_30))*log2(1/(1-(SF$Group25_30))))

SF$LocalEnt20_25 <- SF$B19001_001 * ((SF$Group20_25)*log2(1/(SF$Group20_25)) + 
                                       (1-(SF$Group20_25))*log2(1/(1-(SF$Group20_25))))

SF$LocalEnt15_20 <- SF$B19001_001 * ((SF$Group15_20)*log2(1/(SF$Group15_20)) + 
                                       (1-(SF$Group15_20))*log2(1/(1-(SF$Group15_20))))

SF$LocalEnt10_15 <- SF$B19001_001 * ((SF$Group10_15)*log2(1/(SF$Group10_15)) + 
                                       (1-(SF$Group10_15))*log2(1/(1-(SF$Group10_15))))

SF$LocalEnt10 <- SF$B19001_001 * ((SF$Group10)*log2(1/(SF$Group10)) + 
                                    (1-(SF$Group10))*log2(1/(1-(SF$Group10))))

SF$ReverseLocalEnt10 <- SF$B19001_001 * ((SF$ReverseGroup10)*log2(1/(SF$ReverseGroup10)) + 
                                           (1-(SF$ReverseGroup10))*log2(1/(1-(SF$ReverseGroup10))))

SF$ReverseLocalEnt10_15 <- SF$B19001_001 * ((SF$ReverseGroup10_15)*log2(1/(SF$ReverseGroup10_15)) + 
                                              (1-(SF$ReverseGroup10_15))*log2(1/(1-(SF$ReverseGroup10_15))))

SF$ReverseLocalEnt15_20 <- SF$B19001_001 * ((SF$ReverseGroup15_20)*log2(1/(SF$ReverseGroup15_20)) + 
                                              (1-(SF$ReverseGroup15_20))*log2(1/(1-(SF$ReverseGroup15_20))))

SF$ReverseLocalEnt20_25 <- SF$B19001_001 * ((SF$ReverseGroup20_25)*log2(1/(SF$ReverseGroup20_25)) + 
                                              (1-(SF$ReverseGroup20_25))*log2(1/(1-(SF$ReverseGroup20_25))))

SF$ReverseLocalEnt25_30 <- SF$B19001_001 * ((SF$ReverseGroup25_30)*log2(1/(SF$ReverseGroup25_30)) + 
                                              (1-(SF$ReverseGroup25_30))*log2(1/(1-(SF$ReverseGroup25_30))))

SF$ReverseLocalEnt30_35 <- SF$B19001_001 * ((SF$ReverseGroup30_35)*log2(1/(SF$ReverseGroup30_35)) + 
                                              (1-(SF$ReverseGroup30_35))*log2(1/(1-(SF$ReverseGroup30_35))))


#HA stuff Total


SFTOTALS <- SF %>%
  summarise(MSAB19001_001 = sum(SF$B19001_001), MSAB19001_002 = sum(SF$B19001_002), MSAB19001_003 = sum(SF$B19001_003), MSAB19001_004 = sum(SF$B19001_004),
            MSAB19001_005 = sum(SF$B19001_005), MSAB19001_006 = sum(SF$B19001_006), MSAB19001_007 = sum(SF$B19001_007),
            MSAB19001_008 = sum(SF$B19001_008), MSAB19001_009 = sum(SF$B19001_009), MSAB19001_010 = sum(SF$B19001_010),
            MSAB19001_011 = sum(SF$B19001_011), MSAB19001_012 = sum(SF$B19001_012), MSAB19001_013 = sum(SF$B19001_013),
            MSAB19001_014 = sum(SF$B19001_014), MSAB19001_015 = sum(SF$B19001_015), MSAB19001_016 = sum(SF$B19001_016),
            MSAB19001_017 = sum(SF$B19001_017))


SFTOTALS$MSAGroup200 <- (SFTOTALS$MSAB19001_017/SFTOTALS$MSAB19001_001)
SFTOTALS$MSAGroup150_200 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup125_150 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup100_125 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup75_100 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup60_75 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup50_60 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup45_50 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup40_45 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup35_40 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup30_35 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup25_30 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_006)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup20_25 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_005)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup15_20 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_004)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup10_15 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_003)/SFTOTALS$MSAB19001_001;
SFTOTALS$MSAGroup10 <- (SFTOTALS$MSAB19001_017 + SFTOTALS$MSAB19001_016 + SFTOTALS$MSAB19001_015 + SFTOTALS$MSAB19001_014 + SFTOTALS$MSAB19001_013 + SFTOTALS$MSAB19001_012 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_002)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup10 <- (SFTOTALS$MSAB19001_002)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup10_15 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup15_20 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup20_25 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup25_30 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup30_35 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup35_40 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_008)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup40_45 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_009)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup45_50 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_010)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup50_60 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_011)/SFTOTALS$MSAB19001_001;
SFTOTALS$ReverseMSAGroup60_75 <- (SFTOTALS$MSAB19001_002 + SFTOTALS$MSAB19001_003 + SFTOTALS$MSAB19001_004 + SFTOTALS$MSAB19001_005 + SFTOTALS$MSAB19001_006 + SFTOTALS$MSAB19001_007 + SFTOTALS$MSAB19001_008 + SFTOTALS$MSAB19001_009 + SFTOTALS$MSAB19001_010 + SFTOTALS$MSAB19001_011 + SFTOTALS$MSAB19001_012)/SFTOTALS$MSAB19001_001;

SFTOTALS$TotalEnt200 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup200)*log2(1/(SFTOTALS$MSAGroup200)) + 
                                                    (1-(SFTOTALS$MSAGroup200))*log2(1/(1-(SFTOTALS$MSAGroup200))))

SFTOTALS$TotalEnt150_200 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup150_200)*log2(1/(SFTOTALS$MSAGroup150_200)) + 
                                                        (1-(SFTOTALS$MSAGroup150_200))*log2(1/(1-(SFTOTALS$MSAGroup150_200))))

SFTOTALS$TotalEnt125_150 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup125_150)*log2(1/(SFTOTALS$MSAGroup125_150)) + 
                                                        (1-(SFTOTALS$MSAGroup125_150))*log2(1/(1-(SFTOTALS$MSAGroup125_150))))

SFTOTALS$TotalEnt100_125 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup100_125)*log2(1/(SFTOTALS$MSAGroup100_125)) + 
                                                        (1-(SFTOTALS$MSAGroup100_125))*log2(1/(1-(SFTOTALS$MSAGroup100_125))))

SFTOTALS$TotalEnt75_100 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup75_100)*log2(1/(SFTOTALS$MSAGroup75_100)) + 
                                                       (1-(SFTOTALS$MSAGroup75_100))*log2(1/(1-(SFTOTALS$MSAGroup75_100))))

SFTOTALS$TotalEnt60_75 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup60_75)*log2(1/(SFTOTALS$MSAGroup60_75)) + 
                                                      (1-(SFTOTALS$MSAGroup60_75))*log2(1/(1-(SFTOTALS$MSAGroup60_75))))

SFTOTALS$TotalEnt50_60 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup50_60)*log2(1/(SFTOTALS$MSAGroup50_60)) + 
                                                      (1-(SFTOTALS$MSAGroup50_60))*log2(1/(1-(SFTOTALS$MSAGroup50_60))))

SFTOTALS$TotalEnt45_50 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup45_50)*log2(1/(SFTOTALS$MSAGroup45_50)) + 
                                                      (1-(SFTOTALS$MSAGroup45_50))*log2(1/(1-(SFTOTALS$MSAGroup45_50))))

SFTOTALS$TotalEnt40_45 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup40_45)*log2(1/(SFTOTALS$MSAGroup40_45)) + 
                                                      (1-(SFTOTALS$MSAGroup40_45))*log2(1/(1-(SFTOTALS$MSAGroup40_45))))

SFTOTALS$TotalEnt35_40 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup35_40)*log2(1/(SFTOTALS$MSAGroup35_40)) + 
                                                      (1-(SFTOTALS$MSAGroup35_40))*log2(1/(1-(SFTOTALS$MSAGroup35_40))))

SFTOTALS$TotalEnt30_35 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup30_35)*log2(1/(SFTOTALS$MSAGroup30_35)) + 
                                                      (1-(SFTOTALS$MSAGroup30_35))*log2(1/(1-(SFTOTALS$MSAGroup30_35))))

SFTOTALS$TotalEnt25_30 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup25_30)*log2(1/(SFTOTALS$MSAGroup25_30)) + 
                                                      (1-(SFTOTALS$MSAGroup25_30))*log2(1/(1-(SFTOTALS$MSAGroup25_30))))

SFTOTALS$TotalEnt20_25 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup20_25)*log2(1/(SFTOTALS$MSAGroup20_25)) + 
                                                      (1-(SFTOTALS$MSAGroup20_25))*log2(1/(1-(SFTOTALS$MSAGroup20_25))))

SFTOTALS$TotalEnt15_20 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup15_20)*log2(1/(SFTOTALS$MSAGroup15_20)) + 
                                                      (1-(SFTOTALS$MSAGroup15_20))*log2(1/(1-(SFTOTALS$MSAGroup15_20))))

SFTOTALS$TotalEnt10_15 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup10_15)*log2(1/(SFTOTALS$MSAGroup10_15)) + 
                                                      (1-(SFTOTALS$MSAGroup10_15))*log2(1/(1-(SFTOTALS$MSAGroup10_15))))

SFTOTALS$TotalEnt10 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$MSAGroup10)*log2(1/(SFTOTALS$MSAGroup10)) + 
                                                   (1-(SFTOTALS$MSAGroup10))*log2(1/(1-(SFTOTALS$MSAGroup10))))

SFTOTALS$ReverseTotalEnt10 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup10)*log2(1/(SFTOTALS$ReverseMSAGroup10)) + 
                                                          (1-(SFTOTALS$ReverseMSAGroup10))*log2(1/(1-(SFTOTALS$ReverseMSAGroup10))))

SFTOTALS$ReverseTotalEnt10_15 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup10_15)*log2(1/(SFTOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(SFTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SFTOTALS$ReverseMSAGroup10_15))))

SFTOTALS$ReverseTotalEnt15_20 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup15_20)*log2(1/(SFTOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(SFTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SFTOTALS$ReverseMSAGroup15_20))))

SFTOTALS$ReverseTotalEnt20_25 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup20_25)*log2(1/(SFTOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(SFTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SFTOTALS$ReverseMSAGroup20_25))))

SFTOTALS$ReverseTotalEnt25_30 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup25_30)*log2(1/(SFTOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(SFTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SFTOTALS$ReverseMSAGroup25_30))))

SFTOTALS$ReverseTotalEnt30_35 <- SFTOTALS$MSAB19001_001 * ((SFTOTALS$ReverseMSAGroup30_35)*log2(1/(SFTOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(SFTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SFTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
SFTOTALS$E200 <- ((SFTOTALS$MSAGroup200)*log2(1/(SFTOTALS$MSAGroup200)) + (1-(SFTOTALS$MSAGroup200))*log2(1/(1-(SFTOTALS$MSAGroup200))))
SFTOTALS$E150_200 <- ((SFTOTALS$MSAGroup150_200)*log2(1/(SFTOTALS$MSAGroup150_200)) + (1-(SFTOTALS$MSAGroup150_200))*log2(1/(1-(SFTOTALS$MSAGroup150_200))))
SFTOTALS$E125_150 <- ((SFTOTALS$MSAGroup125_150)*log2(1/(SFTOTALS$MSAGroup125_150)) + (1-(SFTOTALS$MSAGroup125_150))*log2(1/(1-(SFTOTALS$MSAGroup125_150))))
SFTOTALS$E100_125 <- ((SFTOTALS$MSAGroup100_125)*log2(1/(SFTOTALS$MSAGroup100_125)) + (1-(SFTOTALS$MSAGroup100_125))*log2(1/(1-(SFTOTALS$MSAGroup100_125))))
SFTOTALS$E75_100 <- ((SFTOTALS$MSAGroup75_100)*log2(1/(SFTOTALS$MSAGroup75_100)) + (1-(SFTOTALS$MSAGroup75_100))*log2(1/(1-(SFTOTALS$MSAGroup75_100))))
SFTOTALS$E60_75 <- ((SFTOTALS$MSAGroup60_75)*log2(1/(SFTOTALS$MSAGroup60_75)) + (1-(SFTOTALS$MSAGroup60_75))*log2(1/(1-(SFTOTALS$MSAGroup60_75))))
SFTOTALS$E50_60 <- ((SFTOTALS$MSAGroup50_60)*log2(1/(SFTOTALS$MSAGroup50_60)) + (1-(SFTOTALS$MSAGroup50_60))*log2(1/(1-(SFTOTALS$MSAGroup50_60))))
SFTOTALS$E50_60 <- ((SFTOTALS$MSAGroup50_60)*log2(1/(SFTOTALS$MSAGroup50_60)) + (1-(SFTOTALS$MSAGroup50_60))*log2(1/(1-(SFTOTALS$MSAGroup50_60))))
SFTOTALS$E45_50 <- ((SFTOTALS$MSAGroup45_50)*log2(1/(SFTOTALS$MSAGroup45_50)) + (1-(SFTOTALS$MSAGroup45_50))*log2(1/(1-(SFTOTALS$MSAGroup45_50))))
SFTOTALS$E40_45 <- ((SFTOTALS$MSAGroup40_45)*log2(1/(SFTOTALS$MSAGroup40_45)) + (1-(SFTOTALS$MSAGroup40_45))*log2(1/(1-(SFTOTALS$MSAGroup40_45))))
SFTOTALS$E35_40 <- ((SFTOTALS$MSAGroup35_40)*log2(1/(SFTOTALS$MSAGroup35_40)) + (1-(SFTOTALS$MSAGroup35_40))*log2(1/(1-(SFTOTALS$MSAGroup35_40))))
SFTOTALS$E30_35 <- ((SFTOTALS$MSAGroup30_35)*log2(1/(SFTOTALS$MSAGroup30_35)) + (1-(SFTOTALS$MSAGroup30_35))*log2(1/(1-(SFTOTALS$MSAGroup30_35))))
SFTOTALS$E25_30 <- ((SFTOTALS$MSAGroup25_30)*log2(1/(SFTOTALS$MSAGroup25_30)) + (1-(SFTOTALS$MSAGroup25_30))*log2(1/(1-(SFTOTALS$MSAGroup25_30))))
SFTOTALS$E20_25 <- ((SFTOTALS$MSAGroup20_25)*log2(1/(SFTOTALS$MSAGroup20_25)) + (1-(SFTOTALS$MSAGroup20_25))*log2(1/(1-(SFTOTALS$MSAGroup20_25))))
SFTOTALS$E15_20 <- ((SFTOTALS$MSAGroup15_20)*log2(1/(SFTOTALS$MSAGroup15_20)) + (1-(SFTOTALS$MSAGroup15_20))*log2(1/(1-(SFTOTALS$MSAGroup15_20))))
SFTOTALS$E10_15 <- ((SFTOTALS$MSAGroup10_15)*log2(1/(SFTOTALS$MSAGroup10_15)) + (1-(SFTOTALS$MSAGroup10_15))*log2(1/(1-(SFTOTALS$MSAGroup10_15))))
SFTOTALS$E10 <- ((SFTOTALS$MSAGroup10)*log2(1/(SFTOTALS$MSAGroup10)) + (1-(SFTOTALS$MSAGroup10))*log2(1/(1-(SFTOTALS$MSAGroup10))))
SFTOTALS$ReverseE10 <- ((SFTOTALS$ReverseMSAGroup10)*log2(1/(SFTOTALS$ReverseMSAGroup10)) + (1-(SFTOTALS$ReverseMSAGroup10))*log2(1/(1-(SFTOTALS$ReverseMSAGroup10))))
SFTOTALS$ReverseE10_15 <- ((SFTOTALS$ReverseMSAGroup10_15)*log2(1/(SFTOTALS$ReverseMSAGroup10_15)) + (1-(SFTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SFTOTALS$ReverseMSAGroup10_15))))
SFTOTALS$ReverseE15_20 <- ((SFTOTALS$ReverseMSAGroup15_20)*log2(1/(SFTOTALS$ReverseMSAGroup15_20)) + (1-(SFTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SFTOTALS$ReverseMSAGroup15_20))))
SFTOTALS$ReverseE20_25 <- ((SFTOTALS$ReverseMSAGroup20_25)*log2(1/(SFTOTALS$ReverseMSAGroup20_25)) + (1-(SFTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SFTOTALS$ReverseMSAGroup20_25))))
SFTOTALS$ReverseE25_30 <- ((SFTOTALS$ReverseMSAGroup25_30)*log2(1/(SFTOTALS$ReverseMSAGroup25_30)) + (1-(SFTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SFTOTALS$ReverseMSAGroup25_30))))
SFTOTALS$ReverseE30_35 <- ((SFTOTALS$ReverseMSAGroup30_35)*log2(1/(SFTOTALS$ReverseMSAGroup30_35)) + (1-(SFTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SFTOTALS$ReverseMSAGroup30_35))))
SFTOTALS$ReverseE35_40 <- ((SFTOTALS$ReverseMSAGroup35_40)*log2(1/(SFTOTALS$ReverseMSAGroup35_40)) + (1-(SFTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(SFTOTALS$ReverseMSAGroup35_40))))


SF$Section200 <- SF$LocalEnt200 / SFTOTALS$TotalEnt200
SF$Section150_200 <- SF$LocalEnt150_200 / SFTOTALS$TotalEnt150_200
SF$Section125_150 <- SF$LocalEnt125_150 / SFTOTALS$TotalEnt125_150
SF$Section100_125 <- SF$LocalEnt100_125 / SFTOTALS$TotalEnt100_125
SF$Section75_100 <- SF$LocalEnt75_100 / SFTOTALS$TotalEnt75_100
SF$Section60_75 <- SF$LocalEnt60_75 / SFTOTALS$TotalEnt60_75
SF$Section50_60 <- SF$LocalEnt50_60 / SFTOTALS$TotalEnt50_60
SF$Section45_50 <- SF$LocalEnt45_50 / SFTOTALS$TotalEnt45_50
SF$Section40_45 <- SF$LocalEnt40_45 / SFTOTALS$TotalEnt40_45
SF$Section35_40 <- SF$LocalEnt35_40 / SFTOTALS$TotalEnt35_40
SF$Section30_35 <- SF$LocalEnt30_35 / SFTOTALS$TotalEnt30_35
SF$Section25_30 <- SF$LocalEnt25_30 / SFTOTALS$TotalEnt25_30
SF$Section20_25 <- SF$LocalEnt20_25 / SFTOTALS$TotalEnt20_25
SF$Section15_20 <- SF$LocalEnt15_20 / SFTOTALS$TotalEnt15_20
SF$Section10_15 <- SF$LocalEnt10_15 / SFTOTALS$TotalEnt10_15
SF$Section10 <- SF$LocalEnt10 / SFTOTALS$TotalEnt10
SF$ReverseSection10 <- SF$ReverseLocalEnt10 / SFTOTALS$ReverseTotalEnt10
SF$ReverseSection10_15 <- SF$ReverseLocalEnt10_15 / SFTOTALS$ReverseTotalEnt10_15
SF$ReverseSection15_20 <- SF$ReverseLocalEnt15_20 / SFTOTALS$ReverseTotalEnt15_20
SF$ReverseSection20_25 <- SF$ReverseLocalEnt20_25 / SFTOTALS$ReverseTotalEnt20_25
SF$ReverseSection25_30 <- SF$ReverseLocalEnt25_30 / SFTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
SF[is.na(SF)] <- 0

SFTOTALS$Percent200 <- 1 - sum(SF$Section200)
SFTOTALS$Percent150_200 <- 1 - sum(SF$Section150_200)
SFTOTALS$Percent125_150 <- 1 - sum(SF$Section125_150)
SFTOTALS$Percent100_125 <- 1 - sum(SF$Section100_125)
SFTOTALS$Percent75_100 <- 1 - sum(SF$Section75_100)
SFTOTALS$Percent60_75 <- 1 - sum(SF$Section60_75)
SFTOTALS$Percent50_60 <- 1 - sum(SF$Section50_60)
SFTOTALS$Percent45_50 <- 1 - sum(SF$Section45_50)
SFTOTALS$Percent40_45 <- 1 - sum(SF$Section40_45)
SFTOTALS$Percent35_40 <- 1 - sum(SF$Section35_40)
SFTOTALS$Percent30_35 <- 1 - sum(SF$Section30_35)
SFTOTALS$Percent25_30 <- 1 - sum(SF$Section25_30)
SFTOTALS$Percent20_25 <- 1 - sum(SF$Section20_25)
SFTOTALS$Percent15_20 <- 1 - sum(SF$Section15_20)
SFTOTALS$Percent10_15 <- 1 - sum(SF$Section10_15)
SFTOTALS$Percent10 <- 1 - sum(SF$Section10)
SFTOTALS$ReversePercent10 <- 1 - sum(SF$ReverseSection10)
SFTOTALS$ReversePercent10_15 <- 1 - sum(SF$ReverseSection10_15)
SFTOTALS$ReversePercent15_20 <- 1 - sum(SF$ReverseSection15_20)
SFTOTALS$ReversePercent20_25 <- 1 - sum(SF$ReverseSection20_25)
SFTOTALS$ReversePercent25_30 <- 1 - sum(SF$ReverseSection25_30)


SFTOTALS$Weight200 <- SFTOTALS$E200 * SFTOTALS$Percent200
SFTOTALS$Weight150_200 <- (SFTOTALS$E150_200 * SFTOTALS$Percent150_200)
SFTOTALS$Weight125_150 <- (SFTOTALS$E125_150 * SFTOTALS$Percent125_150) 
SFTOTALS$Weight100_125 <- (SFTOTALS$E100_125 * SFTOTALS$Percent100_125) 
SFTOTALS$Weight75_100 <- (SFTOTALS$E75_100 * SFTOTALS$Percent75_100)
SFTOTALS$Weight60_75 <- (SFTOTALS$E60_75 * SFTOTALS$Percent60_75) 
SFTOTALS$Weight50_60 <- (SFTOTALS$E50_60 * SFTOTALS$Percent50_60) 
SFTOTALS$Weight45_50 <- (SFTOTALS$E45_50 * SFTOTALS$Percent45_50)
SFTOTALS$Weight40_45 <- (SFTOTALS$E40_45 * SFTOTALS$Percent40_45) 
SFTOTALS$Weight35_40 <- (SFTOTALS$E35_40 * SFTOTALS$Percent35_40) 
SFTOTALS$Weight30_35 <- (SFTOTALS$E30_35 * SFTOTALS$Percent30_35)
SFTOTALS$Weight25_30 <- (SFTOTALS$E25_30 * SFTOTALS$Percent25_30) 
SFTOTALS$Weight20_25 <- (SFTOTALS$E20_25 * SFTOTALS$Percent20_25)
SFTOTALS$Weight15_20 <- (SFTOTALS$E15_20 * SFTOTALS$Percent15_20) 
SFTOTALS$Weight10_15 <- (SFTOTALS$E10_15 * SFTOTALS$Percent10_15) 
SFTOTALS$Weight10 <- (SFTOTALS$E10 * SFTOTALS$Percent10) 
SFTOTALS$ReverseWeight10 <- (SFTOTALS$ReverseE10 * SFTOTALS$ReversePercent10)
SFTOTALS$ReverseWeight10_15 <- (SFTOTALS$ReverseE10_15 * SFTOTALS$ReversePercent10_15)
SFTOTALS$ReverseWeight15_20 <- (SFTOTALS$ReverseE15_20 * SFTOTALS$ReversePercent15_20)
SFTOTALS$ReverseWeight20_25 <- (SFTOTALS$ReverseE20_25 * SFTOTALS$ReversePercent20_25)
SFTOTALS$ReverseWeight25_30 <- (SFTOTALS$ReverseE25_30 * SFTOTALS$ReversePercent25_30)



#trying to recreate the HA stuff I did thru SAS and R
#local

ATL$Group200 <- (ATL$B19001_017/ATL$B19001_001)
ATL$Group150_200 <- (ATL$B19001_017 + ATL$B19001_016)/ATL$B19001_001;
ATL$Group125_150 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015)/ATL$B19001_001;
ATL$Group100_125 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014)/ATL$B19001_001;
ATL$Group75_100 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013)/ATL$B19001_001;
ATL$Group60_75 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012)/ATL$B19001_001;
ATL$Group50_60 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011)/ATL$B19001_001;
ATL$Group45_50 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010)/ATL$B19001_001;
ATL$Group40_45 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009)/ATL$B19001_001;
ATL$Group35_40 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008)/ATL$B19001_001;
ATL$Group30_35 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007)/ATL$B19001_001;
ATL$Group25_30 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007 + ATL$B19001_006)/ATL$B19001_001;
ATL$Group20_25 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007 + ATL$B19001_006 + ATL$B19001_005)/ATL$B19001_001;
ATL$Group15_20 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007 + ATL$B19001_006 + ATL$B19001_005 + ATL$B19001_004)/ATL$B19001_001;
ATL$Group10_15 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007 + ATL$B19001_006 + ATL$B19001_005 + ATL$B19001_004 + ATL$B19001_003)/ATL$B19001_001;
ATL$Group10 <- (ATL$B19001_017 + ATL$B19001_016 + ATL$B19001_015 + ATL$B19001_014 + ATL$B19001_013 + ATL$B19001_012 + ATL$B19001_011 + ATL$B19001_010 + ATL$B19001_009 + ATL$B19001_008 + ATL$B19001_007 + ATL$B19001_006 + ATL$B19001_005 + ATL$B19001_004 + ATL$B19001_003 + ATL$B19001_002)/ATL$B19001_001;
ATL$ReverseGroup10 <- (ATL$B19001_002)/ATL$B19001_001;
ATL$ReverseGroup10_15 <- (ATL$B19001_002 + ATL$B19001_003)/ATL$B19001_001;
ATL$ReverseGroup15_20 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004)/ATL$B19001_001;
ATL$ReverseGroup20_25 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005)/ATL$B19001_001;
ATL$ReverseGroup25_30 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006)/ATL$B19001_001;
ATL$ReverseGroup30_35 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007)/ATL$B19001_001;
ATL$ReverseGroup35_40 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007 + ATL$B19001_008)/ATL$B19001_001;
ATL$ReverseGroup40_45 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007 + ATL$B19001_008 + ATL$B19001_009)/ATL$B19001_001;
ATL$ReverseGroup45_50 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007 + ATL$B19001_008 + ATL$B19001_009 + ATL$B19001_010)/ATL$B19001_001;
ATL$ReverseGroup50_60 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007 + ATL$B19001_008 + ATL$B19001_009 + ATL$B19001_010 + ATL$B19001_011)/ATL$B19001_001;
ATL$ReverseGroup60_75 <- (ATL$B19001_002 + ATL$B19001_003 + ATL$B19001_004 + ATL$B19001_005 + ATL$B19001_006 + ATL$B19001_007 + ATL$B19001_008 + ATL$B19001_009 + ATL$B19001_010 + ATL$B19001_011 + ATL$B19001_012)/ATL$B19001_001;

ATL$LocalEnt200 <- ATL$B19001_001 * ((ATL$Group200)*log2(1/(ATL$Group200)) + 
                                       (1-(ATL$Group200))*log2(1/(1-(ATL$Group200))))

ATL$LocalEnt150_200 <- ATL$B19001_001 * ((ATL$Group150_200)*log2(1/(ATL$Group150_200)) + 
                                           (1-(ATL$Group150_200))*log2(1/(1-(ATL$Group150_200))))

ATL$LocalEnt125_150 <- ATL$B19001_001 * ((ATL$Group125_150)*log2(1/(ATL$Group125_150)) + 
                                           (1-(ATL$Group125_150))*log2(1/(1-(ATL$Group125_150))))

ATL$LocalEnt100_125 <- ATL$B19001_001 * ((ATL$Group100_125)*log2(1/(ATL$Group100_125)) + 
                                           (1-(ATL$Group100_125))*log2(1/(1-(ATL$Group100_125))))

ATL$LocalEnt75_100 <- ATL$B19001_001 * ((ATL$Group75_100)*log2(1/(ATL$Group75_100)) + 
                                          (1-(ATL$Group75_100))*log2(1/(1-(ATL$Group75_100))))

ATL$LocalEnt60_75 <- ATL$B19001_001 * ((ATL$Group60_75)*log2(1/(ATL$Group60_75)) + 
                                         (1-(ATL$Group60_75))*log2(1/(1-(ATL$Group60_75))))

ATL$LocalEnt50_60 <- ATL$B19001_001 * ((ATL$Group50_60)*log2(1/(ATL$Group50_60)) + 
                                         (1-(ATL$Group50_60))*log2(1/(1-(ATL$Group50_60))))

ATL$LocalEnt45_50 <- ATL$B19001_001 * ((ATL$Group45_50)*log2(1/(ATL$Group45_50)) + 
                                         (1-(ATL$Group45_50))*log2(1/(1-(ATL$Group45_50))))

ATL$LocalEnt40_45 <- ATL$B19001_001 * ((ATL$Group40_45)*log2(1/(ATL$Group40_45)) + 
                                         (1-(ATL$Group40_45))*log2(1/(1-(ATL$Group40_45))))

ATL$LocalEnt35_40 <- ATL$B19001_001 * ((ATL$Group35_40)*log2(1/(ATL$Group35_40)) + 
                                         (1-(ATL$Group35_40))*log2(1/(1-(ATL$Group35_40))))

ATL$LocalEnt30_35 <- ATL$B19001_001 * ((ATL$Group30_35)*log2(1/(ATL$Group30_35)) + 
                                         (1-(ATL$Group30_35))*log2(1/(1-(ATL$Group30_35))))

ATL$LocalEnt25_30 <- ATL$B19001_001 * ((ATL$Group25_30)*log2(1/(ATL$Group25_30)) + 
                                         (1-(ATL$Group25_30))*log2(1/(1-(ATL$Group25_30))))

ATL$LocalEnt20_25 <- ATL$B19001_001 * ((ATL$Group20_25)*log2(1/(ATL$Group20_25)) + 
                                         (1-(ATL$Group20_25))*log2(1/(1-(ATL$Group20_25))))

ATL$LocalEnt15_20 <- ATL$B19001_001 * ((ATL$Group15_20)*log2(1/(ATL$Group15_20)) + 
                                         (1-(ATL$Group15_20))*log2(1/(1-(ATL$Group15_20))))

ATL$LocalEnt10_15 <- ATL$B19001_001 * ((ATL$Group10_15)*log2(1/(ATL$Group10_15)) + 
                                         (1-(ATL$Group10_15))*log2(1/(1-(ATL$Group10_15))))

ATL$LocalEnt10 <- ATL$B19001_001 * ((ATL$Group10)*log2(1/(ATL$Group10)) + 
                                      (1-(ATL$Group10))*log2(1/(1-(ATL$Group10))))

ATL$ReverseLocalEnt10 <- ATL$B19001_001 * ((ATL$ReverseGroup10)*log2(1/(ATL$ReverseGroup10)) + 
                                             (1-(ATL$ReverseGroup10))*log2(1/(1-(ATL$ReverseGroup10))))

ATL$ReverseLocalEnt10_15 <- ATL$B19001_001 * ((ATL$ReverseGroup10_15)*log2(1/(ATL$ReverseGroup10_15)) + 
                                                (1-(ATL$ReverseGroup10_15))*log2(1/(1-(ATL$ReverseGroup10_15))))

ATL$ReverseLocalEnt15_20 <- ATL$B19001_001 * ((ATL$ReverseGroup15_20)*log2(1/(ATL$ReverseGroup15_20)) + 
                                                (1-(ATL$ReverseGroup15_20))*log2(1/(1-(ATL$ReverseGroup15_20))))

ATL$ReverseLocalEnt20_25 <- ATL$B19001_001 * ((ATL$ReverseGroup20_25)*log2(1/(ATL$ReverseGroup20_25)) + 
                                                (1-(ATL$ReverseGroup20_25))*log2(1/(1-(ATL$ReverseGroup20_25))))

ATL$ReverseLocalEnt25_30 <- ATL$B19001_001 * ((ATL$ReverseGroup25_30)*log2(1/(ATL$ReverseGroup25_30)) + 
                                                (1-(ATL$ReverseGroup25_30))*log2(1/(1-(ATL$ReverseGroup25_30))))

ATL$ReverseLocalEnt30_35 <- ATL$B19001_001 * ((ATL$ReverseGroup30_35)*log2(1/(ATL$ReverseGroup30_35)) + 
                                                (1-(ATL$ReverseGroup30_35))*log2(1/(1-(ATL$ReverseGroup30_35))))


#HA stuff Total


ATLTOTALS <- ATL %>%
  summarise(MSAB19001_001 = sum(ATL$B19001_001), MSAB19001_002 = sum(ATL$B19001_002), MSAB19001_003 = sum(ATL$B19001_003), MSAB19001_004 = sum(ATL$B19001_004),
            MSAB19001_005 = sum(ATL$B19001_005), MSAB19001_006 = sum(ATL$B19001_006), MSAB19001_007 = sum(ATL$B19001_007),
            MSAB19001_008 = sum(ATL$B19001_008), MSAB19001_009 = sum(ATL$B19001_009), MSAB19001_010 = sum(ATL$B19001_010),
            MSAB19001_011 = sum(ATL$B19001_011), MSAB19001_012 = sum(ATL$B19001_012), MSAB19001_013 = sum(ATL$B19001_013),
            MSAB19001_014 = sum(ATL$B19001_014), MSAB19001_015 = sum(ATL$B19001_015), MSAB19001_016 = sum(ATL$B19001_016),
            MSAB19001_017 = sum(ATL$B19001_017))


ATLTOTALS$MSAGroup200 <- (ATLTOTALS$MSAB19001_017/ATLTOTALS$MSAB19001_001)
ATLTOTALS$MSAGroup150_200 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup125_150 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup100_125 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup75_100 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup60_75 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup50_60 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup45_50 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup40_45 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup35_40 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup30_35 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup25_30 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_006)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup20_25 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_005)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup15_20 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_004)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup10_15 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_003)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$MSAGroup10 <- (ATLTOTALS$MSAB19001_017 + ATLTOTALS$MSAB19001_016 + ATLTOTALS$MSAB19001_015 + ATLTOTALS$MSAB19001_014 + ATLTOTALS$MSAB19001_013 + ATLTOTALS$MSAB19001_012 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_002)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup10 <- (ATLTOTALS$MSAB19001_002)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup10_15 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup15_20 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup20_25 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup25_30 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup30_35 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup35_40 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_008)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup40_45 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_009)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup45_50 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_010)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup50_60 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_011)/ATLTOTALS$MSAB19001_001;
ATLTOTALS$ReverseMSAGroup60_75 <- (ATLTOTALS$MSAB19001_002 + ATLTOTALS$MSAB19001_003 + ATLTOTALS$MSAB19001_004 + ATLTOTALS$MSAB19001_005 + ATLTOTALS$MSAB19001_006 + ATLTOTALS$MSAB19001_007 + ATLTOTALS$MSAB19001_008 + ATLTOTALS$MSAB19001_009 + ATLTOTALS$MSAB19001_010 + ATLTOTALS$MSAB19001_011 + ATLTOTALS$MSAB19001_012)/ATLTOTALS$MSAB19001_001;

ATLTOTALS$TotalEnt200 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup200)*log2(1/(ATLTOTALS$MSAGroup200)) + 
                                                      (1-(ATLTOTALS$MSAGroup200))*log2(1/(1-(ATLTOTALS$MSAGroup200))))

ATLTOTALS$TotalEnt150_200 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup150_200)*log2(1/(ATLTOTALS$MSAGroup150_200)) + 
                                                          (1-(ATLTOTALS$MSAGroup150_200))*log2(1/(1-(ATLTOTALS$MSAGroup150_200))))

ATLTOTALS$TotalEnt125_150 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup125_150)*log2(1/(ATLTOTALS$MSAGroup125_150)) + 
                                                          (1-(ATLTOTALS$MSAGroup125_150))*log2(1/(1-(ATLTOTALS$MSAGroup125_150))))

ATLTOTALS$TotalEnt100_125 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup100_125)*log2(1/(ATLTOTALS$MSAGroup100_125)) + 
                                                          (1-(ATLTOTALS$MSAGroup100_125))*log2(1/(1-(ATLTOTALS$MSAGroup100_125))))

ATLTOTALS$TotalEnt75_100 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup75_100)*log2(1/(ATLTOTALS$MSAGroup75_100)) + 
                                                         (1-(ATLTOTALS$MSAGroup75_100))*log2(1/(1-(ATLTOTALS$MSAGroup75_100))))

ATLTOTALS$TotalEnt60_75 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup60_75)*log2(1/(ATLTOTALS$MSAGroup60_75)) + 
                                                        (1-(ATLTOTALS$MSAGroup60_75))*log2(1/(1-(ATLTOTALS$MSAGroup60_75))))

ATLTOTALS$TotalEnt50_60 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup50_60)*log2(1/(ATLTOTALS$MSAGroup50_60)) + 
                                                        (1-(ATLTOTALS$MSAGroup50_60))*log2(1/(1-(ATLTOTALS$MSAGroup50_60))))

ATLTOTALS$TotalEnt45_50 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup45_50)*log2(1/(ATLTOTALS$MSAGroup45_50)) + 
                                                        (1-(ATLTOTALS$MSAGroup45_50))*log2(1/(1-(ATLTOTALS$MSAGroup45_50))))

ATLTOTALS$TotalEnt40_45 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup40_45)*log2(1/(ATLTOTALS$MSAGroup40_45)) + 
                                                        (1-(ATLTOTALS$MSAGroup40_45))*log2(1/(1-(ATLTOTALS$MSAGroup40_45))))

ATLTOTALS$TotalEnt35_40 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup35_40)*log2(1/(ATLTOTALS$MSAGroup35_40)) + 
                                                        (1-(ATLTOTALS$MSAGroup35_40))*log2(1/(1-(ATLTOTALS$MSAGroup35_40))))

ATLTOTALS$TotalEnt30_35 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup30_35)*log2(1/(ATLTOTALS$MSAGroup30_35)) + 
                                                        (1-(ATLTOTALS$MSAGroup30_35))*log2(1/(1-(ATLTOTALS$MSAGroup30_35))))

ATLTOTALS$TotalEnt25_30 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup25_30)*log2(1/(ATLTOTALS$MSAGroup25_30)) + 
                                                        (1-(ATLTOTALS$MSAGroup25_30))*log2(1/(1-(ATLTOTALS$MSAGroup25_30))))

ATLTOTALS$TotalEnt20_25 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup20_25)*log2(1/(ATLTOTALS$MSAGroup20_25)) + 
                                                        (1-(ATLTOTALS$MSAGroup20_25))*log2(1/(1-(ATLTOTALS$MSAGroup20_25))))

ATLTOTALS$TotalEnt15_20 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup15_20)*log2(1/(ATLTOTALS$MSAGroup15_20)) + 
                                                        (1-(ATLTOTALS$MSAGroup15_20))*log2(1/(1-(ATLTOTALS$MSAGroup15_20))))

ATLTOTALS$TotalEnt10_15 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup10_15)*log2(1/(ATLTOTALS$MSAGroup10_15)) + 
                                                        (1-(ATLTOTALS$MSAGroup10_15))*log2(1/(1-(ATLTOTALS$MSAGroup10_15))))

ATLTOTALS$TotalEnt10 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$MSAGroup10)*log2(1/(ATLTOTALS$MSAGroup10)) + 
                                                     (1-(ATLTOTALS$MSAGroup10))*log2(1/(1-(ATLTOTALS$MSAGroup10))))

ATLTOTALS$ReverseTotalEnt10 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup10)*log2(1/(ATLTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(ATLTOTALS$ReverseMSAGroup10))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup10))))

ATLTOTALS$ReverseTotalEnt10_15 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup10_15)*log2(1/(ATLTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(ATLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup10_15))))

ATLTOTALS$ReverseTotalEnt15_20 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup15_20)*log2(1/(ATLTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(ATLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup15_20))))

ATLTOTALS$ReverseTotalEnt20_25 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup20_25)*log2(1/(ATLTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(ATLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup20_25))))

ATLTOTALS$ReverseTotalEnt25_30 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup25_30)*log2(1/(ATLTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(ATLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup25_30))))

ATLTOTALS$ReverseTotalEnt30_35 <- ATLTOTALS$MSAB19001_001 * ((ATLTOTALS$ReverseMSAGroup30_35)*log2(1/(ATLTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(ATLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
ATLTOTALS$E200 <- ((ATLTOTALS$MSAGroup200)*log2(1/(ATLTOTALS$MSAGroup200)) + (1-(ATLTOTALS$MSAGroup200))*log2(1/(1-(ATLTOTALS$MSAGroup200))))
ATLTOTALS$E150_200 <- ((ATLTOTALS$MSAGroup150_200)*log2(1/(ATLTOTALS$MSAGroup150_200)) + (1-(ATLTOTALS$MSAGroup150_200))*log2(1/(1-(ATLTOTALS$MSAGroup150_200))))
ATLTOTALS$E125_150 <- ((ATLTOTALS$MSAGroup125_150)*log2(1/(ATLTOTALS$MSAGroup125_150)) + (1-(ATLTOTALS$MSAGroup125_150))*log2(1/(1-(ATLTOTALS$MSAGroup125_150))))
ATLTOTALS$E100_125 <- ((ATLTOTALS$MSAGroup100_125)*log2(1/(ATLTOTALS$MSAGroup100_125)) + (1-(ATLTOTALS$MSAGroup100_125))*log2(1/(1-(ATLTOTALS$MSAGroup100_125))))
ATLTOTALS$E75_100 <- ((ATLTOTALS$MSAGroup75_100)*log2(1/(ATLTOTALS$MSAGroup75_100)) + (1-(ATLTOTALS$MSAGroup75_100))*log2(1/(1-(ATLTOTALS$MSAGroup75_100))))
ATLTOTALS$E60_75 <- ((ATLTOTALS$MSAGroup60_75)*log2(1/(ATLTOTALS$MSAGroup60_75)) + (1-(ATLTOTALS$MSAGroup60_75))*log2(1/(1-(ATLTOTALS$MSAGroup60_75))))
ATLTOTALS$E50_60 <- ((ATLTOTALS$MSAGroup50_60)*log2(1/(ATLTOTALS$MSAGroup50_60)) + (1-(ATLTOTALS$MSAGroup50_60))*log2(1/(1-(ATLTOTALS$MSAGroup50_60))))
ATLTOTALS$E50_60 <- ((ATLTOTALS$MSAGroup50_60)*log2(1/(ATLTOTALS$MSAGroup50_60)) + (1-(ATLTOTALS$MSAGroup50_60))*log2(1/(1-(ATLTOTALS$MSAGroup50_60))))
ATLTOTALS$E45_50 <- ((ATLTOTALS$MSAGroup45_50)*log2(1/(ATLTOTALS$MSAGroup45_50)) + (1-(ATLTOTALS$MSAGroup45_50))*log2(1/(1-(ATLTOTALS$MSAGroup45_50))))
ATLTOTALS$E40_45 <- ((ATLTOTALS$MSAGroup40_45)*log2(1/(ATLTOTALS$MSAGroup40_45)) + (1-(ATLTOTALS$MSAGroup40_45))*log2(1/(1-(ATLTOTALS$MSAGroup40_45))))
ATLTOTALS$E35_40 <- ((ATLTOTALS$MSAGroup35_40)*log2(1/(ATLTOTALS$MSAGroup35_40)) + (1-(ATLTOTALS$MSAGroup35_40))*log2(1/(1-(ATLTOTALS$MSAGroup35_40))))
ATLTOTALS$E30_35 <- ((ATLTOTALS$MSAGroup30_35)*log2(1/(ATLTOTALS$MSAGroup30_35)) + (1-(ATLTOTALS$MSAGroup30_35))*log2(1/(1-(ATLTOTALS$MSAGroup30_35))))
ATLTOTALS$E25_30 <- ((ATLTOTALS$MSAGroup25_30)*log2(1/(ATLTOTALS$MSAGroup25_30)) + (1-(ATLTOTALS$MSAGroup25_30))*log2(1/(1-(ATLTOTALS$MSAGroup25_30))))
ATLTOTALS$E20_25 <- ((ATLTOTALS$MSAGroup20_25)*log2(1/(ATLTOTALS$MSAGroup20_25)) + (1-(ATLTOTALS$MSAGroup20_25))*log2(1/(1-(ATLTOTALS$MSAGroup20_25))))
ATLTOTALS$E15_20 <- ((ATLTOTALS$MSAGroup15_20)*log2(1/(ATLTOTALS$MSAGroup15_20)) + (1-(ATLTOTALS$MSAGroup15_20))*log2(1/(1-(ATLTOTALS$MSAGroup15_20))))
ATLTOTALS$E10_15 <- ((ATLTOTALS$MSAGroup10_15)*log2(1/(ATLTOTALS$MSAGroup10_15)) + (1-(ATLTOTALS$MSAGroup10_15))*log2(1/(1-(ATLTOTALS$MSAGroup10_15))))
ATLTOTALS$E10 <- ((ATLTOTALS$MSAGroup10)*log2(1/(ATLTOTALS$MSAGroup10)) + (1-(ATLTOTALS$MSAGroup10))*log2(1/(1-(ATLTOTALS$MSAGroup10))))
ATLTOTALS$ReverseE10 <- ((ATLTOTALS$ReverseMSAGroup10)*log2(1/(ATLTOTALS$ReverseMSAGroup10)) + (1-(ATLTOTALS$ReverseMSAGroup10))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup10))))
ATLTOTALS$ReverseE10_15 <- ((ATLTOTALS$ReverseMSAGroup10_15)*log2(1/(ATLTOTALS$ReverseMSAGroup10_15)) + (1-(ATLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup10_15))))
ATLTOTALS$ReverseE15_20 <- ((ATLTOTALS$ReverseMSAGroup15_20)*log2(1/(ATLTOTALS$ReverseMSAGroup15_20)) + (1-(ATLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup15_20))))
ATLTOTALS$ReverseE20_25 <- ((ATLTOTALS$ReverseMSAGroup20_25)*log2(1/(ATLTOTALS$ReverseMSAGroup20_25)) + (1-(ATLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup20_25))))
ATLTOTALS$ReverseE25_30 <- ((ATLTOTALS$ReverseMSAGroup25_30)*log2(1/(ATLTOTALS$ReverseMSAGroup25_30)) + (1-(ATLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup25_30))))
ATLTOTALS$ReverseE30_35 <- ((ATLTOTALS$ReverseMSAGroup30_35)*log2(1/(ATLTOTALS$ReverseMSAGroup30_35)) + (1-(ATLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup30_35))))
ATLTOTALS$ReverseE35_40 <- ((ATLTOTALS$ReverseMSAGroup35_40)*log2(1/(ATLTOTALS$ReverseMSAGroup35_40)) + (1-(ATLTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(ATLTOTALS$ReverseMSAGroup35_40))))


ATL$Section200 <- ATL$LocalEnt200 / ATLTOTALS$TotalEnt200
ATL$Section150_200 <- ATL$LocalEnt150_200 / ATLTOTALS$TotalEnt150_200
ATL$Section125_150 <- ATL$LocalEnt125_150 / ATLTOTALS$TotalEnt125_150
ATL$Section100_125 <- ATL$LocalEnt100_125 / ATLTOTALS$TotalEnt100_125
ATL$Section75_100 <- ATL$LocalEnt75_100 / ATLTOTALS$TotalEnt75_100
ATL$Section60_75 <- ATL$LocalEnt60_75 / ATLTOTALS$TotalEnt60_75
ATL$Section50_60 <- ATL$LocalEnt50_60 / ATLTOTALS$TotalEnt50_60
ATL$Section45_50 <- ATL$LocalEnt45_50 / ATLTOTALS$TotalEnt45_50
ATL$Section40_45 <- ATL$LocalEnt40_45 / ATLTOTALS$TotalEnt40_45
ATL$Section35_40 <- ATL$LocalEnt35_40 / ATLTOTALS$TotalEnt35_40
ATL$Section30_35 <- ATL$LocalEnt30_35 / ATLTOTALS$TotalEnt30_35
ATL$Section25_30 <- ATL$LocalEnt25_30 / ATLTOTALS$TotalEnt25_30
ATL$Section20_25 <- ATL$LocalEnt20_25 / ATLTOTALS$TotalEnt20_25
ATL$Section15_20 <- ATL$LocalEnt15_20 / ATLTOTALS$TotalEnt15_20
ATL$Section10_15 <- ATL$LocalEnt10_15 / ATLTOTALS$TotalEnt10_15
ATL$Section10 <- ATL$LocalEnt10 / ATLTOTALS$TotalEnt10
ATL$ReverseSection10 <- ATL$ReverseLocalEnt10 / ATLTOTALS$ReverseTotalEnt10
ATL$ReverseSection10_15 <- ATL$ReverseLocalEnt10_15 / ATLTOTALS$ReverseTotalEnt10_15
ATL$ReverseSection15_20 <- ATL$ReverseLocalEnt15_20 / ATLTOTALS$ReverseTotalEnt15_20
ATL$ReverseSection20_25 <- ATL$ReverseLocalEnt20_25 / ATLTOTALS$ReverseTotalEnt20_25
ATL$ReverseSection25_30 <- ATL$ReverseLocalEnt25_30 / ATLTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
ATL[is.na(ATL)] <- 0

ATLTOTALS$Percent200 <- 1 - sum(ATL$Section200)
ATLTOTALS$Percent150_200 <- 1 - sum(ATL$Section150_200)
ATLTOTALS$Percent125_150 <- 1 - sum(ATL$Section125_150)
ATLTOTALS$Percent100_125 <- 1 - sum(ATL$Section100_125)
ATLTOTALS$Percent75_100 <- 1 - sum(ATL$Section75_100)
ATLTOTALS$Percent60_75 <- 1 - sum(ATL$Section60_75)
ATLTOTALS$Percent50_60 <- 1 - sum(ATL$Section50_60)
ATLTOTALS$Percent45_50 <- 1 - sum(ATL$Section45_50)
ATLTOTALS$Percent40_45 <- 1 - sum(ATL$Section40_45)
ATLTOTALS$Percent35_40 <- 1 - sum(ATL$Section35_40)
ATLTOTALS$Percent30_35 <- 1 - sum(ATL$Section30_35)
ATLTOTALS$Percent25_30 <- 1 - sum(ATL$Section25_30)
ATLTOTALS$Percent20_25 <- 1 - sum(ATL$Section20_25)
ATLTOTALS$Percent15_20 <- 1 - sum(ATL$Section15_20)
ATLTOTALS$Percent10_15 <- 1 - sum(ATL$Section10_15)
ATLTOTALS$Percent10 <- 1 - sum(ATL$Section10)
ATLTOTALS$ReversePercent10 <- 1 - sum(ATL$ReverseSection10)
ATLTOTALS$ReversePercent10_15 <- 1 - sum(ATL$ReverseSection10_15)
ATLTOTALS$ReversePercent15_20 <- 1 - sum(ATL$ReverseSection15_20)
ATLTOTALS$ReversePercent20_25 <- 1 - sum(ATL$ReverseSection20_25)
ATLTOTALS$ReversePercent25_30 <- 1 - sum(ATL$ReverseSection25_30)


ATLTOTALS$Weight200 <- ATLTOTALS$E200 * ATLTOTALS$Percent200
ATLTOTALS$Weight150_200 <- (ATLTOTALS$E150_200 * ATLTOTALS$Percent150_200)
ATLTOTALS$Weight125_150 <- (ATLTOTALS$E125_150 * ATLTOTALS$Percent125_150) 
ATLTOTALS$Weight100_125 <- (ATLTOTALS$E100_125 * ATLTOTALS$Percent100_125) 
ATLTOTALS$Weight75_100 <- (ATLTOTALS$E75_100 * ATLTOTALS$Percent75_100)
ATLTOTALS$Weight60_75 <- (ATLTOTALS$E60_75 * ATLTOTALS$Percent60_75) 
ATLTOTALS$Weight50_60 <- (ATLTOTALS$E50_60 * ATLTOTALS$Percent50_60) 
ATLTOTALS$Weight45_50 <- (ATLTOTALS$E45_50 * ATLTOTALS$Percent45_50)
ATLTOTALS$Weight40_45 <- (ATLTOTALS$E40_45 * ATLTOTALS$Percent40_45) 
ATLTOTALS$Weight35_40 <- (ATLTOTALS$E35_40 * ATLTOTALS$Percent35_40) 
ATLTOTALS$Weight30_35 <- (ATLTOTALS$E30_35 * ATLTOTALS$Percent30_35)
ATLTOTALS$Weight25_30 <- (ATLTOTALS$E25_30 * ATLTOTALS$Percent25_30) 
ATLTOTALS$Weight20_25 <- (ATLTOTALS$E20_25 * ATLTOTALS$Percent20_25)
ATLTOTALS$Weight15_20 <- (ATLTOTALS$E15_20 * ATLTOTALS$Percent15_20) 
ATLTOTALS$Weight10_15 <- (ATLTOTALS$E10_15 * ATLTOTALS$Percent10_15) 
ATLTOTALS$Weight10 <- (ATLTOTALS$E10 * ATLTOTALS$Percent10) 
ATLTOTALS$ReverseWeight10 <- (ATLTOTALS$ReverseE10 * ATLTOTALS$ReversePercent10)
ATLTOTALS$ReverseWeight10_15 <- (ATLTOTALS$ReverseE10_15 * ATLTOTALS$ReversePercent10_15)
ATLTOTALS$ReverseWeight15_20 <- (ATLTOTALS$ReverseE15_20 * ATLTOTALS$ReversePercent15_20)
ATLTOTALS$ReverseWeight20_25 <- (ATLTOTALS$ReverseE20_25 * ATLTOTALS$ReversePercent20_25)
ATLTOTALS$ReverseWeight25_30 <- (ATLTOTALS$ReverseE25_30 * ATLTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

DT$Group200 <- (DT$B19001_017/DT$B19001_001)
DT$Group150_200 <- (DT$B19001_017 + DT$B19001_016)/DT$B19001_001;
DT$Group125_150 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015)/DT$B19001_001;
DT$Group100_125 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014)/DT$B19001_001;
DT$Group75_100 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013)/DT$B19001_001;
DT$Group60_75 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012)/DT$B19001_001;
DT$Group50_60 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011)/DT$B19001_001;
DT$Group45_50 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010)/DT$B19001_001;
DT$Group40_45 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009)/DT$B19001_001;
DT$Group35_40 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008)/DT$B19001_001;
DT$Group30_35 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007)/DT$B19001_001;
DT$Group25_30 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007 + DT$B19001_006)/DT$B19001_001;
DT$Group20_25 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007 + DT$B19001_006 + DT$B19001_005)/DT$B19001_001;
DT$Group15_20 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007 + DT$B19001_006 + DT$B19001_005 + DT$B19001_004)/DT$B19001_001;
DT$Group10_15 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007 + DT$B19001_006 + DT$B19001_005 + DT$B19001_004 + DT$B19001_003)/DT$B19001_001;
DT$Group10 <- (DT$B19001_017 + DT$B19001_016 + DT$B19001_015 + DT$B19001_014 + DT$B19001_013 + DT$B19001_012 + DT$B19001_011 + DT$B19001_010 + DT$B19001_009 + DT$B19001_008 + DT$B19001_007 + DT$B19001_006 + DT$B19001_005 + DT$B19001_004 + DT$B19001_003 + DT$B19001_002)/DT$B19001_001;
DT$ReverseGroup10 <- (DT$B19001_002)/DT$B19001_001;
DT$ReverseGroup10_15 <- (DT$B19001_002 + DT$B19001_003)/DT$B19001_001;
DT$ReverseGroup15_20 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004)/DT$B19001_001;
DT$ReverseGroup20_25 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005)/DT$B19001_001;
DT$ReverseGroup25_30 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006)/DT$B19001_001;
DT$ReverseGroup30_35 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007)/DT$B19001_001;
DT$ReverseGroup35_40 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007 + DT$B19001_008)/DT$B19001_001;
DT$ReverseGroup40_45 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007 + DT$B19001_008 + DT$B19001_009)/DT$B19001_001;
DT$ReverseGroup45_50 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007 + DT$B19001_008 + DT$B19001_009 + DT$B19001_010)/DT$B19001_001;
DT$ReverseGroup50_60 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007 + DT$B19001_008 + DT$B19001_009 + DT$B19001_010 + DT$B19001_011)/DT$B19001_001;
DT$ReverseGroup60_75 <- (DT$B19001_002 + DT$B19001_003 + DT$B19001_004 + DT$B19001_005 + DT$B19001_006 + DT$B19001_007 + DT$B19001_008 + DT$B19001_009 + DT$B19001_010 + DT$B19001_011 + DT$B19001_012)/DT$B19001_001;

DT$LocalEnt200 <- DT$B19001_001 * ((DT$Group200)*log2(1/(DT$Group200)) + 
                                     (1-(DT$Group200))*log2(1/(1-(DT$Group200))))

DT$LocalEnt150_200 <- DT$B19001_001 * ((DT$Group150_200)*log2(1/(DT$Group150_200)) + 
                                         (1-(DT$Group150_200))*log2(1/(1-(DT$Group150_200))))

DT$LocalEnt125_150 <- DT$B19001_001 * ((DT$Group125_150)*log2(1/(DT$Group125_150)) + 
                                         (1-(DT$Group125_150))*log2(1/(1-(DT$Group125_150))))

DT$LocalEnt100_125 <- DT$B19001_001 * ((DT$Group100_125)*log2(1/(DT$Group100_125)) + 
                                         (1-(DT$Group100_125))*log2(1/(1-(DT$Group100_125))))

DT$LocalEnt75_100 <- DT$B19001_001 * ((DT$Group75_100)*log2(1/(DT$Group75_100)) + 
                                        (1-(DT$Group75_100))*log2(1/(1-(DT$Group75_100))))

DT$LocalEnt60_75 <- DT$B19001_001 * ((DT$Group60_75)*log2(1/(DT$Group60_75)) + 
                                       (1-(DT$Group60_75))*log2(1/(1-(DT$Group60_75))))

DT$LocalEnt50_60 <- DT$B19001_001 * ((DT$Group50_60)*log2(1/(DT$Group50_60)) + 
                                       (1-(DT$Group50_60))*log2(1/(1-(DT$Group50_60))))

DT$LocalEnt45_50 <- DT$B19001_001 * ((DT$Group45_50)*log2(1/(DT$Group45_50)) + 
                                       (1-(DT$Group45_50))*log2(1/(1-(DT$Group45_50))))

DT$LocalEnt40_45 <- DT$B19001_001 * ((DT$Group40_45)*log2(1/(DT$Group40_45)) + 
                                       (1-(DT$Group40_45))*log2(1/(1-(DT$Group40_45))))

DT$LocalEnt35_40 <- DT$B19001_001 * ((DT$Group35_40)*log2(1/(DT$Group35_40)) + 
                                       (1-(DT$Group35_40))*log2(1/(1-(DT$Group35_40))))

DT$LocalEnt30_35 <- DT$B19001_001 * ((DT$Group30_35)*log2(1/(DT$Group30_35)) + 
                                       (1-(DT$Group30_35))*log2(1/(1-(DT$Group30_35))))

DT$LocalEnt25_30 <- DT$B19001_001 * ((DT$Group25_30)*log2(1/(DT$Group25_30)) + 
                                       (1-(DT$Group25_30))*log2(1/(1-(DT$Group25_30))))

DT$LocalEnt20_25 <- DT$B19001_001 * ((DT$Group20_25)*log2(1/(DT$Group20_25)) + 
                                       (1-(DT$Group20_25))*log2(1/(1-(DT$Group20_25))))

DT$LocalEnt15_20 <- DT$B19001_001 * ((DT$Group15_20)*log2(1/(DT$Group15_20)) + 
                                       (1-(DT$Group15_20))*log2(1/(1-(DT$Group15_20))))

DT$LocalEnt10_15 <- DT$B19001_001 * ((DT$Group10_15)*log2(1/(DT$Group10_15)) + 
                                       (1-(DT$Group10_15))*log2(1/(1-(DT$Group10_15))))

DT$LocalEnt10 <- DT$B19001_001 * ((DT$Group10)*log2(1/(DT$Group10)) + 
                                    (1-(DT$Group10))*log2(1/(1-(DT$Group10))))

DT$ReverseLocalEnt10 <- DT$B19001_001 * ((DT$ReverseGroup10)*log2(1/(DT$ReverseGroup10)) + 
                                           (1-(DT$ReverseGroup10))*log2(1/(1-(DT$ReverseGroup10))))

DT$ReverseLocalEnt10_15 <- DT$B19001_001 * ((DT$ReverseGroup10_15)*log2(1/(DT$ReverseGroup10_15)) + 
                                              (1-(DT$ReverseGroup10_15))*log2(1/(1-(DT$ReverseGroup10_15))))

DT$ReverseLocalEnt15_20 <- DT$B19001_001 * ((DT$ReverseGroup15_20)*log2(1/(DT$ReverseGroup15_20)) + 
                                              (1-(DT$ReverseGroup15_20))*log2(1/(1-(DT$ReverseGroup15_20))))

DT$ReverseLocalEnt20_25 <- DT$B19001_001 * ((DT$ReverseGroup20_25)*log2(1/(DT$ReverseGroup20_25)) + 
                                              (1-(DT$ReverseGroup20_25))*log2(1/(1-(DT$ReverseGroup20_25))))

DT$ReverseLocalEnt25_30 <- DT$B19001_001 * ((DT$ReverseGroup25_30)*log2(1/(DT$ReverseGroup25_30)) + 
                                              (1-(DT$ReverseGroup25_30))*log2(1/(1-(DT$ReverseGroup25_30))))

DT$ReverseLocalEnt30_35 <- DT$B19001_001 * ((DT$ReverseGroup30_35)*log2(1/(DT$ReverseGroup30_35)) + 
                                              (1-(DT$ReverseGroup30_35))*log2(1/(1-(DT$ReverseGroup30_35))))


#HA stuff Total


DTTOTALS <- DT %>%
  summarise(MSAB19001_001 = sum(DT$B19001_001), MSAB19001_002 = sum(DT$B19001_002), MSAB19001_003 = sum(DT$B19001_003), MSAB19001_004 = sum(DT$B19001_004),
            MSAB19001_005 = sum(DT$B19001_005), MSAB19001_006 = sum(DT$B19001_006), MSAB19001_007 = sum(DT$B19001_007),
            MSAB19001_008 = sum(DT$B19001_008), MSAB19001_009 = sum(DT$B19001_009), MSAB19001_010 = sum(DT$B19001_010),
            MSAB19001_011 = sum(DT$B19001_011), MSAB19001_012 = sum(DT$B19001_012), MSAB19001_013 = sum(DT$B19001_013),
            MSAB19001_014 = sum(DT$B19001_014), MSAB19001_015 = sum(DT$B19001_015), MSAB19001_016 = sum(DT$B19001_016),
            MSAB19001_017 = sum(DT$B19001_017))


DTTOTALS$MSAGroup200 <- (DTTOTALS$MSAB19001_017/DTTOTALS$MSAB19001_001)
DTTOTALS$MSAGroup150_200 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup125_150 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup100_125 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup75_100 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup60_75 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup50_60 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup45_50 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup40_45 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup35_40 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup30_35 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup25_30 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_006)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup20_25 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_005)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup15_20 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_004)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup10_15 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_003)/DTTOTALS$MSAB19001_001;
DTTOTALS$MSAGroup10 <- (DTTOTALS$MSAB19001_017 + DTTOTALS$MSAB19001_016 + DTTOTALS$MSAB19001_015 + DTTOTALS$MSAB19001_014 + DTTOTALS$MSAB19001_013 + DTTOTALS$MSAB19001_012 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_002)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup10 <- (DTTOTALS$MSAB19001_002)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup10_15 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup15_20 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup20_25 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup25_30 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup30_35 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup35_40 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_008)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup40_45 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_009)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup45_50 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_010)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup50_60 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_011)/DTTOTALS$MSAB19001_001;
DTTOTALS$ReverseMSAGroup60_75 <- (DTTOTALS$MSAB19001_002 + DTTOTALS$MSAB19001_003 + DTTOTALS$MSAB19001_004 + DTTOTALS$MSAB19001_005 + DTTOTALS$MSAB19001_006 + DTTOTALS$MSAB19001_007 + DTTOTALS$MSAB19001_008 + DTTOTALS$MSAB19001_009 + DTTOTALS$MSAB19001_010 + DTTOTALS$MSAB19001_011 + DTTOTALS$MSAB19001_012)/DTTOTALS$MSAB19001_001;

DTTOTALS$TotalEnt200 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup200)*log2(1/(DTTOTALS$MSAGroup200)) + 
                                                    (1-(DTTOTALS$MSAGroup200))*log2(1/(1-(DTTOTALS$MSAGroup200))))

DTTOTALS$TotalEnt150_200 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup150_200)*log2(1/(DTTOTALS$MSAGroup150_200)) + 
                                                        (1-(DTTOTALS$MSAGroup150_200))*log2(1/(1-(DTTOTALS$MSAGroup150_200))))

DTTOTALS$TotalEnt125_150 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup125_150)*log2(1/(DTTOTALS$MSAGroup125_150)) + 
                                                        (1-(DTTOTALS$MSAGroup125_150))*log2(1/(1-(DTTOTALS$MSAGroup125_150))))

DTTOTALS$TotalEnt100_125 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup100_125)*log2(1/(DTTOTALS$MSAGroup100_125)) + 
                                                        (1-(DTTOTALS$MSAGroup100_125))*log2(1/(1-(DTTOTALS$MSAGroup100_125))))

DTTOTALS$TotalEnt75_100 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup75_100)*log2(1/(DTTOTALS$MSAGroup75_100)) + 
                                                       (1-(DTTOTALS$MSAGroup75_100))*log2(1/(1-(DTTOTALS$MSAGroup75_100))))

DTTOTALS$TotalEnt60_75 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup60_75)*log2(1/(DTTOTALS$MSAGroup60_75)) + 
                                                      (1-(DTTOTALS$MSAGroup60_75))*log2(1/(1-(DTTOTALS$MSAGroup60_75))))

DTTOTALS$TotalEnt50_60 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup50_60)*log2(1/(DTTOTALS$MSAGroup50_60)) + 
                                                      (1-(DTTOTALS$MSAGroup50_60))*log2(1/(1-(DTTOTALS$MSAGroup50_60))))

DTTOTALS$TotalEnt45_50 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup45_50)*log2(1/(DTTOTALS$MSAGroup45_50)) + 
                                                      (1-(DTTOTALS$MSAGroup45_50))*log2(1/(1-(DTTOTALS$MSAGroup45_50))))

DTTOTALS$TotalEnt40_45 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup40_45)*log2(1/(DTTOTALS$MSAGroup40_45)) + 
                                                      (1-(DTTOTALS$MSAGroup40_45))*log2(1/(1-(DTTOTALS$MSAGroup40_45))))

DTTOTALS$TotalEnt35_40 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup35_40)*log2(1/(DTTOTALS$MSAGroup35_40)) + 
                                                      (1-(DTTOTALS$MSAGroup35_40))*log2(1/(1-(DTTOTALS$MSAGroup35_40))))

DTTOTALS$TotalEnt30_35 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup30_35)*log2(1/(DTTOTALS$MSAGroup30_35)) + 
                                                      (1-(DTTOTALS$MSAGroup30_35))*log2(1/(1-(DTTOTALS$MSAGroup30_35))))

DTTOTALS$TotalEnt25_30 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup25_30)*log2(1/(DTTOTALS$MSAGroup25_30)) + 
                                                      (1-(DTTOTALS$MSAGroup25_30))*log2(1/(1-(DTTOTALS$MSAGroup25_30))))

DTTOTALS$TotalEnt20_25 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup20_25)*log2(1/(DTTOTALS$MSAGroup20_25)) + 
                                                      (1-(DTTOTALS$MSAGroup20_25))*log2(1/(1-(DTTOTALS$MSAGroup20_25))))

DTTOTALS$TotalEnt15_20 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup15_20)*log2(1/(DTTOTALS$MSAGroup15_20)) + 
                                                      (1-(DTTOTALS$MSAGroup15_20))*log2(1/(1-(DTTOTALS$MSAGroup15_20))))

DTTOTALS$TotalEnt10_15 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup10_15)*log2(1/(DTTOTALS$MSAGroup10_15)) + 
                                                      (1-(DTTOTALS$MSAGroup10_15))*log2(1/(1-(DTTOTALS$MSAGroup10_15))))

DTTOTALS$TotalEnt10 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$MSAGroup10)*log2(1/(DTTOTALS$MSAGroup10)) + 
                                                   (1-(DTTOTALS$MSAGroup10))*log2(1/(1-(DTTOTALS$MSAGroup10))))

DTTOTALS$ReverseTotalEnt10 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup10)*log2(1/(DTTOTALS$ReverseMSAGroup10)) + 
                                                          (1-(DTTOTALS$ReverseMSAGroup10))*log2(1/(1-(DTTOTALS$ReverseMSAGroup10))))

DTTOTALS$ReverseTotalEnt10_15 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup10_15)*log2(1/(DTTOTALS$ReverseMSAGroup10_15)) + 
                                                             (1-(DTTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DTTOTALS$ReverseMSAGroup10_15))))

DTTOTALS$ReverseTotalEnt15_20 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup15_20)*log2(1/(DTTOTALS$ReverseMSAGroup15_20)) + 
                                                             (1-(DTTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DTTOTALS$ReverseMSAGroup15_20))))

DTTOTALS$ReverseTotalEnt20_25 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup20_25)*log2(1/(DTTOTALS$ReverseMSAGroup20_25)) + 
                                                             (1-(DTTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DTTOTALS$ReverseMSAGroup20_25))))

DTTOTALS$ReverseTotalEnt25_30 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup25_30)*log2(1/(DTTOTALS$ReverseMSAGroup25_30)) + 
                                                             (1-(DTTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DTTOTALS$ReverseMSAGroup25_30))))

DTTOTALS$ReverseTotalEnt30_35 <- DTTOTALS$MSAB19001_001 * ((DTTOTALS$ReverseMSAGroup30_35)*log2(1/(DTTOTALS$ReverseMSAGroup30_35)) + 
                                                             (1-(DTTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DTTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
DTTOTALS$E200 <- ((DTTOTALS$MSAGroup200)*log2(1/(DTTOTALS$MSAGroup200)) + (1-(DTTOTALS$MSAGroup200))*log2(1/(1-(DTTOTALS$MSAGroup200))))
DTTOTALS$E150_200 <- ((DTTOTALS$MSAGroup150_200)*log2(1/(DTTOTALS$MSAGroup150_200)) + (1-(DTTOTALS$MSAGroup150_200))*log2(1/(1-(DTTOTALS$MSAGroup150_200))))
DTTOTALS$E125_150 <- ((DTTOTALS$MSAGroup125_150)*log2(1/(DTTOTALS$MSAGroup125_150)) + (1-(DTTOTALS$MSAGroup125_150))*log2(1/(1-(DTTOTALS$MSAGroup125_150))))
DTTOTALS$E100_125 <- ((DTTOTALS$MSAGroup100_125)*log2(1/(DTTOTALS$MSAGroup100_125)) + (1-(DTTOTALS$MSAGroup100_125))*log2(1/(1-(DTTOTALS$MSAGroup100_125))))
DTTOTALS$E75_100 <- ((DTTOTALS$MSAGroup75_100)*log2(1/(DTTOTALS$MSAGroup75_100)) + (1-(DTTOTALS$MSAGroup75_100))*log2(1/(1-(DTTOTALS$MSAGroup75_100))))
DTTOTALS$E60_75 <- ((DTTOTALS$MSAGroup60_75)*log2(1/(DTTOTALS$MSAGroup60_75)) + (1-(DTTOTALS$MSAGroup60_75))*log2(1/(1-(DTTOTALS$MSAGroup60_75))))
DTTOTALS$E50_60 <- ((DTTOTALS$MSAGroup50_60)*log2(1/(DTTOTALS$MSAGroup50_60)) + (1-(DTTOTALS$MSAGroup50_60))*log2(1/(1-(DTTOTALS$MSAGroup50_60))))
DTTOTALS$E50_60 <- ((DTTOTALS$MSAGroup50_60)*log2(1/(DTTOTALS$MSAGroup50_60)) + (1-(DTTOTALS$MSAGroup50_60))*log2(1/(1-(DTTOTALS$MSAGroup50_60))))
DTTOTALS$E45_50 <- ((DTTOTALS$MSAGroup45_50)*log2(1/(DTTOTALS$MSAGroup45_50)) + (1-(DTTOTALS$MSAGroup45_50))*log2(1/(1-(DTTOTALS$MSAGroup45_50))))
DTTOTALS$E40_45 <- ((DTTOTALS$MSAGroup40_45)*log2(1/(DTTOTALS$MSAGroup40_45)) + (1-(DTTOTALS$MSAGroup40_45))*log2(1/(1-(DTTOTALS$MSAGroup40_45))))
DTTOTALS$E35_40 <- ((DTTOTALS$MSAGroup35_40)*log2(1/(DTTOTALS$MSAGroup35_40)) + (1-(DTTOTALS$MSAGroup35_40))*log2(1/(1-(DTTOTALS$MSAGroup35_40))))
DTTOTALS$E30_35 <- ((DTTOTALS$MSAGroup30_35)*log2(1/(DTTOTALS$MSAGroup30_35)) + (1-(DTTOTALS$MSAGroup30_35))*log2(1/(1-(DTTOTALS$MSAGroup30_35))))
DTTOTALS$E25_30 <- ((DTTOTALS$MSAGroup25_30)*log2(1/(DTTOTALS$MSAGroup25_30)) + (1-(DTTOTALS$MSAGroup25_30))*log2(1/(1-(DTTOTALS$MSAGroup25_30))))
DTTOTALS$E20_25 <- ((DTTOTALS$MSAGroup20_25)*log2(1/(DTTOTALS$MSAGroup20_25)) + (1-(DTTOTALS$MSAGroup20_25))*log2(1/(1-(DTTOTALS$MSAGroup20_25))))
DTTOTALS$E15_20 <- ((DTTOTALS$MSAGroup15_20)*log2(1/(DTTOTALS$MSAGroup15_20)) + (1-(DTTOTALS$MSAGroup15_20))*log2(1/(1-(DTTOTALS$MSAGroup15_20))))
DTTOTALS$E10_15 <- ((DTTOTALS$MSAGroup10_15)*log2(1/(DTTOTALS$MSAGroup10_15)) + (1-(DTTOTALS$MSAGroup10_15))*log2(1/(1-(DTTOTALS$MSAGroup10_15))))
DTTOTALS$E10 <- ((DTTOTALS$MSAGroup10)*log2(1/(DTTOTALS$MSAGroup10)) + (1-(DTTOTALS$MSAGroup10))*log2(1/(1-(DTTOTALS$MSAGroup10))))
DTTOTALS$ReverseE10 <- ((DTTOTALS$ReverseMSAGroup10)*log2(1/(DTTOTALS$ReverseMSAGroup10)) + (1-(DTTOTALS$ReverseMSAGroup10))*log2(1/(1-(DTTOTALS$ReverseMSAGroup10))))
DTTOTALS$ReverseE10_15 <- ((DTTOTALS$ReverseMSAGroup10_15)*log2(1/(DTTOTALS$ReverseMSAGroup10_15)) + (1-(DTTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(DTTOTALS$ReverseMSAGroup10_15))))
DTTOTALS$ReverseE15_20 <- ((DTTOTALS$ReverseMSAGroup15_20)*log2(1/(DTTOTALS$ReverseMSAGroup15_20)) + (1-(DTTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(DTTOTALS$ReverseMSAGroup15_20))))
DTTOTALS$ReverseE20_25 <- ((DTTOTALS$ReverseMSAGroup20_25)*log2(1/(DTTOTALS$ReverseMSAGroup20_25)) + (1-(DTTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(DTTOTALS$ReverseMSAGroup20_25))))
DTTOTALS$ReverseE25_30 <- ((DTTOTALS$ReverseMSAGroup25_30)*log2(1/(DTTOTALS$ReverseMSAGroup25_30)) + (1-(DTTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(DTTOTALS$ReverseMSAGroup25_30))))
DTTOTALS$ReverseE30_35 <- ((DTTOTALS$ReverseMSAGroup30_35)*log2(1/(DTTOTALS$ReverseMSAGroup30_35)) + (1-(DTTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(DTTOTALS$ReverseMSAGroup30_35))))
DTTOTALS$ReverseE35_40 <- ((DTTOTALS$ReverseMSAGroup35_40)*log2(1/(DTTOTALS$ReverseMSAGroup35_40)) + (1-(DTTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(DTTOTALS$ReverseMSAGroup35_40))))


DT$Section200 <- DT$LocalEnt200 / DTTOTALS$TotalEnt200
DT$Section150_200 <- DT$LocalEnt150_200 / DTTOTALS$TotalEnt150_200
DT$Section125_150 <- DT$LocalEnt125_150 / DTTOTALS$TotalEnt125_150
DT$Section100_125 <- DT$LocalEnt100_125 / DTTOTALS$TotalEnt100_125
DT$Section75_100 <- DT$LocalEnt75_100 / DTTOTALS$TotalEnt75_100
DT$Section60_75 <- DT$LocalEnt60_75 / DTTOTALS$TotalEnt60_75
DT$Section50_60 <- DT$LocalEnt50_60 / DTTOTALS$TotalEnt50_60
DT$Section45_50 <- DT$LocalEnt45_50 / DTTOTALS$TotalEnt45_50
DT$Section40_45 <- DT$LocalEnt40_45 / DTTOTALS$TotalEnt40_45
DT$Section35_40 <- DT$LocalEnt35_40 / DTTOTALS$TotalEnt35_40
DT$Section30_35 <- DT$LocalEnt30_35 / DTTOTALS$TotalEnt30_35
DT$Section25_30 <- DT$LocalEnt25_30 / DTTOTALS$TotalEnt25_30
DT$Section20_25 <- DT$LocalEnt20_25 / DTTOTALS$TotalEnt20_25
DT$Section15_20 <- DT$LocalEnt15_20 / DTTOTALS$TotalEnt15_20
DT$Section10_15 <- DT$LocalEnt10_15 / DTTOTALS$TotalEnt10_15
DT$Section10 <- DT$LocalEnt10 / DTTOTALS$TotalEnt10
DT$ReverseSection10 <- DT$ReverseLocalEnt10 / DTTOTALS$ReverseTotalEnt10
DT$ReverseSection10_15 <- DT$ReverseLocalEnt10_15 / DTTOTALS$ReverseTotalEnt10_15
DT$ReverseSection15_20 <- DT$ReverseLocalEnt15_20 / DTTOTALS$ReverseTotalEnt15_20
DT$ReverseSection20_25 <- DT$ReverseLocalEnt20_25 / DTTOTALS$ReverseTotalEnt20_25
DT$ReverseSection25_30 <- DT$ReverseLocalEnt25_30 / DTTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
DT[is.na(DT)] <- 0

DTTOTALS$Percent200 <- 1 - sum(DT$Section200)
DTTOTALS$Percent150_200 <- 1 - sum(DT$Section150_200)
DTTOTALS$Percent125_150 <- 1 - sum(DT$Section125_150)
DTTOTALS$Percent100_125 <- 1 - sum(DT$Section100_125)
DTTOTALS$Percent75_100 <- 1 - sum(DT$Section75_100)
DTTOTALS$Percent60_75 <- 1 - sum(DT$Section60_75)
DTTOTALS$Percent50_60 <- 1 - sum(DT$Section50_60)
DTTOTALS$Percent45_50 <- 1 - sum(DT$Section45_50)
DTTOTALS$Percent40_45 <- 1 - sum(DT$Section40_45)
DTTOTALS$Percent35_40 <- 1 - sum(DT$Section35_40)
DTTOTALS$Percent30_35 <- 1 - sum(DT$Section30_35)
DTTOTALS$Percent25_30 <- 1 - sum(DT$Section25_30)
DTTOTALS$Percent20_25 <- 1 - sum(DT$Section20_25)
DTTOTALS$Percent15_20 <- 1 - sum(DT$Section15_20)
DTTOTALS$Percent10_15 <- 1 - sum(DT$Section10_15)
DTTOTALS$Percent10 <- 1 - sum(DT$Section10)
DTTOTALS$ReversePercent10 <- 1 - sum(DT$ReverseSection10)
DTTOTALS$ReversePercent10_15 <- 1 - sum(DT$ReverseSection10_15)
DTTOTALS$ReversePercent15_20 <- 1 - sum(DT$ReverseSection15_20)
DTTOTALS$ReversePercent20_25 <- 1 - sum(DT$ReverseSection20_25)
DTTOTALS$ReversePercent25_30 <- 1 - sum(DT$ReverseSection25_30)


DTTOTALS$Weight200 <- DTTOTALS$E200 * DTTOTALS$Percent200
DTTOTALS$Weight150_200 <- (DTTOTALS$E150_200 * DTTOTALS$Percent150_200)
DTTOTALS$Weight125_150 <- (DTTOTALS$E125_150 * DTTOTALS$Percent125_150) 
DTTOTALS$Weight100_125 <- (DTTOTALS$E100_125 * DTTOTALS$Percent100_125) 
DTTOTALS$Weight75_100 <- (DTTOTALS$E75_100 * DTTOTALS$Percent75_100)
DTTOTALS$Weight60_75 <- (DTTOTALS$E60_75 * DTTOTALS$Percent60_75) 
DTTOTALS$Weight50_60 <- (DTTOTALS$E50_60 * DTTOTALS$Percent50_60) 
DTTOTALS$Weight45_50 <- (DTTOTALS$E45_50 * DTTOTALS$Percent45_50)
DTTOTALS$Weight40_45 <- (DTTOTALS$E40_45 * DTTOTALS$Percent40_45) 
DTTOTALS$Weight35_40 <- (DTTOTALS$E35_40 * DTTOTALS$Percent35_40) 
DTTOTALS$Weight30_35 <- (DTTOTALS$E30_35 * DTTOTALS$Percent30_35)
DTTOTALS$Weight25_30 <- (DTTOTALS$E25_30 * DTTOTALS$Percent25_30) 
DTTOTALS$Weight20_25 <- (DTTOTALS$E20_25 * DTTOTALS$Percent20_25)
DTTOTALS$Weight15_20 <- (DTTOTALS$E15_20 * DTTOTALS$Percent15_20) 
DTTOTALS$Weight10_15 <- (DTTOTALS$E10_15 * DTTOTALS$Percent10_15) 
DTTOTALS$Weight10 <- (DTTOTALS$E10 * DTTOTALS$Percent10) 
DTTOTALS$ReverseWeight10 <- (DTTOTALS$ReverseE10 * DTTOTALS$ReversePercent10)
DTTOTALS$ReverseWeight10_15 <- (DTTOTALS$ReverseE10_15 * DTTOTALS$ReversePercent10_15)
DTTOTALS$ReverseWeight15_20 <- (DTTOTALS$ReverseE15_20 * DTTOTALS$ReversePercent15_20)
DTTOTALS$ReverseWeight20_25 <- (DTTOTALS$ReverseE20_25 * DTTOTALS$ReversePercent20_25)
DTTOTALS$ReverseWeight25_30 <- (DTTOTALS$ReverseE25_30 * DTTOTALS$ReversePercent25_30)


#trying to recreate the HA stuff I did thru SAS and R
#local

SEA$Group200 <- (SEA$B19001_017/SEA$B19001_001)
SEA$Group150_200 <- (SEA$B19001_017 + SEA$B19001_016)/SEA$B19001_001;
SEA$Group125_150 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015)/SEA$B19001_001;
SEA$Group100_125 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014)/SEA$B19001_001;
SEA$Group75_100 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013)/SEA$B19001_001;
SEA$Group60_75 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012)/SEA$B19001_001;
SEA$Group50_60 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011)/SEA$B19001_001;
SEA$Group45_50 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010)/SEA$B19001_001;
SEA$Group40_45 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009)/SEA$B19001_001;
SEA$Group35_40 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008)/SEA$B19001_001;
SEA$Group30_35 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007)/SEA$B19001_001;
SEA$Group25_30 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007 + SEA$B19001_006)/SEA$B19001_001;
SEA$Group20_25 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007 + SEA$B19001_006 + SEA$B19001_005)/SEA$B19001_001;
SEA$Group15_20 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007 + SEA$B19001_006 + SEA$B19001_005 + SEA$B19001_004)/SEA$B19001_001;
SEA$Group10_15 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007 + SEA$B19001_006 + SEA$B19001_005 + SEA$B19001_004 + SEA$B19001_003)/SEA$B19001_001;
SEA$Group10 <- (SEA$B19001_017 + SEA$B19001_016 + SEA$B19001_015 + SEA$B19001_014 + SEA$B19001_013 + SEA$B19001_012 + SEA$B19001_011 + SEA$B19001_010 + SEA$B19001_009 + SEA$B19001_008 + SEA$B19001_007 + SEA$B19001_006 + SEA$B19001_005 + SEA$B19001_004 + SEA$B19001_003 + SEA$B19001_002)/SEA$B19001_001;
SEA$ReverseGroup10 <- (SEA$B19001_002)/SEA$B19001_001;
SEA$ReverseGroup10_15 <- (SEA$B19001_002 + SEA$B19001_003)/SEA$B19001_001;
SEA$ReverseGroup15_20 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004)/SEA$B19001_001;
SEA$ReverseGroup20_25 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005)/SEA$B19001_001;
SEA$ReverseGroup25_30 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006)/SEA$B19001_001;
SEA$ReverseGroup30_35 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007)/SEA$B19001_001;
SEA$ReverseGroup35_40 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007 + SEA$B19001_008)/SEA$B19001_001;
SEA$ReverseGroup40_45 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007 + SEA$B19001_008 + SEA$B19001_009)/SEA$B19001_001;
SEA$ReverseGroup45_50 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007 + SEA$B19001_008 + SEA$B19001_009 + SEA$B19001_010)/SEA$B19001_001;
SEA$ReverseGroup50_60 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007 + SEA$B19001_008 + SEA$B19001_009 + SEA$B19001_010 + SEA$B19001_011)/SEA$B19001_001;
SEA$ReverseGroup60_75 <- (SEA$B19001_002 + SEA$B19001_003 + SEA$B19001_004 + SEA$B19001_005 + SEA$B19001_006 + SEA$B19001_007 + SEA$B19001_008 + SEA$B19001_009 + SEA$B19001_010 + SEA$B19001_011 + SEA$B19001_012)/SEA$B19001_001;

SEA$LocalEnt200 <- SEA$B19001_001 * ((SEA$Group200)*log2(1/(SEA$Group200)) + 
                                       (1-(SEA$Group200))*log2(1/(1-(SEA$Group200))))

SEA$LocalEnt150_200 <- SEA$B19001_001 * ((SEA$Group150_200)*log2(1/(SEA$Group150_200)) + 
                                           (1-(SEA$Group150_200))*log2(1/(1-(SEA$Group150_200))))

SEA$LocalEnt125_150 <- SEA$B19001_001 * ((SEA$Group125_150)*log2(1/(SEA$Group125_150)) + 
                                           (1-(SEA$Group125_150))*log2(1/(1-(SEA$Group125_150))))

SEA$LocalEnt100_125 <- SEA$B19001_001 * ((SEA$Group100_125)*log2(1/(SEA$Group100_125)) + 
                                           (1-(SEA$Group100_125))*log2(1/(1-(SEA$Group100_125))))

SEA$LocalEnt75_100 <- SEA$B19001_001 * ((SEA$Group75_100)*log2(1/(SEA$Group75_100)) + 
                                          (1-(SEA$Group75_100))*log2(1/(1-(SEA$Group75_100))))

SEA$LocalEnt60_75 <- SEA$B19001_001 * ((SEA$Group60_75)*log2(1/(SEA$Group60_75)) + 
                                         (1-(SEA$Group60_75))*log2(1/(1-(SEA$Group60_75))))

SEA$LocalEnt50_60 <- SEA$B19001_001 * ((SEA$Group50_60)*log2(1/(SEA$Group50_60)) + 
                                         (1-(SEA$Group50_60))*log2(1/(1-(SEA$Group50_60))))

SEA$LocalEnt45_50 <- SEA$B19001_001 * ((SEA$Group45_50)*log2(1/(SEA$Group45_50)) + 
                                         (1-(SEA$Group45_50))*log2(1/(1-(SEA$Group45_50))))

SEA$LocalEnt40_45 <- SEA$B19001_001 * ((SEA$Group40_45)*log2(1/(SEA$Group40_45)) + 
                                         (1-(SEA$Group40_45))*log2(1/(1-(SEA$Group40_45))))

SEA$LocalEnt35_40 <- SEA$B19001_001 * ((SEA$Group35_40)*log2(1/(SEA$Group35_40)) + 
                                         (1-(SEA$Group35_40))*log2(1/(1-(SEA$Group35_40))))

SEA$LocalEnt30_35 <- SEA$B19001_001 * ((SEA$Group30_35)*log2(1/(SEA$Group30_35)) + 
                                         (1-(SEA$Group30_35))*log2(1/(1-(SEA$Group30_35))))

SEA$LocalEnt25_30 <- SEA$B19001_001 * ((SEA$Group25_30)*log2(1/(SEA$Group25_30)) + 
                                         (1-(SEA$Group25_30))*log2(1/(1-(SEA$Group25_30))))

SEA$LocalEnt20_25 <- SEA$B19001_001 * ((SEA$Group20_25)*log2(1/(SEA$Group20_25)) + 
                                         (1-(SEA$Group20_25))*log2(1/(1-(SEA$Group20_25))))

SEA$LocalEnt15_20 <- SEA$B19001_001 * ((SEA$Group15_20)*log2(1/(SEA$Group15_20)) + 
                                         (1-(SEA$Group15_20))*log2(1/(1-(SEA$Group15_20))))

SEA$LocalEnt10_15 <- SEA$B19001_001 * ((SEA$Group10_15)*log2(1/(SEA$Group10_15)) + 
                                         (1-(SEA$Group10_15))*log2(1/(1-(SEA$Group10_15))))

SEA$LocalEnt10 <- SEA$B19001_001 * ((SEA$Group10)*log2(1/(SEA$Group10)) + 
                                      (1-(SEA$Group10))*log2(1/(1-(SEA$Group10))))

SEA$ReverseLocalEnt10 <- SEA$B19001_001 * ((SEA$ReverseGroup10)*log2(1/(SEA$ReverseGroup10)) + 
                                             (1-(SEA$ReverseGroup10))*log2(1/(1-(SEA$ReverseGroup10))))

SEA$ReverseLocalEnt10_15 <- SEA$B19001_001 * ((SEA$ReverseGroup10_15)*log2(1/(SEA$ReverseGroup10_15)) + 
                                                (1-(SEA$ReverseGroup10_15))*log2(1/(1-(SEA$ReverseGroup10_15))))

SEA$ReverseLocalEnt15_20 <- SEA$B19001_001 * ((SEA$ReverseGroup15_20)*log2(1/(SEA$ReverseGroup15_20)) + 
                                                (1-(SEA$ReverseGroup15_20))*log2(1/(1-(SEA$ReverseGroup15_20))))

SEA$ReverseLocalEnt20_25 <- SEA$B19001_001 * ((SEA$ReverseGroup20_25)*log2(1/(SEA$ReverseGroup20_25)) + 
                                                (1-(SEA$ReverseGroup20_25))*log2(1/(1-(SEA$ReverseGroup20_25))))

SEA$ReverseLocalEnt25_30 <- SEA$B19001_001 * ((SEA$ReverseGroup25_30)*log2(1/(SEA$ReverseGroup25_30)) + 
                                                (1-(SEA$ReverseGroup25_30))*log2(1/(1-(SEA$ReverseGroup25_30))))

SEA$ReverseLocalEnt30_35 <- SEA$B19001_001 * ((SEA$ReverseGroup30_35)*log2(1/(SEA$ReverseGroup30_35)) + 
                                                (1-(SEA$ReverseGroup30_35))*log2(1/(1-(SEA$ReverseGroup30_35))))


#HA stuff Total


SEATOTALS <- SEA %>%
  summarise(MSAB19001_001 = sum(SEA$B19001_001), MSAB19001_002 = sum(SEA$B19001_002), MSAB19001_003 = sum(SEA$B19001_003), MSAB19001_004 = sum(SEA$B19001_004),
            MSAB19001_005 = sum(SEA$B19001_005), MSAB19001_006 = sum(SEA$B19001_006), MSAB19001_007 = sum(SEA$B19001_007),
            MSAB19001_008 = sum(SEA$B19001_008), MSAB19001_009 = sum(SEA$B19001_009), MSAB19001_010 = sum(SEA$B19001_010),
            MSAB19001_011 = sum(SEA$B19001_011), MSAB19001_012 = sum(SEA$B19001_012), MSAB19001_013 = sum(SEA$B19001_013),
            MSAB19001_014 = sum(SEA$B19001_014), MSAB19001_015 = sum(SEA$B19001_015), MSAB19001_016 = sum(SEA$B19001_016),
            MSAB19001_017 = sum(SEA$B19001_017))


SEATOTALS$MSAGroup200 <- (SEATOTALS$MSAB19001_017/SEATOTALS$MSAB19001_001)
SEATOTALS$MSAGroup150_200 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup125_150 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup100_125 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup75_100 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup60_75 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup50_60 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup45_50 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup40_45 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup35_40 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup30_35 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup25_30 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_006)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup20_25 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_005)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup15_20 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_004)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup10_15 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_003)/SEATOTALS$MSAB19001_001;
SEATOTALS$MSAGroup10 <- (SEATOTALS$MSAB19001_017 + SEATOTALS$MSAB19001_016 + SEATOTALS$MSAB19001_015 + SEATOTALS$MSAB19001_014 + SEATOTALS$MSAB19001_013 + SEATOTALS$MSAB19001_012 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_002)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup10 <- (SEATOTALS$MSAB19001_002)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup10_15 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup15_20 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup20_25 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup25_30 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup30_35 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup35_40 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_008)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup40_45 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_009)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup45_50 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_010)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup50_60 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_011)/SEATOTALS$MSAB19001_001;
SEATOTALS$ReverseMSAGroup60_75 <- (SEATOTALS$MSAB19001_002 + SEATOTALS$MSAB19001_003 + SEATOTALS$MSAB19001_004 + SEATOTALS$MSAB19001_005 + SEATOTALS$MSAB19001_006 + SEATOTALS$MSAB19001_007 + SEATOTALS$MSAB19001_008 + SEATOTALS$MSAB19001_009 + SEATOTALS$MSAB19001_010 + SEATOTALS$MSAB19001_011 + SEATOTALS$MSAB19001_012)/SEATOTALS$MSAB19001_001;

SEATOTALS$TotalEnt200 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup200)*log2(1/(SEATOTALS$MSAGroup200)) + 
                                                      (1-(SEATOTALS$MSAGroup200))*log2(1/(1-(SEATOTALS$MSAGroup200))))

SEATOTALS$TotalEnt150_200 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup150_200)*log2(1/(SEATOTALS$MSAGroup150_200)) + 
                                                          (1-(SEATOTALS$MSAGroup150_200))*log2(1/(1-(SEATOTALS$MSAGroup150_200))))

SEATOTALS$TotalEnt125_150 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup125_150)*log2(1/(SEATOTALS$MSAGroup125_150)) + 
                                                          (1-(SEATOTALS$MSAGroup125_150))*log2(1/(1-(SEATOTALS$MSAGroup125_150))))

SEATOTALS$TotalEnt100_125 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup100_125)*log2(1/(SEATOTALS$MSAGroup100_125)) + 
                                                          (1-(SEATOTALS$MSAGroup100_125))*log2(1/(1-(SEATOTALS$MSAGroup100_125))))

SEATOTALS$TotalEnt75_100 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup75_100)*log2(1/(SEATOTALS$MSAGroup75_100)) + 
                                                         (1-(SEATOTALS$MSAGroup75_100))*log2(1/(1-(SEATOTALS$MSAGroup75_100))))

SEATOTALS$TotalEnt60_75 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup60_75)*log2(1/(SEATOTALS$MSAGroup60_75)) + 
                                                        (1-(SEATOTALS$MSAGroup60_75))*log2(1/(1-(SEATOTALS$MSAGroup60_75))))

SEATOTALS$TotalEnt50_60 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup50_60)*log2(1/(SEATOTALS$MSAGroup50_60)) + 
                                                        (1-(SEATOTALS$MSAGroup50_60))*log2(1/(1-(SEATOTALS$MSAGroup50_60))))

SEATOTALS$TotalEnt45_50 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup45_50)*log2(1/(SEATOTALS$MSAGroup45_50)) + 
                                                        (1-(SEATOTALS$MSAGroup45_50))*log2(1/(1-(SEATOTALS$MSAGroup45_50))))

SEATOTALS$TotalEnt40_45 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup40_45)*log2(1/(SEATOTALS$MSAGroup40_45)) + 
                                                        (1-(SEATOTALS$MSAGroup40_45))*log2(1/(1-(SEATOTALS$MSAGroup40_45))))

SEATOTALS$TotalEnt35_40 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup35_40)*log2(1/(SEATOTALS$MSAGroup35_40)) + 
                                                        (1-(SEATOTALS$MSAGroup35_40))*log2(1/(1-(SEATOTALS$MSAGroup35_40))))

SEATOTALS$TotalEnt30_35 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup30_35)*log2(1/(SEATOTALS$MSAGroup30_35)) + 
                                                        (1-(SEATOTALS$MSAGroup30_35))*log2(1/(1-(SEATOTALS$MSAGroup30_35))))

SEATOTALS$TotalEnt25_30 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup25_30)*log2(1/(SEATOTALS$MSAGroup25_30)) + 
                                                        (1-(SEATOTALS$MSAGroup25_30))*log2(1/(1-(SEATOTALS$MSAGroup25_30))))

SEATOTALS$TotalEnt20_25 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup20_25)*log2(1/(SEATOTALS$MSAGroup20_25)) + 
                                                        (1-(SEATOTALS$MSAGroup20_25))*log2(1/(1-(SEATOTALS$MSAGroup20_25))))

SEATOTALS$TotalEnt15_20 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup15_20)*log2(1/(SEATOTALS$MSAGroup15_20)) + 
                                                        (1-(SEATOTALS$MSAGroup15_20))*log2(1/(1-(SEATOTALS$MSAGroup15_20))))

SEATOTALS$TotalEnt10_15 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup10_15)*log2(1/(SEATOTALS$MSAGroup10_15)) + 
                                                        (1-(SEATOTALS$MSAGroup10_15))*log2(1/(1-(SEATOTALS$MSAGroup10_15))))

SEATOTALS$TotalEnt10 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$MSAGroup10)*log2(1/(SEATOTALS$MSAGroup10)) + 
                                                     (1-(SEATOTALS$MSAGroup10))*log2(1/(1-(SEATOTALS$MSAGroup10))))

SEATOTALS$ReverseTotalEnt10 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup10)*log2(1/(SEATOTALS$ReverseMSAGroup10)) + 
                                                            (1-(SEATOTALS$ReverseMSAGroup10))*log2(1/(1-(SEATOTALS$ReverseMSAGroup10))))

SEATOTALS$ReverseTotalEnt10_15 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup10_15)*log2(1/(SEATOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(SEATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SEATOTALS$ReverseMSAGroup10_15))))

SEATOTALS$ReverseTotalEnt15_20 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup15_20)*log2(1/(SEATOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(SEATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SEATOTALS$ReverseMSAGroup15_20))))

SEATOTALS$ReverseTotalEnt20_25 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup20_25)*log2(1/(SEATOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(SEATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SEATOTALS$ReverseMSAGroup20_25))))

SEATOTALS$ReverseTotalEnt25_30 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup25_30)*log2(1/(SEATOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(SEATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SEATOTALS$ReverseMSAGroup25_30))))

SEATOTALS$ReverseTotalEnt30_35 <- SEATOTALS$MSAB19001_001 * ((SEATOTALS$ReverseMSAGroup30_35)*log2(1/(SEATOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(SEATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SEATOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
SEATOTALS$E200 <- ((SEATOTALS$MSAGroup200)*log2(1/(SEATOTALS$MSAGroup200)) + (1-(SEATOTALS$MSAGroup200))*log2(1/(1-(SEATOTALS$MSAGroup200))))
SEATOTALS$E150_200 <- ((SEATOTALS$MSAGroup150_200)*log2(1/(SEATOTALS$MSAGroup150_200)) + (1-(SEATOTALS$MSAGroup150_200))*log2(1/(1-(SEATOTALS$MSAGroup150_200))))
SEATOTALS$E125_150 <- ((SEATOTALS$MSAGroup125_150)*log2(1/(SEATOTALS$MSAGroup125_150)) + (1-(SEATOTALS$MSAGroup125_150))*log2(1/(1-(SEATOTALS$MSAGroup125_150))))
SEATOTALS$E100_125 <- ((SEATOTALS$MSAGroup100_125)*log2(1/(SEATOTALS$MSAGroup100_125)) + (1-(SEATOTALS$MSAGroup100_125))*log2(1/(1-(SEATOTALS$MSAGroup100_125))))
SEATOTALS$E75_100 <- ((SEATOTALS$MSAGroup75_100)*log2(1/(SEATOTALS$MSAGroup75_100)) + (1-(SEATOTALS$MSAGroup75_100))*log2(1/(1-(SEATOTALS$MSAGroup75_100))))
SEATOTALS$E60_75 <- ((SEATOTALS$MSAGroup60_75)*log2(1/(SEATOTALS$MSAGroup60_75)) + (1-(SEATOTALS$MSAGroup60_75))*log2(1/(1-(SEATOTALS$MSAGroup60_75))))
SEATOTALS$E50_60 <- ((SEATOTALS$MSAGroup50_60)*log2(1/(SEATOTALS$MSAGroup50_60)) + (1-(SEATOTALS$MSAGroup50_60))*log2(1/(1-(SEATOTALS$MSAGroup50_60))))
SEATOTALS$E50_60 <- ((SEATOTALS$MSAGroup50_60)*log2(1/(SEATOTALS$MSAGroup50_60)) + (1-(SEATOTALS$MSAGroup50_60))*log2(1/(1-(SEATOTALS$MSAGroup50_60))))
SEATOTALS$E45_50 <- ((SEATOTALS$MSAGroup45_50)*log2(1/(SEATOTALS$MSAGroup45_50)) + (1-(SEATOTALS$MSAGroup45_50))*log2(1/(1-(SEATOTALS$MSAGroup45_50))))
SEATOTALS$E40_45 <- ((SEATOTALS$MSAGroup40_45)*log2(1/(SEATOTALS$MSAGroup40_45)) + (1-(SEATOTALS$MSAGroup40_45))*log2(1/(1-(SEATOTALS$MSAGroup40_45))))
SEATOTALS$E35_40 <- ((SEATOTALS$MSAGroup35_40)*log2(1/(SEATOTALS$MSAGroup35_40)) + (1-(SEATOTALS$MSAGroup35_40))*log2(1/(1-(SEATOTALS$MSAGroup35_40))))
SEATOTALS$E30_35 <- ((SEATOTALS$MSAGroup30_35)*log2(1/(SEATOTALS$MSAGroup30_35)) + (1-(SEATOTALS$MSAGroup30_35))*log2(1/(1-(SEATOTALS$MSAGroup30_35))))
SEATOTALS$E25_30 <- ((SEATOTALS$MSAGroup25_30)*log2(1/(SEATOTALS$MSAGroup25_30)) + (1-(SEATOTALS$MSAGroup25_30))*log2(1/(1-(SEATOTALS$MSAGroup25_30))))
SEATOTALS$E20_25 <- ((SEATOTALS$MSAGroup20_25)*log2(1/(SEATOTALS$MSAGroup20_25)) + (1-(SEATOTALS$MSAGroup20_25))*log2(1/(1-(SEATOTALS$MSAGroup20_25))))
SEATOTALS$E15_20 <- ((SEATOTALS$MSAGroup15_20)*log2(1/(SEATOTALS$MSAGroup15_20)) + (1-(SEATOTALS$MSAGroup15_20))*log2(1/(1-(SEATOTALS$MSAGroup15_20))))
SEATOTALS$E10_15 <- ((SEATOTALS$MSAGroup10_15)*log2(1/(SEATOTALS$MSAGroup10_15)) + (1-(SEATOTALS$MSAGroup10_15))*log2(1/(1-(SEATOTALS$MSAGroup10_15))))
SEATOTALS$E10 <- ((SEATOTALS$MSAGroup10)*log2(1/(SEATOTALS$MSAGroup10)) + (1-(SEATOTALS$MSAGroup10))*log2(1/(1-(SEATOTALS$MSAGroup10))))
SEATOTALS$ReverseE10 <- ((SEATOTALS$ReverseMSAGroup10)*log2(1/(SEATOTALS$ReverseMSAGroup10)) + (1-(SEATOTALS$ReverseMSAGroup10))*log2(1/(1-(SEATOTALS$ReverseMSAGroup10))))
SEATOTALS$ReverseE10_15 <- ((SEATOTALS$ReverseMSAGroup10_15)*log2(1/(SEATOTALS$ReverseMSAGroup10_15)) + (1-(SEATOTALS$ReverseMSAGroup10_15))*log2(1/(1-(SEATOTALS$ReverseMSAGroup10_15))))
SEATOTALS$ReverseE15_20 <- ((SEATOTALS$ReverseMSAGroup15_20)*log2(1/(SEATOTALS$ReverseMSAGroup15_20)) + (1-(SEATOTALS$ReverseMSAGroup15_20))*log2(1/(1-(SEATOTALS$ReverseMSAGroup15_20))))
SEATOTALS$ReverseE20_25 <- ((SEATOTALS$ReverseMSAGroup20_25)*log2(1/(SEATOTALS$ReverseMSAGroup20_25)) + (1-(SEATOTALS$ReverseMSAGroup20_25))*log2(1/(1-(SEATOTALS$ReverseMSAGroup20_25))))
SEATOTALS$ReverseE25_30 <- ((SEATOTALS$ReverseMSAGroup25_30)*log2(1/(SEATOTALS$ReverseMSAGroup25_30)) + (1-(SEATOTALS$ReverseMSAGroup25_30))*log2(1/(1-(SEATOTALS$ReverseMSAGroup25_30))))
SEATOTALS$ReverseE30_35 <- ((SEATOTALS$ReverseMSAGroup30_35)*log2(1/(SEATOTALS$ReverseMSAGroup30_35)) + (1-(SEATOTALS$ReverseMSAGroup30_35))*log2(1/(1-(SEATOTALS$ReverseMSAGroup30_35))))
SEATOTALS$ReverseE35_40 <- ((SEATOTALS$ReverseMSAGroup35_40)*log2(1/(SEATOTALS$ReverseMSAGroup35_40)) + (1-(SEATOTALS$ReverseMSAGroup35_40))*log2(1/(1-(SEATOTALS$ReverseMSAGroup35_40))))


SEA$Section200 <- SEA$LocalEnt200 / SEATOTALS$TotalEnt200
SEA$Section150_200 <- SEA$LocalEnt150_200 / SEATOTALS$TotalEnt150_200
SEA$Section125_150 <- SEA$LocalEnt125_150 / SEATOTALS$TotalEnt125_150
SEA$Section100_125 <- SEA$LocalEnt100_125 / SEATOTALS$TotalEnt100_125
SEA$Section75_100 <- SEA$LocalEnt75_100 / SEATOTALS$TotalEnt75_100
SEA$Section60_75 <- SEA$LocalEnt60_75 / SEATOTALS$TotalEnt60_75
SEA$Section50_60 <- SEA$LocalEnt50_60 / SEATOTALS$TotalEnt50_60
SEA$Section45_50 <- SEA$LocalEnt45_50 / SEATOTALS$TotalEnt45_50
SEA$Section40_45 <- SEA$LocalEnt40_45 / SEATOTALS$TotalEnt40_45
SEA$Section35_40 <- SEA$LocalEnt35_40 / SEATOTALS$TotalEnt35_40
SEA$Section30_35 <- SEA$LocalEnt30_35 / SEATOTALS$TotalEnt30_35
SEA$Section25_30 <- SEA$LocalEnt25_30 / SEATOTALS$TotalEnt25_30
SEA$Section20_25 <- SEA$LocalEnt20_25 / SEATOTALS$TotalEnt20_25
SEA$Section15_20 <- SEA$LocalEnt15_20 / SEATOTALS$TotalEnt15_20
SEA$Section10_15 <- SEA$LocalEnt10_15 / SEATOTALS$TotalEnt10_15
SEA$Section10 <- SEA$LocalEnt10 / SEATOTALS$TotalEnt10
SEA$ReverseSection10 <- SEA$ReverseLocalEnt10 / SEATOTALS$ReverseTotalEnt10
SEA$ReverseSection10_15 <- SEA$ReverseLocalEnt10_15 / SEATOTALS$ReverseTotalEnt10_15
SEA$ReverseSection15_20 <- SEA$ReverseLocalEnt15_20 / SEATOTALS$ReverseTotalEnt15_20
SEA$ReverseSection20_25 <- SEA$ReverseLocalEnt20_25 / SEATOTALS$ReverseTotalEnt20_25
SEA$ReverseSection25_30 <- SEA$ReverseLocalEnt25_30 / SEATOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
SEA[is.na(SEA)] <- 0

SEATOTALS$Percent200 <- 1 - sum(SEA$Section200)
SEATOTALS$Percent150_200 <- 1 - sum(SEA$Section150_200)
SEATOTALS$Percent125_150 <- 1 - sum(SEA$Section125_150)
SEATOTALS$Percent100_125 <- 1 - sum(SEA$Section100_125)
SEATOTALS$Percent75_100 <- 1 - sum(SEA$Section75_100)
SEATOTALS$Percent60_75 <- 1 - sum(SEA$Section60_75)
SEATOTALS$Percent50_60 <- 1 - sum(SEA$Section50_60)
SEATOTALS$Percent45_50 <- 1 - sum(SEA$Section45_50)
SEATOTALS$Percent40_45 <- 1 - sum(SEA$Section40_45)
SEATOTALS$Percent35_40 <- 1 - sum(SEA$Section35_40)
SEATOTALS$Percent30_35 <- 1 - sum(SEA$Section30_35)
SEATOTALS$Percent25_30 <- 1 - sum(SEA$Section25_30)
SEATOTALS$Percent20_25 <- 1 - sum(SEA$Section20_25)
SEATOTALS$Percent15_20 <- 1 - sum(SEA$Section15_20)
SEATOTALS$Percent10_15 <- 1 - sum(SEA$Section10_15)
SEATOTALS$Percent10 <- 1 - sum(SEA$Section10)
SEATOTALS$ReversePercent10 <- 1 - sum(SEA$ReverseSection10)
SEATOTALS$ReversePercent10_15 <- 1 - sum(SEA$ReverseSection10_15)
SEATOTALS$ReversePercent15_20 <- 1 - sum(SEA$ReverseSection15_20)
SEATOTALS$ReversePercent20_25 <- 1 - sum(SEA$ReverseSection20_25)
SEATOTALS$ReversePercent25_30 <- 1 - sum(SEA$ReverseSection25_30)


SEATOTALS$Weight200 <- SEATOTALS$E200 * SEATOTALS$Percent200
SEATOTALS$Weight150_200 <- (SEATOTALS$E150_200 * SEATOTALS$Percent150_200)
SEATOTALS$Weight125_150 <- (SEATOTALS$E125_150 * SEATOTALS$Percent125_150) 
SEATOTALS$Weight100_125 <- (SEATOTALS$E100_125 * SEATOTALS$Percent100_125) 
SEATOTALS$Weight75_100 <- (SEATOTALS$E75_100 * SEATOTALS$Percent75_100)
SEATOTALS$Weight60_75 <- (SEATOTALS$E60_75 * SEATOTALS$Percent60_75) 
SEATOTALS$Weight50_60 <- (SEATOTALS$E50_60 * SEATOTALS$Percent50_60) 
SEATOTALS$Weight45_50 <- (SEATOTALS$E45_50 * SEATOTALS$Percent45_50)
SEATOTALS$Weight40_45 <- (SEATOTALS$E40_45 * SEATOTALS$Percent40_45) 
SEATOTALS$Weight35_40 <- (SEATOTALS$E35_40 * SEATOTALS$Percent35_40) 
SEATOTALS$Weight30_35 <- (SEATOTALS$E30_35 * SEATOTALS$Percent30_35)
SEATOTALS$Weight25_30 <- (SEATOTALS$E25_30 * SEATOTALS$Percent25_30) 
SEATOTALS$Weight20_25 <- (SEATOTALS$E20_25 * SEATOTALS$Percent20_25)
SEATOTALS$Weight15_20 <- (SEATOTALS$E15_20 * SEATOTALS$Percent15_20) 
SEATOTALS$Weight10_15 <- (SEATOTALS$E10_15 * SEATOTALS$Percent10_15) 
SEATOTALS$Weight10 <- (SEATOTALS$E10 * SEATOTALS$Percent10) 
SEATOTALS$ReverseWeight10 <- (SEATOTALS$ReverseE10 * SEATOTALS$ReversePercent10)
SEATOTALS$ReverseWeight10_15 <- (SEATOTALS$ReverseE10_15 * SEATOTALS$ReversePercent10_15)
SEATOTALS$ReverseWeight15_20 <- (SEATOTALS$ReverseE15_20 * SEATOTALS$ReversePercent15_20)
SEATOTALS$ReverseWeight20_25 <- (SEATOTALS$ReverseE20_25 * SEATOTALS$ReversePercent20_25)
SEATOTALS$ReverseWeight25_30 <- (SEATOTALS$ReverseE25_30 * SEATOTALS$ReversePercent25_30)




#trying to recreate the HA stuff I did thru SAS and R
#local

MIN$Group200 <- (MIN$B19001_017/MIN$B19001_001)
MIN$Group150_200 <- (MIN$B19001_017 + MIN$B19001_016)/MIN$B19001_001;
MIN$Group125_150 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015)/MIN$B19001_001;
MIN$Group100_125 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014)/MIN$B19001_001;
MIN$Group75_100 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013)/MIN$B19001_001;
MIN$Group60_75 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012)/MIN$B19001_001;
MIN$Group50_60 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011)/MIN$B19001_001;
MIN$Group45_50 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010)/MIN$B19001_001;
MIN$Group40_45 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009)/MIN$B19001_001;
MIN$Group35_40 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008)/MIN$B19001_001;
MIN$Group30_35 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007)/MIN$B19001_001;
MIN$Group25_30 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007 + MIN$B19001_006)/MIN$B19001_001;
MIN$Group20_25 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007 + MIN$B19001_006 + MIN$B19001_005)/MIN$B19001_001;
MIN$Group15_20 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007 + MIN$B19001_006 + MIN$B19001_005 + MIN$B19001_004)/MIN$B19001_001;
MIN$Group10_15 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007 + MIN$B19001_006 + MIN$B19001_005 + MIN$B19001_004 + MIN$B19001_003)/MIN$B19001_001;
MIN$Group10 <- (MIN$B19001_017 + MIN$B19001_016 + MIN$B19001_015 + MIN$B19001_014 + MIN$B19001_013 + MIN$B19001_012 + MIN$B19001_011 + MIN$B19001_010 + MIN$B19001_009 + MIN$B19001_008 + MIN$B19001_007 + MIN$B19001_006 + MIN$B19001_005 + MIN$B19001_004 + MIN$B19001_003 + MIN$B19001_002)/MIN$B19001_001;
MIN$ReverseGroup10 <- (MIN$B19001_002)/MIN$B19001_001;
MIN$ReverseGroup10_15 <- (MIN$B19001_002 + MIN$B19001_003)/MIN$B19001_001;
MIN$ReverseGroup15_20 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004)/MIN$B19001_001;
MIN$ReverseGroup20_25 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005)/MIN$B19001_001;
MIN$ReverseGroup25_30 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006)/MIN$B19001_001;
MIN$ReverseGroup30_35 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007)/MIN$B19001_001;
MIN$ReverseGroup35_40 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007 + MIN$B19001_008)/MIN$B19001_001;
MIN$ReverseGroup40_45 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007 + MIN$B19001_008 + MIN$B19001_009)/MIN$B19001_001;
MIN$ReverseGroup45_50 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007 + MIN$B19001_008 + MIN$B19001_009 + MIN$B19001_010)/MIN$B19001_001;
MIN$ReverseGroup50_60 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007 + MIN$B19001_008 + MIN$B19001_009 + MIN$B19001_010 + MIN$B19001_011)/MIN$B19001_001;
MIN$ReverseGroup60_75 <- (MIN$B19001_002 + MIN$B19001_003 + MIN$B19001_004 + MIN$B19001_005 + MIN$B19001_006 + MIN$B19001_007 + MIN$B19001_008 + MIN$B19001_009 + MIN$B19001_010 + MIN$B19001_011 + MIN$B19001_012)/MIN$B19001_001;

MIN$LocalEnt200 <- MIN$B19001_001 * ((MIN$Group200)*log2(1/(MIN$Group200)) + 
                                       (1-(MIN$Group200))*log2(1/(1-(MIN$Group200))))

MIN$LocalEnt150_200 <- MIN$B19001_001 * ((MIN$Group150_200)*log2(1/(MIN$Group150_200)) + 
                                           (1-(MIN$Group150_200))*log2(1/(1-(MIN$Group150_200))))

MIN$LocalEnt125_150 <- MIN$B19001_001 * ((MIN$Group125_150)*log2(1/(MIN$Group125_150)) + 
                                           (1-(MIN$Group125_150))*log2(1/(1-(MIN$Group125_150))))

MIN$LocalEnt100_125 <- MIN$B19001_001 * ((MIN$Group100_125)*log2(1/(MIN$Group100_125)) + 
                                           (1-(MIN$Group100_125))*log2(1/(1-(MIN$Group100_125))))

MIN$LocalEnt75_100 <- MIN$B19001_001 * ((MIN$Group75_100)*log2(1/(MIN$Group75_100)) + 
                                          (1-(MIN$Group75_100))*log2(1/(1-(MIN$Group75_100))))

MIN$LocalEnt60_75 <- MIN$B19001_001 * ((MIN$Group60_75)*log2(1/(MIN$Group60_75)) + 
                                         (1-(MIN$Group60_75))*log2(1/(1-(MIN$Group60_75))))

MIN$LocalEnt50_60 <- MIN$B19001_001 * ((MIN$Group50_60)*log2(1/(MIN$Group50_60)) + 
                                         (1-(MIN$Group50_60))*log2(1/(1-(MIN$Group50_60))))

MIN$LocalEnt45_50 <- MIN$B19001_001 * ((MIN$Group45_50)*log2(1/(MIN$Group45_50)) + 
                                         (1-(MIN$Group45_50))*log2(1/(1-(MIN$Group45_50))))

MIN$LocalEnt40_45 <- MIN$B19001_001 * ((MIN$Group40_45)*log2(1/(MIN$Group40_45)) + 
                                         (1-(MIN$Group40_45))*log2(1/(1-(MIN$Group40_45))))

MIN$LocalEnt35_40 <- MIN$B19001_001 * ((MIN$Group35_40)*log2(1/(MIN$Group35_40)) + 
                                         (1-(MIN$Group35_40))*log2(1/(1-(MIN$Group35_40))))

MIN$LocalEnt30_35 <- MIN$B19001_001 * ((MIN$Group30_35)*log2(1/(MIN$Group30_35)) + 
                                         (1-(MIN$Group30_35))*log2(1/(1-(MIN$Group30_35))))

MIN$LocalEnt25_30 <- MIN$B19001_001 * ((MIN$Group25_30)*log2(1/(MIN$Group25_30)) + 
                                         (1-(MIN$Group25_30))*log2(1/(1-(MIN$Group25_30))))

MIN$LocalEnt20_25 <- MIN$B19001_001 * ((MIN$Group20_25)*log2(1/(MIN$Group20_25)) + 
                                         (1-(MIN$Group20_25))*log2(1/(1-(MIN$Group20_25))))

MIN$LocalEnt15_20 <- MIN$B19001_001 * ((MIN$Group15_20)*log2(1/(MIN$Group15_20)) + 
                                         (1-(MIN$Group15_20))*log2(1/(1-(MIN$Group15_20))))

MIN$LocalEnt10_15 <- MIN$B19001_001 * ((MIN$Group10_15)*log2(1/(MIN$Group10_15)) + 
                                         (1-(MIN$Group10_15))*log2(1/(1-(MIN$Group10_15))))

MIN$LocalEnt10 <- MIN$B19001_001 * ((MIN$Group10)*log2(1/(MIN$Group10)) + 
                                      (1-(MIN$Group10))*log2(1/(1-(MIN$Group10))))

MIN$ReverseLocalEnt10 <- MIN$B19001_001 * ((MIN$ReverseGroup10)*log2(1/(MIN$ReverseGroup10)) + 
                                             (1-(MIN$ReverseGroup10))*log2(1/(1-(MIN$ReverseGroup10))))

MIN$ReverseLocalEnt10_15 <- MIN$B19001_001 * ((MIN$ReverseGroup10_15)*log2(1/(MIN$ReverseGroup10_15)) + 
                                                (1-(MIN$ReverseGroup10_15))*log2(1/(1-(MIN$ReverseGroup10_15))))

MIN$ReverseLocalEnt15_20 <- MIN$B19001_001 * ((MIN$ReverseGroup15_20)*log2(1/(MIN$ReverseGroup15_20)) + 
                                                (1-(MIN$ReverseGroup15_20))*log2(1/(1-(MIN$ReverseGroup15_20))))

MIN$ReverseLocalEnt20_25 <- MIN$B19001_001 * ((MIN$ReverseGroup20_25)*log2(1/(MIN$ReverseGroup20_25)) + 
                                                (1-(MIN$ReverseGroup20_25))*log2(1/(1-(MIN$ReverseGroup20_25))))

MIN$ReverseLocalEnt25_30 <- MIN$B19001_001 * ((MIN$ReverseGroup25_30)*log2(1/(MIN$ReverseGroup25_30)) + 
                                                (1-(MIN$ReverseGroup25_30))*log2(1/(1-(MIN$ReverseGroup25_30))))

MIN$ReverseLocalEnt30_35 <- MIN$B19001_001 * ((MIN$ReverseGroup30_35)*log2(1/(MIN$ReverseGroup30_35)) + 
                                                (1-(MIN$ReverseGroup30_35))*log2(1/(1-(MIN$ReverseGroup30_35))))


#HA stuff Total


MINTOTALS <- MIN %>%
  summarise(MSAB19001_001 = sum(MIN$B19001_001), MSAB19001_002 = sum(MIN$B19001_002), MSAB19001_003 = sum(MIN$B19001_003), MSAB19001_004 = sum(MIN$B19001_004),
            MSAB19001_005 = sum(MIN$B19001_005), MSAB19001_006 = sum(MIN$B19001_006), MSAB19001_007 = sum(MIN$B19001_007),
            MSAB19001_008 = sum(MIN$B19001_008), MSAB19001_009 = sum(MIN$B19001_009), MSAB19001_010 = sum(MIN$B19001_010),
            MSAB19001_011 = sum(MIN$B19001_011), MSAB19001_012 = sum(MIN$B19001_012), MSAB19001_013 = sum(MIN$B19001_013),
            MSAB19001_014 = sum(MIN$B19001_014), MSAB19001_015 = sum(MIN$B19001_015), MSAB19001_016 = sum(MIN$B19001_016),
            MSAB19001_017 = sum(MIN$B19001_017))


MINTOTALS$MSAGroup200 <- (MINTOTALS$MSAB19001_017/MINTOTALS$MSAB19001_001)
MINTOTALS$MSAGroup150_200 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup125_150 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup100_125 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup75_100 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup60_75 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup50_60 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup45_50 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup40_45 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup35_40 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup30_35 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup25_30 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_006)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup20_25 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_005)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup15_20 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_004)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup10_15 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_003)/MINTOTALS$MSAB19001_001;
MINTOTALS$MSAGroup10 <- (MINTOTALS$MSAB19001_017 + MINTOTALS$MSAB19001_016 + MINTOTALS$MSAB19001_015 + MINTOTALS$MSAB19001_014 + MINTOTALS$MSAB19001_013 + MINTOTALS$MSAB19001_012 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_002)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup10 <- (MINTOTALS$MSAB19001_002)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup10_15 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup15_20 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup20_25 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup25_30 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup30_35 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup35_40 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_008)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup40_45 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_009)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup45_50 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_010)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup50_60 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_011)/MINTOTALS$MSAB19001_001;
MINTOTALS$ReverseMSAGroup60_75 <- (MINTOTALS$MSAB19001_002 + MINTOTALS$MSAB19001_003 + MINTOTALS$MSAB19001_004 + MINTOTALS$MSAB19001_005 + MINTOTALS$MSAB19001_006 + MINTOTALS$MSAB19001_007 + MINTOTALS$MSAB19001_008 + MINTOTALS$MSAB19001_009 + MINTOTALS$MSAB19001_010 + MINTOTALS$MSAB19001_011 + MINTOTALS$MSAB19001_012)/MINTOTALS$MSAB19001_001;

MINTOTALS$TotalEnt200 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup200)*log2(1/(MINTOTALS$MSAGroup200)) + 
                                                      (1-(MINTOTALS$MSAGroup200))*log2(1/(1-(MINTOTALS$MSAGroup200))))

MINTOTALS$TotalEnt150_200 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup150_200)*log2(1/(MINTOTALS$MSAGroup150_200)) + 
                                                          (1-(MINTOTALS$MSAGroup150_200))*log2(1/(1-(MINTOTALS$MSAGroup150_200))))

MINTOTALS$TotalEnt125_150 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup125_150)*log2(1/(MINTOTALS$MSAGroup125_150)) + 
                                                          (1-(MINTOTALS$MSAGroup125_150))*log2(1/(1-(MINTOTALS$MSAGroup125_150))))

MINTOTALS$TotalEnt100_125 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup100_125)*log2(1/(MINTOTALS$MSAGroup100_125)) + 
                                                          (1-(MINTOTALS$MSAGroup100_125))*log2(1/(1-(MINTOTALS$MSAGroup100_125))))

MINTOTALS$TotalEnt75_100 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup75_100)*log2(1/(MINTOTALS$MSAGroup75_100)) + 
                                                         (1-(MINTOTALS$MSAGroup75_100))*log2(1/(1-(MINTOTALS$MSAGroup75_100))))

MINTOTALS$TotalEnt60_75 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup60_75)*log2(1/(MINTOTALS$MSAGroup60_75)) + 
                                                        (1-(MINTOTALS$MSAGroup60_75))*log2(1/(1-(MINTOTALS$MSAGroup60_75))))

MINTOTALS$TotalEnt50_60 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup50_60)*log2(1/(MINTOTALS$MSAGroup50_60)) + 
                                                        (1-(MINTOTALS$MSAGroup50_60))*log2(1/(1-(MINTOTALS$MSAGroup50_60))))

MINTOTALS$TotalEnt45_50 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup45_50)*log2(1/(MINTOTALS$MSAGroup45_50)) + 
                                                        (1-(MINTOTALS$MSAGroup45_50))*log2(1/(1-(MINTOTALS$MSAGroup45_50))))

MINTOTALS$TotalEnt40_45 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup40_45)*log2(1/(MINTOTALS$MSAGroup40_45)) + 
                                                        (1-(MINTOTALS$MSAGroup40_45))*log2(1/(1-(MINTOTALS$MSAGroup40_45))))

MINTOTALS$TotalEnt35_40 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup35_40)*log2(1/(MINTOTALS$MSAGroup35_40)) + 
                                                        (1-(MINTOTALS$MSAGroup35_40))*log2(1/(1-(MINTOTALS$MSAGroup35_40))))

MINTOTALS$TotalEnt30_35 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup30_35)*log2(1/(MINTOTALS$MSAGroup30_35)) + 
                                                        (1-(MINTOTALS$MSAGroup30_35))*log2(1/(1-(MINTOTALS$MSAGroup30_35))))

MINTOTALS$TotalEnt25_30 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup25_30)*log2(1/(MINTOTALS$MSAGroup25_30)) + 
                                                        (1-(MINTOTALS$MSAGroup25_30))*log2(1/(1-(MINTOTALS$MSAGroup25_30))))

MINTOTALS$TotalEnt20_25 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup20_25)*log2(1/(MINTOTALS$MSAGroup20_25)) + 
                                                        (1-(MINTOTALS$MSAGroup20_25))*log2(1/(1-(MINTOTALS$MSAGroup20_25))))

MINTOTALS$TotalEnt15_20 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup15_20)*log2(1/(MINTOTALS$MSAGroup15_20)) + 
                                                        (1-(MINTOTALS$MSAGroup15_20))*log2(1/(1-(MINTOTALS$MSAGroup15_20))))

MINTOTALS$TotalEnt10_15 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup10_15)*log2(1/(MINTOTALS$MSAGroup10_15)) + 
                                                        (1-(MINTOTALS$MSAGroup10_15))*log2(1/(1-(MINTOTALS$MSAGroup10_15))))

MINTOTALS$TotalEnt10 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$MSAGroup10)*log2(1/(MINTOTALS$MSAGroup10)) + 
                                                     (1-(MINTOTALS$MSAGroup10))*log2(1/(1-(MINTOTALS$MSAGroup10))))

MINTOTALS$ReverseTotalEnt10 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup10)*log2(1/(MINTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(MINTOTALS$ReverseMSAGroup10))*log2(1/(1-(MINTOTALS$ReverseMSAGroup10))))

MINTOTALS$ReverseTotalEnt10_15 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup10_15)*log2(1/(MINTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(MINTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(MINTOTALS$ReverseMSAGroup10_15))))

MINTOTALS$ReverseTotalEnt15_20 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup15_20)*log2(1/(MINTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(MINTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(MINTOTALS$ReverseMSAGroup15_20))))

MINTOTALS$ReverseTotalEnt20_25 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup20_25)*log2(1/(MINTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(MINTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(MINTOTALS$ReverseMSAGroup20_25))))

MINTOTALS$ReverseTotalEnt25_30 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup25_30)*log2(1/(MINTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(MINTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(MINTOTALS$ReverseMSAGroup25_30))))

MINTOTALS$ReverseTotalEnt30_35 <- MINTOTALS$MSAB19001_001 * ((MINTOTALS$ReverseMSAGroup30_35)*log2(1/(MINTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(MINTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(MINTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
MINTOTALS$E200 <- ((MINTOTALS$MSAGroup200)*log2(1/(MINTOTALS$MSAGroup200)) + (1-(MINTOTALS$MSAGroup200))*log2(1/(1-(MINTOTALS$MSAGroup200))))
MINTOTALS$E150_200 <- ((MINTOTALS$MSAGroup150_200)*log2(1/(MINTOTALS$MSAGroup150_200)) + (1-(MINTOTALS$MSAGroup150_200))*log2(1/(1-(MINTOTALS$MSAGroup150_200))))
MINTOTALS$E125_150 <- ((MINTOTALS$MSAGroup125_150)*log2(1/(MINTOTALS$MSAGroup125_150)) + (1-(MINTOTALS$MSAGroup125_150))*log2(1/(1-(MINTOTALS$MSAGroup125_150))))
MINTOTALS$E100_125 <- ((MINTOTALS$MSAGroup100_125)*log2(1/(MINTOTALS$MSAGroup100_125)) + (1-(MINTOTALS$MSAGroup100_125))*log2(1/(1-(MINTOTALS$MSAGroup100_125))))
MINTOTALS$E75_100 <- ((MINTOTALS$MSAGroup75_100)*log2(1/(MINTOTALS$MSAGroup75_100)) + (1-(MINTOTALS$MSAGroup75_100))*log2(1/(1-(MINTOTALS$MSAGroup75_100))))
MINTOTALS$E60_75 <- ((MINTOTALS$MSAGroup60_75)*log2(1/(MINTOTALS$MSAGroup60_75)) + (1-(MINTOTALS$MSAGroup60_75))*log2(1/(1-(MINTOTALS$MSAGroup60_75))))
MINTOTALS$E50_60 <- ((MINTOTALS$MSAGroup50_60)*log2(1/(MINTOTALS$MSAGroup50_60)) + (1-(MINTOTALS$MSAGroup50_60))*log2(1/(1-(MINTOTALS$MSAGroup50_60))))
MINTOTALS$E50_60 <- ((MINTOTALS$MSAGroup50_60)*log2(1/(MINTOTALS$MSAGroup50_60)) + (1-(MINTOTALS$MSAGroup50_60))*log2(1/(1-(MINTOTALS$MSAGroup50_60))))
MINTOTALS$E45_50 <- ((MINTOTALS$MSAGroup45_50)*log2(1/(MINTOTALS$MSAGroup45_50)) + (1-(MINTOTALS$MSAGroup45_50))*log2(1/(1-(MINTOTALS$MSAGroup45_50))))
MINTOTALS$E40_45 <- ((MINTOTALS$MSAGroup40_45)*log2(1/(MINTOTALS$MSAGroup40_45)) + (1-(MINTOTALS$MSAGroup40_45))*log2(1/(1-(MINTOTALS$MSAGroup40_45))))
MINTOTALS$E35_40 <- ((MINTOTALS$MSAGroup35_40)*log2(1/(MINTOTALS$MSAGroup35_40)) + (1-(MINTOTALS$MSAGroup35_40))*log2(1/(1-(MINTOTALS$MSAGroup35_40))))
MINTOTALS$E30_35 <- ((MINTOTALS$MSAGroup30_35)*log2(1/(MINTOTALS$MSAGroup30_35)) + (1-(MINTOTALS$MSAGroup30_35))*log2(1/(1-(MINTOTALS$MSAGroup30_35))))
MINTOTALS$E25_30 <- ((MINTOTALS$MSAGroup25_30)*log2(1/(MINTOTALS$MSAGroup25_30)) + (1-(MINTOTALS$MSAGroup25_30))*log2(1/(1-(MINTOTALS$MSAGroup25_30))))
MINTOTALS$E20_25 <- ((MINTOTALS$MSAGroup20_25)*log2(1/(MINTOTALS$MSAGroup20_25)) + (1-(MINTOTALS$MSAGroup20_25))*log2(1/(1-(MINTOTALS$MSAGroup20_25))))
MINTOTALS$E15_20 <- ((MINTOTALS$MSAGroup15_20)*log2(1/(MINTOTALS$MSAGroup15_20)) + (1-(MINTOTALS$MSAGroup15_20))*log2(1/(1-(MINTOTALS$MSAGroup15_20))))
MINTOTALS$E10_15 <- ((MINTOTALS$MSAGroup10_15)*log2(1/(MINTOTALS$MSAGroup10_15)) + (1-(MINTOTALS$MSAGroup10_15))*log2(1/(1-(MINTOTALS$MSAGroup10_15))))
MINTOTALS$E10 <- ((MINTOTALS$MSAGroup10)*log2(1/(MINTOTALS$MSAGroup10)) + (1-(MINTOTALS$MSAGroup10))*log2(1/(1-(MINTOTALS$MSAGroup10))))
MINTOTALS$ReverseE10 <- ((MINTOTALS$ReverseMSAGroup10)*log2(1/(MINTOTALS$ReverseMSAGroup10)) + (1-(MINTOTALS$ReverseMSAGroup10))*log2(1/(1-(MINTOTALS$ReverseMSAGroup10))))
MINTOTALS$ReverseE10_15 <- ((MINTOTALS$ReverseMSAGroup10_15)*log2(1/(MINTOTALS$ReverseMSAGroup10_15)) + (1-(MINTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(MINTOTALS$ReverseMSAGroup10_15))))
MINTOTALS$ReverseE15_20 <- ((MINTOTALS$ReverseMSAGroup15_20)*log2(1/(MINTOTALS$ReverseMSAGroup15_20)) + (1-(MINTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(MINTOTALS$ReverseMSAGroup15_20))))
MINTOTALS$ReverseE20_25 <- ((MINTOTALS$ReverseMSAGroup20_25)*log2(1/(MINTOTALS$ReverseMSAGroup20_25)) + (1-(MINTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(MINTOTALS$ReverseMSAGroup20_25))))
MINTOTALS$ReverseE25_30 <- ((MINTOTALS$ReverseMSAGroup25_30)*log2(1/(MINTOTALS$ReverseMSAGroup25_30)) + (1-(MINTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(MINTOTALS$ReverseMSAGroup25_30))))
MINTOTALS$ReverseE30_35 <- ((MINTOTALS$ReverseMSAGroup30_35)*log2(1/(MINTOTALS$ReverseMSAGroup30_35)) + (1-(MINTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(MINTOTALS$ReverseMSAGroup30_35))))
MINTOTALS$ReverseE35_40 <- ((MINTOTALS$ReverseMSAGroup35_40)*log2(1/(MINTOTALS$ReverseMSAGroup35_40)) + (1-(MINTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(MINTOTALS$ReverseMSAGroup35_40))))


MIN$Section200 <- MIN$LocalEnt200 / MINTOTALS$TotalEnt200
MIN$Section150_200 <- MIN$LocalEnt150_200 / MINTOTALS$TotalEnt150_200
MIN$Section125_150 <- MIN$LocalEnt125_150 / MINTOTALS$TotalEnt125_150
MIN$Section100_125 <- MIN$LocalEnt100_125 / MINTOTALS$TotalEnt100_125
MIN$Section75_100 <- MIN$LocalEnt75_100 / MINTOTALS$TotalEnt75_100
MIN$Section60_75 <- MIN$LocalEnt60_75 / MINTOTALS$TotalEnt60_75
MIN$Section50_60 <- MIN$LocalEnt50_60 / MINTOTALS$TotalEnt50_60
MIN$Section45_50 <- MIN$LocalEnt45_50 / MINTOTALS$TotalEnt45_50
MIN$Section40_45 <- MIN$LocalEnt40_45 / MINTOTALS$TotalEnt40_45
MIN$Section35_40 <- MIN$LocalEnt35_40 / MINTOTALS$TotalEnt35_40
MIN$Section30_35 <- MIN$LocalEnt30_35 / MINTOTALS$TotalEnt30_35
MIN$Section25_30 <- MIN$LocalEnt25_30 / MINTOTALS$TotalEnt25_30
MIN$Section20_25 <- MIN$LocalEnt20_25 / MINTOTALS$TotalEnt20_25
MIN$Section15_20 <- MIN$LocalEnt15_20 / MINTOTALS$TotalEnt15_20
MIN$Section10_15 <- MIN$LocalEnt10_15 / MINTOTALS$TotalEnt10_15
MIN$Section10 <- MIN$LocalEnt10 / MINTOTALS$TotalEnt10
MIN$ReverseSection10 <- MIN$ReverseLocalEnt10 / MINTOTALS$ReverseTotalEnt10
MIN$ReverseSection10_15 <- MIN$ReverseLocalEnt10_15 / MINTOTALS$ReverseTotalEnt10_15
MIN$ReverseSection15_20 <- MIN$ReverseLocalEnt15_20 / MINTOTALS$ReverseTotalEnt15_20
MIN$ReverseSection20_25 <- MIN$ReverseLocalEnt20_25 / MINTOTALS$ReverseTotalEnt20_25
MIN$ReverseSection25_30 <- MIN$ReverseLocalEnt25_30 / MINTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
MIN[is.na(MIN)] <- 0

MINTOTALS$Percent200 <- 1 - sum(MIN$Section200)
MINTOTALS$Percent150_200 <- 1 - sum(MIN$Section150_200)
MINTOTALS$Percent125_150 <- 1 - sum(MIN$Section125_150)
MINTOTALS$Percent100_125 <- 1 - sum(MIN$Section100_125)
MINTOTALS$Percent75_100 <- 1 - sum(MIN$Section75_100)
MINTOTALS$Percent60_75 <- 1 - sum(MIN$Section60_75)
MINTOTALS$Percent50_60 <- 1 - sum(MIN$Section50_60)
MINTOTALS$Percent45_50 <- 1 - sum(MIN$Section45_50)
MINTOTALS$Percent40_45 <- 1 - sum(MIN$Section40_45)
MINTOTALS$Percent35_40 <- 1 - sum(MIN$Section35_40)
MINTOTALS$Percent30_35 <- 1 - sum(MIN$Section30_35)
MINTOTALS$Percent25_30 <- 1 - sum(MIN$Section25_30)
MINTOTALS$Percent20_25 <- 1 - sum(MIN$Section20_25)
MINTOTALS$Percent15_20 <- 1 - sum(MIN$Section15_20)
MINTOTALS$Percent10_15 <- 1 - sum(MIN$Section10_15)
MINTOTALS$Percent10 <- 1 - sum(MIN$Section10)
MINTOTALS$ReversePercent10 <- 1 - sum(MIN$ReverseSection10)
MINTOTALS$ReversePercent10_15 <- 1 - sum(MIN$ReverseSection10_15)
MINTOTALS$ReversePercent15_20 <- 1 - sum(MIN$ReverseSection15_20)
MINTOTALS$ReversePercent20_25 <- 1 - sum(MIN$ReverseSection20_25)
MINTOTALS$ReversePercent25_30 <- 1 - sum(MIN$ReverseSection25_30)


MINTOTALS$Weight200 <- MINTOTALS$E200 * MINTOTALS$Percent200
MINTOTALS$Weight150_200 <- (MINTOTALS$E150_200 * MINTOTALS$Percent150_200)
MINTOTALS$Weight125_150 <- (MINTOTALS$E125_150 * MINTOTALS$Percent125_150) 
MINTOTALS$Weight100_125 <- (MINTOTALS$E100_125 * MINTOTALS$Percent100_125) 
MINTOTALS$Weight75_100 <- (MINTOTALS$E75_100 * MINTOTALS$Percent75_100)
MINTOTALS$Weight60_75 <- (MINTOTALS$E60_75 * MINTOTALS$Percent60_75) 
MINTOTALS$Weight50_60 <- (MINTOTALS$E50_60 * MINTOTALS$Percent50_60) 
MINTOTALS$Weight45_50 <- (MINTOTALS$E45_50 * MINTOTALS$Percent45_50)
MINTOTALS$Weight40_45 <- (MINTOTALS$E40_45 * MINTOTALS$Percent40_45) 
MINTOTALS$Weight35_40 <- (MINTOTALS$E35_40 * MINTOTALS$Percent35_40) 
MINTOTALS$Weight30_35 <- (MINTOTALS$E30_35 * MINTOTALS$Percent30_35)
MINTOTALS$Weight25_30 <- (MINTOTALS$E25_30 * MINTOTALS$Percent25_30) 
MINTOTALS$Weight20_25 <- (MINTOTALS$E20_25 * MINTOTALS$Percent20_25)
MINTOTALS$Weight15_20 <- (MINTOTALS$E15_20 * MINTOTALS$Percent15_20) 
MINTOTALS$Weight10_15 <- (MINTOTALS$E10_15 * MINTOTALS$Percent10_15) 
MINTOTALS$Weight10 <- (MINTOTALS$E10 * MINTOTALS$Percent10) 
MINTOTALS$ReverseWeight10 <- (MINTOTALS$ReverseE10 * MINTOTALS$ReversePercent10)
MINTOTALS$ReverseWeight10_15 <- (MINTOTALS$ReverseE10_15 * MINTOTALS$ReversePercent10_15)
MINTOTALS$ReverseWeight15_20 <- (MINTOTALS$ReverseE15_20 * MINTOTALS$ReversePercent15_20)
MINTOTALS$ReverseWeight20_25 <- (MINTOTALS$ReverseE20_25 * MINTOTALS$ReversePercent20_25)
MINTOTALS$ReverseWeight25_30 <- (MINTOTALS$ReverseE25_30 * MINTOTALS$ReversePercent25_30)




#trying to recreate the HA stuff I did thru SAS and R
#local

STL$Group200 <- (STL$B19001_017/STL$B19001_001)
STL$Group150_200 <- (STL$B19001_017 + STL$B19001_016)/STL$B19001_001;
STL$Group125_150 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015)/STL$B19001_001;
STL$Group100_125 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014)/STL$B19001_001;
STL$Group75_100 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013)/STL$B19001_001;
STL$Group60_75 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012)/STL$B19001_001;
STL$Group50_60 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011)/STL$B19001_001;
STL$Group45_50 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010)/STL$B19001_001;
STL$Group40_45 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009)/STL$B19001_001;
STL$Group35_40 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008)/STL$B19001_001;
STL$Group30_35 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007)/STL$B19001_001;
STL$Group25_30 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007 + STL$B19001_006)/STL$B19001_001;
STL$Group20_25 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007 + STL$B19001_006 + STL$B19001_005)/STL$B19001_001;
STL$Group15_20 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007 + STL$B19001_006 + STL$B19001_005 + STL$B19001_004)/STL$B19001_001;
STL$Group10_15 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007 + STL$B19001_006 + STL$B19001_005 + STL$B19001_004 + STL$B19001_003)/STL$B19001_001;
STL$Group10 <- (STL$B19001_017 + STL$B19001_016 + STL$B19001_015 + STL$B19001_014 + STL$B19001_013 + STL$B19001_012 + STL$B19001_011 + STL$B19001_010 + STL$B19001_009 + STL$B19001_008 + STL$B19001_007 + STL$B19001_006 + STL$B19001_005 + STL$B19001_004 + STL$B19001_003 + STL$B19001_002)/STL$B19001_001;
STL$ReverseGroup10 <- (STL$B19001_002)/STL$B19001_001;
STL$ReverseGroup10_15 <- (STL$B19001_002 + STL$B19001_003)/STL$B19001_001;
STL$ReverseGroup15_20 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004)/STL$B19001_001;
STL$ReverseGroup20_25 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005)/STL$B19001_001;
STL$ReverseGroup25_30 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006)/STL$B19001_001;
STL$ReverseGroup30_35 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007)/STL$B19001_001;
STL$ReverseGroup35_40 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007 + STL$B19001_008)/STL$B19001_001;
STL$ReverseGroup40_45 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007 + STL$B19001_008 + STL$B19001_009)/STL$B19001_001;
STL$ReverseGroup45_50 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007 + STL$B19001_008 + STL$B19001_009 + STL$B19001_010)/STL$B19001_001;
STL$ReverseGroup50_60 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007 + STL$B19001_008 + STL$B19001_009 + STL$B19001_010 + STL$B19001_011)/STL$B19001_001;
STL$ReverseGroup60_75 <- (STL$B19001_002 + STL$B19001_003 + STL$B19001_004 + STL$B19001_005 + STL$B19001_006 + STL$B19001_007 + STL$B19001_008 + STL$B19001_009 + STL$B19001_010 + STL$B19001_011 + STL$B19001_012)/STL$B19001_001;

STL$LocalEnt200 <- STL$B19001_001 * ((STL$Group200)*log2(1/(STL$Group200)) + 
                                       (1-(STL$Group200))*log2(1/(1-(STL$Group200))))

STL$LocalEnt150_200 <- STL$B19001_001 * ((STL$Group150_200)*log2(1/(STL$Group150_200)) + 
                                           (1-(STL$Group150_200))*log2(1/(1-(STL$Group150_200))))

STL$LocalEnt125_150 <- STL$B19001_001 * ((STL$Group125_150)*log2(1/(STL$Group125_150)) + 
                                           (1-(STL$Group125_150))*log2(1/(1-(STL$Group125_150))))

STL$LocalEnt100_125 <- STL$B19001_001 * ((STL$Group100_125)*log2(1/(STL$Group100_125)) + 
                                           (1-(STL$Group100_125))*log2(1/(1-(STL$Group100_125))))

STL$LocalEnt75_100 <- STL$B19001_001 * ((STL$Group75_100)*log2(1/(STL$Group75_100)) + 
                                          (1-(STL$Group75_100))*log2(1/(1-(STL$Group75_100))))

STL$LocalEnt60_75 <- STL$B19001_001 * ((STL$Group60_75)*log2(1/(STL$Group60_75)) + 
                                         (1-(STL$Group60_75))*log2(1/(1-(STL$Group60_75))))

STL$LocalEnt50_60 <- STL$B19001_001 * ((STL$Group50_60)*log2(1/(STL$Group50_60)) + 
                                         (1-(STL$Group50_60))*log2(1/(1-(STL$Group50_60))))

STL$LocalEnt45_50 <- STL$B19001_001 * ((STL$Group45_50)*log2(1/(STL$Group45_50)) + 
                                         (1-(STL$Group45_50))*log2(1/(1-(STL$Group45_50))))

STL$LocalEnt40_45 <- STL$B19001_001 * ((STL$Group40_45)*log2(1/(STL$Group40_45)) + 
                                         (1-(STL$Group40_45))*log2(1/(1-(STL$Group40_45))))

STL$LocalEnt35_40 <- STL$B19001_001 * ((STL$Group35_40)*log2(1/(STL$Group35_40)) + 
                                         (1-(STL$Group35_40))*log2(1/(1-(STL$Group35_40))))

STL$LocalEnt30_35 <- STL$B19001_001 * ((STL$Group30_35)*log2(1/(STL$Group30_35)) + 
                                         (1-(STL$Group30_35))*log2(1/(1-(STL$Group30_35))))

STL$LocalEnt25_30 <- STL$B19001_001 * ((STL$Group25_30)*log2(1/(STL$Group25_30)) + 
                                         (1-(STL$Group25_30))*log2(1/(1-(STL$Group25_30))))

STL$LocalEnt20_25 <- STL$B19001_001 * ((STL$Group20_25)*log2(1/(STL$Group20_25)) + 
                                         (1-(STL$Group20_25))*log2(1/(1-(STL$Group20_25))))

STL$LocalEnt15_20 <- STL$B19001_001 * ((STL$Group15_20)*log2(1/(STL$Group15_20)) + 
                                         (1-(STL$Group15_20))*log2(1/(1-(STL$Group15_20))))

STL$LocalEnt10_15 <- STL$B19001_001 * ((STL$Group10_15)*log2(1/(STL$Group10_15)) + 
                                         (1-(STL$Group10_15))*log2(1/(1-(STL$Group10_15))))

STL$LocalEnt10 <- STL$B19001_001 * ((STL$Group10)*log2(1/(STL$Group10)) + 
                                      (1-(STL$Group10))*log2(1/(1-(STL$Group10))))

STL$ReverseLocalEnt10 <- STL$B19001_001 * ((STL$ReverseGroup10)*log2(1/(STL$ReverseGroup10)) + 
                                             (1-(STL$ReverseGroup10))*log2(1/(1-(STL$ReverseGroup10))))

STL$ReverseLocalEnt10_15 <- STL$B19001_001 * ((STL$ReverseGroup10_15)*log2(1/(STL$ReverseGroup10_15)) + 
                                                (1-(STL$ReverseGroup10_15))*log2(1/(1-(STL$ReverseGroup10_15))))

STL$ReverseLocalEnt15_20 <- STL$B19001_001 * ((STL$ReverseGroup15_20)*log2(1/(STL$ReverseGroup15_20)) + 
                                                (1-(STL$ReverseGroup15_20))*log2(1/(1-(STL$ReverseGroup15_20))))

STL$ReverseLocalEnt20_25 <- STL$B19001_001 * ((STL$ReverseGroup20_25)*log2(1/(STL$ReverseGroup20_25)) + 
                                                (1-(STL$ReverseGroup20_25))*log2(1/(1-(STL$ReverseGroup20_25))))

STL$ReverseLocalEnt25_30 <- STL$B19001_001 * ((STL$ReverseGroup25_30)*log2(1/(STL$ReverseGroup25_30)) + 
                                                (1-(STL$ReverseGroup25_30))*log2(1/(1-(STL$ReverseGroup25_30))))

STL$ReverseLocalEnt30_35 <- STL$B19001_001 * ((STL$ReverseGroup30_35)*log2(1/(STL$ReverseGroup30_35)) + 
                                                (1-(STL$ReverseGroup30_35))*log2(1/(1-(STL$ReverseGroup30_35))))


#HA stuff Total


STLTOTALS <- STL %>%
  summarise(MSAB19001_001 = sum(STL$B19001_001), MSAB19001_002 = sum(STL$B19001_002), MSAB19001_003 = sum(STL$B19001_003), MSAB19001_004 = sum(STL$B19001_004),
            MSAB19001_005 = sum(STL$B19001_005), MSAB19001_006 = sum(STL$B19001_006), MSAB19001_007 = sum(STL$B19001_007),
            MSAB19001_008 = sum(STL$B19001_008), MSAB19001_009 = sum(STL$B19001_009), MSAB19001_010 = sum(STL$B19001_010),
            MSAB19001_011 = sum(STL$B19001_011), MSAB19001_012 = sum(STL$B19001_012), MSAB19001_013 = sum(STL$B19001_013),
            MSAB19001_014 = sum(STL$B19001_014), MSAB19001_015 = sum(STL$B19001_015), MSAB19001_016 = sum(STL$B19001_016),
            MSAB19001_017 = sum(STL$B19001_017))


STLTOTALS$MSAGroup200 <- (STLTOTALS$MSAB19001_017/STLTOTALS$MSAB19001_001)
STLTOTALS$MSAGroup150_200 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup125_150 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup100_125 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup75_100 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup60_75 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup50_60 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup45_50 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup40_45 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup35_40 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup30_35 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup25_30 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_006)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup20_25 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_005)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup15_20 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_004)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup10_15 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_003)/STLTOTALS$MSAB19001_001;
STLTOTALS$MSAGroup10 <- (STLTOTALS$MSAB19001_017 + STLTOTALS$MSAB19001_016 + STLTOTALS$MSAB19001_015 + STLTOTALS$MSAB19001_014 + STLTOTALS$MSAB19001_013 + STLTOTALS$MSAB19001_012 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_002)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup10 <- (STLTOTALS$MSAB19001_002)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup10_15 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup15_20 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup20_25 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup25_30 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup30_35 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup35_40 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_008)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup40_45 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_009)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup45_50 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_010)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup50_60 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_011)/STLTOTALS$MSAB19001_001;
STLTOTALS$ReverseMSAGroup60_75 <- (STLTOTALS$MSAB19001_002 + STLTOTALS$MSAB19001_003 + STLTOTALS$MSAB19001_004 + STLTOTALS$MSAB19001_005 + STLTOTALS$MSAB19001_006 + STLTOTALS$MSAB19001_007 + STLTOTALS$MSAB19001_008 + STLTOTALS$MSAB19001_009 + STLTOTALS$MSAB19001_010 + STLTOTALS$MSAB19001_011 + STLTOTALS$MSAB19001_012)/STLTOTALS$MSAB19001_001;

STLTOTALS$TotalEnt200 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup200)*log2(1/(STLTOTALS$MSAGroup200)) + 
                                                      (1-(STLTOTALS$MSAGroup200))*log2(1/(1-(STLTOTALS$MSAGroup200))))

STLTOTALS$TotalEnt150_200 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup150_200)*log2(1/(STLTOTALS$MSAGroup150_200)) + 
                                                          (1-(STLTOTALS$MSAGroup150_200))*log2(1/(1-(STLTOTALS$MSAGroup150_200))))

STLTOTALS$TotalEnt125_150 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup125_150)*log2(1/(STLTOTALS$MSAGroup125_150)) + 
                                                          (1-(STLTOTALS$MSAGroup125_150))*log2(1/(1-(STLTOTALS$MSAGroup125_150))))

STLTOTALS$TotalEnt100_125 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup100_125)*log2(1/(STLTOTALS$MSAGroup100_125)) + 
                                                          (1-(STLTOTALS$MSAGroup100_125))*log2(1/(1-(STLTOTALS$MSAGroup100_125))))

STLTOTALS$TotalEnt75_100 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup75_100)*log2(1/(STLTOTALS$MSAGroup75_100)) + 
                                                         (1-(STLTOTALS$MSAGroup75_100))*log2(1/(1-(STLTOTALS$MSAGroup75_100))))

STLTOTALS$TotalEnt60_75 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup60_75)*log2(1/(STLTOTALS$MSAGroup60_75)) + 
                                                        (1-(STLTOTALS$MSAGroup60_75))*log2(1/(1-(STLTOTALS$MSAGroup60_75))))

STLTOTALS$TotalEnt50_60 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup50_60)*log2(1/(STLTOTALS$MSAGroup50_60)) + 
                                                        (1-(STLTOTALS$MSAGroup50_60))*log2(1/(1-(STLTOTALS$MSAGroup50_60))))

STLTOTALS$TotalEnt45_50 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup45_50)*log2(1/(STLTOTALS$MSAGroup45_50)) + 
                                                        (1-(STLTOTALS$MSAGroup45_50))*log2(1/(1-(STLTOTALS$MSAGroup45_50))))

STLTOTALS$TotalEnt40_45 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup40_45)*log2(1/(STLTOTALS$MSAGroup40_45)) + 
                                                        (1-(STLTOTALS$MSAGroup40_45))*log2(1/(1-(STLTOTALS$MSAGroup40_45))))

STLTOTALS$TotalEnt35_40 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup35_40)*log2(1/(STLTOTALS$MSAGroup35_40)) + 
                                                        (1-(STLTOTALS$MSAGroup35_40))*log2(1/(1-(STLTOTALS$MSAGroup35_40))))

STLTOTALS$TotalEnt30_35 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup30_35)*log2(1/(STLTOTALS$MSAGroup30_35)) + 
                                                        (1-(STLTOTALS$MSAGroup30_35))*log2(1/(1-(STLTOTALS$MSAGroup30_35))))

STLTOTALS$TotalEnt25_30 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup25_30)*log2(1/(STLTOTALS$MSAGroup25_30)) + 
                                                        (1-(STLTOTALS$MSAGroup25_30))*log2(1/(1-(STLTOTALS$MSAGroup25_30))))

STLTOTALS$TotalEnt20_25 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup20_25)*log2(1/(STLTOTALS$MSAGroup20_25)) + 
                                                        (1-(STLTOTALS$MSAGroup20_25))*log2(1/(1-(STLTOTALS$MSAGroup20_25))))

STLTOTALS$TotalEnt15_20 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup15_20)*log2(1/(STLTOTALS$MSAGroup15_20)) + 
                                                        (1-(STLTOTALS$MSAGroup15_20))*log2(1/(1-(STLTOTALS$MSAGroup15_20))))

STLTOTALS$TotalEnt10_15 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup10_15)*log2(1/(STLTOTALS$MSAGroup10_15)) + 
                                                        (1-(STLTOTALS$MSAGroup10_15))*log2(1/(1-(STLTOTALS$MSAGroup10_15))))

STLTOTALS$TotalEnt10 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$MSAGroup10)*log2(1/(STLTOTALS$MSAGroup10)) + 
                                                     (1-(STLTOTALS$MSAGroup10))*log2(1/(1-(STLTOTALS$MSAGroup10))))

STLTOTALS$ReverseTotalEnt10 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup10)*log2(1/(STLTOTALS$ReverseMSAGroup10)) + 
                                                            (1-(STLTOTALS$ReverseMSAGroup10))*log2(1/(1-(STLTOTALS$ReverseMSAGroup10))))

STLTOTALS$ReverseTotalEnt10_15 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup10_15)*log2(1/(STLTOTALS$ReverseMSAGroup10_15)) + 
                                                               (1-(STLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(STLTOTALS$ReverseMSAGroup10_15))))

STLTOTALS$ReverseTotalEnt15_20 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup15_20)*log2(1/(STLTOTALS$ReverseMSAGroup15_20)) + 
                                                               (1-(STLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(STLTOTALS$ReverseMSAGroup15_20))))

STLTOTALS$ReverseTotalEnt20_25 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup20_25)*log2(1/(STLTOTALS$ReverseMSAGroup20_25)) + 
                                                               (1-(STLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(STLTOTALS$ReverseMSAGroup20_25))))

STLTOTALS$ReverseTotalEnt25_30 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup25_30)*log2(1/(STLTOTALS$ReverseMSAGroup25_30)) + 
                                                               (1-(STLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(STLTOTALS$ReverseMSAGroup25_30))))

STLTOTALS$ReverseTotalEnt30_35 <- STLTOTALS$MSAB19001_001 * ((STLTOTALS$ReverseMSAGroup30_35)*log2(1/(STLTOTALS$ReverseMSAGroup30_35)) + 
                                                               (1-(STLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(STLTOTALS$ReverseMSAGroup30_35))))

#Entropy calculation
STLTOTALS$E200 <- ((STLTOTALS$MSAGroup200)*log2(1/(STLTOTALS$MSAGroup200)) + (1-(STLTOTALS$MSAGroup200))*log2(1/(1-(STLTOTALS$MSAGroup200))))
STLTOTALS$E150_200 <- ((STLTOTALS$MSAGroup150_200)*log2(1/(STLTOTALS$MSAGroup150_200)) + (1-(STLTOTALS$MSAGroup150_200))*log2(1/(1-(STLTOTALS$MSAGroup150_200))))
STLTOTALS$E125_150 <- ((STLTOTALS$MSAGroup125_150)*log2(1/(STLTOTALS$MSAGroup125_150)) + (1-(STLTOTALS$MSAGroup125_150))*log2(1/(1-(STLTOTALS$MSAGroup125_150))))
STLTOTALS$E100_125 <- ((STLTOTALS$MSAGroup100_125)*log2(1/(STLTOTALS$MSAGroup100_125)) + (1-(STLTOTALS$MSAGroup100_125))*log2(1/(1-(STLTOTALS$MSAGroup100_125))))
STLTOTALS$E75_100 <- ((STLTOTALS$MSAGroup75_100)*log2(1/(STLTOTALS$MSAGroup75_100)) + (1-(STLTOTALS$MSAGroup75_100))*log2(1/(1-(STLTOTALS$MSAGroup75_100))))
STLTOTALS$E60_75 <- ((STLTOTALS$MSAGroup60_75)*log2(1/(STLTOTALS$MSAGroup60_75)) + (1-(STLTOTALS$MSAGroup60_75))*log2(1/(1-(STLTOTALS$MSAGroup60_75))))
STLTOTALS$E50_60 <- ((STLTOTALS$MSAGroup50_60)*log2(1/(STLTOTALS$MSAGroup50_60)) + (1-(STLTOTALS$MSAGroup50_60))*log2(1/(1-(STLTOTALS$MSAGroup50_60))))
STLTOTALS$E50_60 <- ((STLTOTALS$MSAGroup50_60)*log2(1/(STLTOTALS$MSAGroup50_60)) + (1-(STLTOTALS$MSAGroup50_60))*log2(1/(1-(STLTOTALS$MSAGroup50_60))))
STLTOTALS$E45_50 <- ((STLTOTALS$MSAGroup45_50)*log2(1/(STLTOTALS$MSAGroup45_50)) + (1-(STLTOTALS$MSAGroup45_50))*log2(1/(1-(STLTOTALS$MSAGroup45_50))))
STLTOTALS$E40_45 <- ((STLTOTALS$MSAGroup40_45)*log2(1/(STLTOTALS$MSAGroup40_45)) + (1-(STLTOTALS$MSAGroup40_45))*log2(1/(1-(STLTOTALS$MSAGroup40_45))))
STLTOTALS$E35_40 <- ((STLTOTALS$MSAGroup35_40)*log2(1/(STLTOTALS$MSAGroup35_40)) + (1-(STLTOTALS$MSAGroup35_40))*log2(1/(1-(STLTOTALS$MSAGroup35_40))))
STLTOTALS$E30_35 <- ((STLTOTALS$MSAGroup30_35)*log2(1/(STLTOTALS$MSAGroup30_35)) + (1-(STLTOTALS$MSAGroup30_35))*log2(1/(1-(STLTOTALS$MSAGroup30_35))))
STLTOTALS$E25_30 <- ((STLTOTALS$MSAGroup25_30)*log2(1/(STLTOTALS$MSAGroup25_30)) + (1-(STLTOTALS$MSAGroup25_30))*log2(1/(1-(STLTOTALS$MSAGroup25_30))))
STLTOTALS$E20_25 <- ((STLTOTALS$MSAGroup20_25)*log2(1/(STLTOTALS$MSAGroup20_25)) + (1-(STLTOTALS$MSAGroup20_25))*log2(1/(1-(STLTOTALS$MSAGroup20_25))))
STLTOTALS$E15_20 <- ((STLTOTALS$MSAGroup15_20)*log2(1/(STLTOTALS$MSAGroup15_20)) + (1-(STLTOTALS$MSAGroup15_20))*log2(1/(1-(STLTOTALS$MSAGroup15_20))))
STLTOTALS$E10_15 <- ((STLTOTALS$MSAGroup10_15)*log2(1/(STLTOTALS$MSAGroup10_15)) + (1-(STLTOTALS$MSAGroup10_15))*log2(1/(1-(STLTOTALS$MSAGroup10_15))))
STLTOTALS$E10 <- ((STLTOTALS$MSAGroup10)*log2(1/(STLTOTALS$MSAGroup10)) + (1-(STLTOTALS$MSAGroup10))*log2(1/(1-(STLTOTALS$MSAGroup10))))
STLTOTALS$ReverseE10 <- ((STLTOTALS$ReverseMSAGroup10)*log2(1/(STLTOTALS$ReverseMSAGroup10)) + (1-(STLTOTALS$ReverseMSAGroup10))*log2(1/(1-(STLTOTALS$ReverseMSAGroup10))))
STLTOTALS$ReverseE10_15 <- ((STLTOTALS$ReverseMSAGroup10_15)*log2(1/(STLTOTALS$ReverseMSAGroup10_15)) + (1-(STLTOTALS$ReverseMSAGroup10_15))*log2(1/(1-(STLTOTALS$ReverseMSAGroup10_15))))
STLTOTALS$ReverseE15_20 <- ((STLTOTALS$ReverseMSAGroup15_20)*log2(1/(STLTOTALS$ReverseMSAGroup15_20)) + (1-(STLTOTALS$ReverseMSAGroup15_20))*log2(1/(1-(STLTOTALS$ReverseMSAGroup15_20))))
STLTOTALS$ReverseE20_25 <- ((STLTOTALS$ReverseMSAGroup20_25)*log2(1/(STLTOTALS$ReverseMSAGroup20_25)) + (1-(STLTOTALS$ReverseMSAGroup20_25))*log2(1/(1-(STLTOTALS$ReverseMSAGroup20_25))))
STLTOTALS$ReverseE25_30 <- ((STLTOTALS$ReverseMSAGroup25_30)*log2(1/(STLTOTALS$ReverseMSAGroup25_30)) + (1-(STLTOTALS$ReverseMSAGroup25_30))*log2(1/(1-(STLTOTALS$ReverseMSAGroup25_30))))
STLTOTALS$ReverseE30_35 <- ((STLTOTALS$ReverseMSAGroup30_35)*log2(1/(STLTOTALS$ReverseMSAGroup30_35)) + (1-(STLTOTALS$ReverseMSAGroup30_35))*log2(1/(1-(STLTOTALS$ReverseMSAGroup30_35))))
STLTOTALS$ReverseE35_40 <- ((STLTOTALS$ReverseMSAGroup35_40)*log2(1/(STLTOTALS$ReverseMSAGroup35_40)) + (1-(STLTOTALS$ReverseMSAGroup35_40))*log2(1/(1-(STLTOTALS$ReverseMSAGroup35_40))))


STL$Section200 <- STL$LocalEnt200 / STLTOTALS$TotalEnt200
STL$Section150_200 <- STL$LocalEnt150_200 / STLTOTALS$TotalEnt150_200
STL$Section125_150 <- STL$LocalEnt125_150 / STLTOTALS$TotalEnt125_150
STL$Section100_125 <- STL$LocalEnt100_125 / STLTOTALS$TotalEnt100_125
STL$Section75_100 <- STL$LocalEnt75_100 / STLTOTALS$TotalEnt75_100
STL$Section60_75 <- STL$LocalEnt60_75 / STLTOTALS$TotalEnt60_75
STL$Section50_60 <- STL$LocalEnt50_60 / STLTOTALS$TotalEnt50_60
STL$Section45_50 <- STL$LocalEnt45_50 / STLTOTALS$TotalEnt45_50
STL$Section40_45 <- STL$LocalEnt40_45 / STLTOTALS$TotalEnt40_45
STL$Section35_40 <- STL$LocalEnt35_40 / STLTOTALS$TotalEnt35_40
STL$Section30_35 <- STL$LocalEnt30_35 / STLTOTALS$TotalEnt30_35
STL$Section25_30 <- STL$LocalEnt25_30 / STLTOTALS$TotalEnt25_30
STL$Section20_25 <- STL$LocalEnt20_25 / STLTOTALS$TotalEnt20_25
STL$Section15_20 <- STL$LocalEnt15_20 / STLTOTALS$TotalEnt15_20
STL$Section10_15 <- STL$LocalEnt10_15 / STLTOTALS$TotalEnt10_15
STL$Section10 <- STL$LocalEnt10 / STLTOTALS$TotalEnt10
STL$ReverseSection10 <- STL$ReverseLocalEnt10 / STLTOTALS$ReverseTotalEnt10
STL$ReverseSection10_15 <- STL$ReverseLocalEnt10_15 / STLTOTALS$ReverseTotalEnt10_15
STL$ReverseSection15_20 <- STL$ReverseLocalEnt15_20 / STLTOTALS$ReverseTotalEnt15_20
STL$ReverseSection20_25 <- STL$ReverseLocalEnt20_25 / STLTOTALS$ReverseTotalEnt20_25
STL$ReverseSection25_30 <- STL$ReverseLocalEnt25_30 / STLTOTALS$ReverseTotalEnt25_30

#You cannot sum with NaN's, they need to be replaced with 0's
STL[is.na(STL)] <- 0

STLTOTALS$Percent200 <- 1 - sum(STL$Section200)
STLTOTALS$Percent150_200 <- 1 - sum(STL$Section150_200)
STLTOTALS$Percent125_150 <- 1 - sum(STL$Section125_150)
STLTOTALS$Percent100_125 <- 1 - sum(STL$Section100_125)
STLTOTALS$Percent75_100 <- 1 - sum(STL$Section75_100)
STLTOTALS$Percent60_75 <- 1 - sum(STL$Section60_75)
STLTOTALS$Percent50_60 <- 1 - sum(STL$Section50_60)
STLTOTALS$Percent45_50 <- 1 - sum(STL$Section45_50)
STLTOTALS$Percent40_45 <- 1 - sum(STL$Section40_45)
STLTOTALS$Percent35_40 <- 1 - sum(STL$Section35_40)
STLTOTALS$Percent30_35 <- 1 - sum(STL$Section30_35)
STLTOTALS$Percent25_30 <- 1 - sum(STL$Section25_30)
STLTOTALS$Percent20_25 <- 1 - sum(STL$Section20_25)
STLTOTALS$Percent15_20 <- 1 - sum(STL$Section15_20)
STLTOTALS$Percent10_15 <- 1 - sum(STL$Section10_15)
STLTOTALS$Percent10 <- 1 - sum(STL$Section10)
STLTOTALS$ReversePercent10 <- 1 - sum(STL$ReverseSection10)
STLTOTALS$ReversePercent10_15 <- 1 - sum(STL$ReverseSection10_15)
STLTOTALS$ReversePercent15_20 <- 1 - sum(STL$ReverseSection15_20)
STLTOTALS$ReversePercent20_25 <- 1 - sum(STL$ReverseSection20_25)
STLTOTALS$ReversePercent25_30 <- 1 - sum(STL$ReverseSection25_30)


STLTOTALS$Weight200 <- STLTOTALS$E200 * STLTOTALS$Percent200
STLTOTALS$Weight150_200 <- (STLTOTALS$E150_200 * STLTOTALS$Percent150_200)
STLTOTALS$Weight125_150 <- (STLTOTALS$E125_150 * STLTOTALS$Percent125_150) 
STLTOTALS$Weight100_125 <- (STLTOTALS$E100_125 * STLTOTALS$Percent100_125) 
STLTOTALS$Weight75_100 <- (STLTOTALS$E75_100 * STLTOTALS$Percent75_100)
STLTOTALS$Weight60_75 <- (STLTOTALS$E60_75 * STLTOTALS$Percent60_75) 
STLTOTALS$Weight50_60 <- (STLTOTALS$E50_60 * STLTOTALS$Percent50_60) 
STLTOTALS$Weight45_50 <- (STLTOTALS$E45_50 * STLTOTALS$Percent45_50)
STLTOTALS$Weight40_45 <- (STLTOTALS$E40_45 * STLTOTALS$Percent40_45) 
STLTOTALS$Weight35_40 <- (STLTOTALS$E35_40 * STLTOTALS$Percent35_40) 
STLTOTALS$Weight30_35 <- (STLTOTALS$E30_35 * STLTOTALS$Percent30_35)
STLTOTALS$Weight25_30 <- (STLTOTALS$E25_30 * STLTOTALS$Percent25_30) 
STLTOTALS$Weight20_25 <- (STLTOTALS$E20_25 * STLTOTALS$Percent20_25)
STLTOTALS$Weight15_20 <- (STLTOTALS$E15_20 * STLTOTALS$Percent15_20) 
STLTOTALS$Weight10_15 <- (STLTOTALS$E10_15 * STLTOTALS$Percent10_15) 
STLTOTALS$Weight10 <- (STLTOTALS$E10 * STLTOTALS$Percent10) 
STLTOTALS$ReverseWeight10 <- (STLTOTALS$ReverseE10 * STLTOTALS$ReversePercent10)
STLTOTALS$ReverseWeight10_15 <- (STLTOTALS$ReverseE10_15 * STLTOTALS$ReversePercent10_15)
STLTOTALS$ReverseWeight15_20 <- (STLTOTALS$ReverseE15_20 * STLTOTALS$ReversePercent15_20)
STLTOTALS$ReverseWeight20_25 <- (STLTOTALS$ReverseE20_25 * STLTOTALS$ReversePercent20_25)
STLTOTALS$ReverseWeight25_30 <- (STLTOTALS$ReverseE25_30 * STLTOTALS$ReversePercent25_30)




