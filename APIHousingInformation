library(tidycensus)
library(purrr)
library(tigris)
library(maptools)
library(reshape)
library(SparkR)
library(tidyverse)
library(directlabels)
library(ggrepel)

#Installing census key on your computer

census_api_key(key = "your key", install = TRUE, overwrite = TRUE)

#creating a list of relevant variable from ACS

household_income <- c("B19001_001","B19001_002","B19001_003","B19001_004","B19001_005","B19001_006"
                      ,"B19001_007","B19001_008","B19001_009","B19001_010","B19001_011","B19001_012"
                      ,"B19001_013","B19001_014","B19001_015","B19001_016","B19001_017")

transport <- c("B08006_001","B08006_003","B08006_004","B08006_009","B08006_010","B08006_011",
               "B08006_012","B08006_013","B08006_014","B08006_015","B08006_016","B08006_017")

commute <- c("B08012_001","B08012_002","B08012_003","B08012_004","B08012_005","B08012_006","B08012_007",
             "B08012_008","B08012_009","B08012_010","B08012_011","B08012_012","B08012_013")

workers <- c("B08007_001")

#aggregating all ACS metric by year

acs1718 <- c("B19113_001","B25018_001","B25064_001","B25077_001","B08007_001","B15003_001","B15003_022",
           "B08301_001","B08301_010","B08301_003","B08134_001","B08134_002","B08134_003","B08134_004",
           "B08134_005","B08134_006","B08134_007","B08134_008","B08134_009","B08134_010")

acs1316 <- c("B19113_001","B25018_001","B25064_001","B25077_001","B08007_001","B15003_001","B15003_022",
             "B08301_001","B08301_010","B08301_003","B08303_001","B08303_002","B08303_003","B08303_004",
             "B08303_005","B08303_006","B08303_007","B08303_008","B08303_009","B08303_010","B08303_011",
             "B08303_012","B08303_013")

homeattributes <- c("B25018_001","B25035_001")

#list all the counties in an MSA

#NYCCounties

Nycounties <- c("Kings","Queens","New York","Bronx","Richmond",
                "Westchester","Rockland","Orange","Suffolk","Nassau",
                "Putnam","Dutchess")

NJNYCCounties <- c("Bergen","Passaic","Sussex","Union","Ocean","Hudson",
                   "Monmouth","Middlesex","Somerset","Hunterdon","Morris","Essex")

PANYCCounties <- c("Pike")



#DCCounties

VADCCounties <- c("Alexandria City", "Arlington", "Clarke", "Culpeper", "Fairfax County", "Fairfax City", 
                  "Falls Church City", "Fauquier", "Fredericksburg City", 
                  "Loudoun", "Manassas City", "Manassas Park City", "Prince William", 
                  "Rappahannock", "Spotsylvania", "Stafford", "Warren")

MDDCCounties <- c("Calvert","Prince George's","Montgomery","Frederick","Charles")

WVDCCounties <- c("Jefferson")


#ChiCounties

ILCHCounties <- c("Cook","DeKalb","DuPage","Grundy","Kankakee",
                "Kane","Kendall","McHenry","Will ","Lake")

INCounties <- c("Jasper","Lake","Newton","Porter")

WICHCounties <- c("Kenosha")


#BosCounties

NHCounties <- c("Strafford","Rockingham")

MACounties <- c("Middlesex","Suffolk","Norfolk","Plymouth","Essex")


#PHLCounties

NJPHLCounties <- c("Burlington","Salem","Gloucester","Camden")

PACounties <- c("Bucks","Montgomery","Philadelphia","Delaware","Chester")

DECounties <- c("New Castle")

MDPHLCounties <- c("Cecil")


#Miami

FLMICounties <- c("Palm Beach", "Broward", "Miami-Dade")


#Dallas

TXDACounties <- c("Wise","Denton","Collin ","Hunt","Rockwall",
                  "Dallas","Parker","Tarrant","Kaufman","Hood",
                  "Somervell","Johnson","Ellis")

#Houston

TXHOCounties <- c("Austin","Waller","Montgomery","Liberty",
                  "Chambers","Harris ","Fort Bend", "Brazoria",
                  "Galveston")

#Phoenix

AZCounties <- c("Maricopa","Pinal")


#Las Vegas

NVCounties <- c("Clark")


#Los Angeles

CALACounties <- c("Los Angeles", "Orange")



#San Diego

CASDCounties <- c("San Diego")



#San Francisco

CASFCounties <- c("San Mateo","Alameda", "Contra Costa",
                  "San Francisco","Marin")


#Atlanta

GACounties <- c("Barrow","Bartow","Butts","Carroll","Cherokee",
                "Clayton","Cobb","Coweta","Dawson","DeKalb","Douglas",
                "Fayette","Forsyth","Fulton","Gwinnett","Hall",
                "Haralson","Heard","Henry","Jasper","Lamar",
                "Meriwether","Morgan","Newton","Paulding","Pickens",
                "Pike","Rockdale","Spalding","Walton")

#Detroit

MICounties <- c("Lapeer","Livingston","Macomb","Oakland",
                "St. Clair","Wayne")


#Seattle

WASECounties <- c("King","Pierce","Snohomish")


#Minneapolis

MNMICounties <- c("Hennepin","Ramsey","Dakota","Anoka",
                  "Washington","Scott","Carver","Wright",
                  "Sherburne","Chisago","Isanti","Le Sueur",
                  "Mille Lacs","Sibley","Stearns","Benton",
                  "Rice","Goodhue","McLeod")

WIMICounties <- c("St. Croix","Pierce")



#StLouis

ILSTCounties <- c("Bond","Calhoun","Clinton","Jersey","Macoupin",
                  "Madison","Monroe","St. Clair")

MOCounties <- c("Franklin","Jefferson","Lincoln","St. Charles",
                "St. Louis City", "St. Louis Co","Warren")

#Denver

COCounties <- c("Adams","Arapahoe","Elbert","Broomfield","Boulder","Gilpin","Clear Creek",
           "Park","Jefferson","Douglas","Denver")

#Begin pulling information from Census

#NYC

NewYorker <- map_dfr(Nycounties, 
                     ~ get_acs(
                       geography = "Block group", 
                       state = "NY", 
                       county = ., 
                       variables = homeattributes,
                       year = 2018)
) 

NJNYC <- map_dfr(NJNYCCounties, 
                 ~ get_acs(
                   geography = "Block group", 
                   state = "NJ", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018)
) 

PANYC <- map_dfr(PANYCCounties, 
                 ~ get_acs(
                   geography = "Block group", 
                   state = "PA", 
                   county = ., 
                   survey = "acs5",
                   variables = homeattributes,
                   year = 2018)
) 

NYC <- rbind(NewYorker, NJNYC,PANYC)

NYC <- add_column(NYC, city = "NYC")

#reshape table with cast... need to drop moe

NYC2 <- subset(NYC, select = -c(moe))

NYC <- NYC2 %>% spread(variable,estimate)

#DC

DC <- get_acs(geography = "Block group", 
              state = "DC", 
              county = 001,
              variables = homeattributes, 
              year = 2018)

WV <- map_dfr(WVDCCounties, 
              ~ get_acs(
                geography = "Block Group", 
                state = "WV", 
                county = ., 
                variables = homeattributes,
                year = 2018)
)           

VA <- map_dfr(VADCCounties,
              ~ get_acs(
                geography = "Block Group", 
                state = "VA", 
                county = ., 
                variables = homeattributes,
                year = 2018)
)    

MD <- map_dfr(MDDCCounties,
              ~ get_acs(
                geography = "Block Group", 
                state = "MD", 
                county = ., 
                variables = homeattributes,
                year = 2018)
)

DCPSU <- rbind(DC,MD,VA,WV) 

DCPSU <- add_column(DCPSU, city = "DC")

DC2 <- subset(DCPSU, select = -c(moe))

DC <- DC2 %>% spread(variable,estimate)


#CHI

ILCHI <- map_dfr(ILCHCounties,
                     ~ get_acs(
                       geography = "Block Group", 
                       state = "IL", 
                       county = ., 
                       variables = homeattributes,
                       year = 2018))
                 
INCHI <- map_dfr(INCounties,
                      ~ get_acs(
                        geography = "Block Group", 
                        state = "IN", 
                        county = ., 
                        variables = homeattributes,
                        year = 2018))
                      
WICHI <- map_dfr(WICHCounties,
                        ~ get_acs(
                          geography = "Block Group", 
                          state = "WI", 
                          county = ., 
                          variables = homeattributes,
                          year = 2018))

CHIPSU <- rbind(WICHI,ILCHI,INCHI)

CHIPSU <- add_column(CHIPSU, city = "CHI")

CHI2 <- subset(CHIPSU, select = -c(moe))

CHI <- CHI2 %>% spread(variable,estimate)


#BOS

NHBOS <- map_dfr(NHCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "NH", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

MABOS <- map_dfr(MACounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "MA", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

BOSPSU <- rbind(MABOS,NHBOS) 

BOSPSU <- add_column(BOSPSU, city = "BOS")

BOSPSU2 <- subset(BOSPSU, select = -c(moe))

BOS <- BOSPSU2 %>% spread(variable,estimate)



#PHL

NJPHL <- map_dfr(NJPHLCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "NJ", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

PAPHL <- map_dfr(PACounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "PA", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

DEPHL <- map_dfr(DECounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "DE", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

MDPHL <- map_dfr(MDPHLCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "MD", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

PHLPSU <- rbind(MDPHL,DEPHL,PAPHL,NJPHL)

PHLPSU <- add_column(PHLPSU, city = "PHL")

PHL2 <- subset(PHLPSU, select = -c(moe))

PHL <- PHL2 %>% spread(variable,estimate)



#MIA

FLMIA <- map_dfr(FLMICounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "FL", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

FLMIA <- add_column(FLMIA, city = "MIA")

MIA2 <- subset(FLMIA, select = -c(moe))

MIA <- MIA2 %>% spread(variable,estimate)

#DAL

TXDAL <- map_dfr(TXDACounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "TX", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

TXDAL <- add_column(TXDAL, city = "DAL")

DAL2 <- subset(TXDAL, select = -c(moe))

DAL <- DAL2 %>% spread(variable,estimate)


#HOU

TXHOU <- map_dfr(TXHOCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "TX", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

TXHOU <- add_column(TXHOU, city = "HOU")

HOU2 <- subset(TXHOU, select = -c(moe))

HOU <- HOU2 %>% spread(variable,estimate)


#PHX

PHXAZ <- map_dfr(AZCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "AZ", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

PHXAZ <- add_column(PHXAZ, city = "PHX")

PHX2 <- subset(PHXAZ, select = -c(moe))

PHX <- PHX2 %>% spread(variable,estimate)

 
#LV

NVLV <- map_dfr(NVCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "NV", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

NVLV <- add_column(NVLV, city = "LV")

LV2 <- subset(NVLV, select = -c(moe))

LV <- LV2 %>% spread(variable,estimate)



#SD

CASD <- map_dfr(CASDCounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "CA", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

CASD <- add_column(CASD, city = "SD")

SD2 <- subset(CASD, select = -c(moe))

SD <- SD2 %>% spread(variable,estimate)


#SD

CALA <- map_dfr(CALACounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "CA", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

CALA <- add_column(CALA, city = "LA")

LA2 <- subset(CALA, select = -c(moe))

LA <- LA2 %>% spread(variable,estimate)


#SF

CASF <- map_dfr(CASFCounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "CA", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

CASF <- add_column(CASF, city = "SF")

SF2 <- subset(CASF, select = -c(moe))

SF <- SF2 %>% spread(variable,estimate)


#ATL

GAATL <- map_dfr(GACounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "GA", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

GAATL <- add_column(GAATL, city = "ATL")

ATL2 <- subset(GAATL, select = -c(moe))

ATL <- ATL2 %>% spread(variable,estimate)

#DT

MIDT <- map_dfr(MICounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "MI", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

MIDT <- add_column(MIDT, city = "DT")

DT2 <- subset(MIDT, select = -c(moe))

DT <- DT2 %>% spread(variable,estimate)

#SEA

WASEA <- map_dfr(WASECounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "WA", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

WASEA <- add_column(WASEA, city = "SEA")

SEA2 <- subset(WASEA, select = -c(moe))

SEA <- SEA2 %>% spread(variable,estimate)


#MIN

MIMIN <- map_dfr(MNMICounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "MN", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

WIMIN <- map_dfr(WIMICounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "WI", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

MINPSU <- rbind(MIMIN,WIMIN) 

MINPSU <- add_column(MINPSU, city = "MIN")

MIN2 <- subset(MINPSU, select = -c(moe))

MIN <- MIN2 %>% spread(variable,estimate)


#STL

ILST <- map_dfr(ILSTCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "IL", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

MOST <- map_dfr(MOCounties,
                 ~ get_acs(
                   geography = "Block Group", 
                   state = "MO", 
                   county = ., 
                   variables = homeattributes,
                   year = 2018))

STLPSU <- rbind(ILST,MOST) 

STLPSU <- add_column(STLPSU, city = "STL")

STLPSU <- subset(STLPSU, select = -c(moe))

STL <- STLPSU %>% spread(variable,estimate)


#DEN

CODEN <- map_dfr(COCounties,
                ~ get_acs(
                  geography = "Block Group", 
                  state = "CO", 
                  county = ., 
                  variables = homeattributes,
                  year = 2018))

DEN <- add_column(CODEN, city = "DEN")

DEN2 <- subset(DEN, select = -c(moe))

DEN <- DEN2 %>% spread(variable,estimate)


#MergingAllCities, Do this for all ACS years. Run for 2013, then 2014 and so on.

ALLCITIES <- rbind(ATL,BOS,CHI,DAL,DC,DEN,DT,HOU,LA,LV,MIA,
                   MIN,NYC,PHL,PHX,SD,SEA,SF,STL)

ALLCITIES$city <- as.factor(ALLCITIES$city)

ALLCITIES18 <- add_column(ALLCITIES, year = 2018)

ALLCITIES <- ALLCITIES %>%
  inner_join(chungus, by="GEOID")

ALLCITIES <- rbind(ALLCITIES13,ALLCITIES14,ALLCITIES15,ALLCITIES16,ALLCITIES17,ALLCITIES18)
ALLCITIES$GEOID <- as.numeric(ALLCITIES$GEOID)

write.csv(ALLCITIES,"your location", row.names = TRUE)

#Looking up the ACS5year variables and names

v10 <- load_variables(2010, "acs5", cache = TRUE)
v10

v16 <- load_variables(2013, "acs5", cache = TRUE)
v16
